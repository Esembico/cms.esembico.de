{"version":3,"sources":["redux/helpers/createReducer.js","helpers/api.js","redux/helpers/getActions.js","redux/helpers/getMappers.js","redux/helpers/getSelectors.js","helpers/caseConverter.js","components/Responsive/Row.js","components/EditorField/TextFieldImpl.js","helpers/getDisplayValue.js","components/EditorField/SearchableField.js","components/EditorField/InputErrors.js","components/EditorField/MarkdownEditor.js","components/EditorField/SelectImpl.js","helpers/getLabelText.js","helpers/makeEditor.js","helpers/makeValidation.js","helpers/makeValidationErrorHandler.js","components/DataTable/DataTable.js","components/Header.js","components/Responsive/Container.js","helpers/makeListPage.js","components/Responsive/Column.js","components/ButtonWithLoading.js","helpers/makeEditPage.js","register/stateRegister.js","register/options/teamOptions.js","register/options/recommendationOptions.js","register/options/imageOptions.js","register/options/prototypeOptions.js","register/options/pageOptions.js","register/initialize.js","redux/actionTypes.js","redux/reducers/auth.js","components/PrivateRoute.js","redux/reducers/pageState.js","components/ListItemLink.js","components/Base.js","pages/Home.js","pages/NotFound.js","pages/Login.js","App.js","reportWebVitals.js","redux/reducers/index.js","redux/store.js","index.js"],"names":["initialState","allIds","byIds","byPage","error","status","lastPage","currentPage","totalItems","selectedId","editedData","filteredData","pageLoaded","lastEditedField","createReducer","entity","actionEntity","replace","toUpperCase","state","action","type","page","id","newIds","includes","data","push","newData","field","value","trackField","page1","new","unshift","ids","newLookup","pageItems","payload","nextPage","forEach","member","lookup","newLastPage","Math","max","count","Date","now","generateHeaders","token","headers","Authorization","fetchWrapper","url","options","Promise","resolve","reject","fetch","then","res","ok","json","message","catch","getActions","endpoint","getPageAction","forceLoad","dispatch","getState","auth","lastLoaded","stateRegister","getSelector","getPageLastLoaded","diff","process","getOption","getNextPageNumber","results","err","fetchAction","selectItemAction","setEditedDataAction","updateEditedDataAction","commitDataAction","callback","storeGetter","method","body","JSON","stringify","setFilteredDataAction","search","deleteItemAction","store","getCurrentPage","getMappers","mapStateToProps","getSelectors","getError","getStatus","getCurrentPageData","getLastPage","getSelectedId","getSelectedData","getEditedData","getTotalItems","getLastEditedField","selectedData","mapDispatchToProps","bindActionCreators","fetchData","selectPage","selectItem","setEditedData","updateEditedData","commitData","deleteItem","getList","getById","getPage","get","map","getFilteredData","toUpperCaseFirstChar","str","charAt","slice","Row","children","className","TextFieldImpl","label","errors","other","classes","TextField","helperText","join","fullWidth","margin","getDisplayValue","obj","displayDefinition","SearchableField","onChange","required","useStore","getAction","getFilteredDataSelector","primaryProperty","useDispatch","Fragment","Autocomplete","getOptionLabel","option","display","_","newValue","onInputChange","e","renderInput","params","getOptionSelected","useStyles","makeStyles","theme","color","palette","main","InputErrors","Array","isArray","i","formGroup","marginBottom","spacing","editor","border","primary","backgroundColor","text","background","default","maxWidth","editorError","languages","vba","languageVBA","python","languagePython","renderers","code","language","getLanguageFunction","image","MarkdownEditor","useState","selectedTab","setSelectedTab","clsx","onTabChange","generateMarkdownPreview","markdown","source","SelectImpl","FormControl","InputLabel","Select","displayEmpty","MenuItem","FormHelperText","getLabelText","createFieldForProperty","property","onUpdate","others","if","name","target","multiline","to","dependsOn","InputProps","readOnly","makeEditor","proprties","makeValidation","requireNumber","isNaN","requireUrl","URL","makeValidationErrorHandler","usePaginationStyle","root","flexShrink","marginLeft","TablePaginationActions","onChangePage","rowsPerPage","useTheme","IconButton","onClick","disabled","aria-label","direction","ceil","DataTable","columns","pageData","onPageChange","onSelect","selected","TableContainer","Table","TableHead","TableRow","column","TableCell","header","TableBody","entry","hover","di","TableFooter","TablePagination","rowsPerPageOptions","colSpan","parseInt","current","SelectProps","inputProps","native","ActionsComponent","Header","loading","Typography","variant","LinearProgress","Container","fab","position","bottom","right","dataTable","makeListPage","connect","history","useHistory","useEffect","last","getEditUrl","Fab","Column","width","buttonProgress","top","left","marginTop","ButtonWithLoading","props","Button","CircularProgress","size","makeEditPage","Editor","setErrors","confirmationOpen","setConfirmationOpen","validateData","useParams","handleClose","onSubmit","preventDefault","Object","keys","length","ButtonGroup","getListUrl","Dialog","open","onClose","aria-labelledby","aria-describedby","DialogTitle","DialogContent","DialogContentText","DialogActions","this","states","defaultOptions","globalOptions","mergedOptions","buildValidationFromEditor","Error","actions","selectors","mappers","reducer","links","entries","icon","routes","listPath","editPath","listComponent","editComponent","defaultValue","entityName","actionName","selectorName","reducers","word","index","toLowerCase","teamOptions","singularName","artist_name","recommendationOptions","imageOptions","height","prototypeOptions","pageOptions","setGlobalOptions","next","groups","match","register","SET_TOKEN","SET_USERNAME","SET_AUTH_ERROR","SET_SIDEBAR_VISIBLE","localStorage","getItem","username","logoutAction","validateAuthAction","stateGetter","user","authAction","password","non_field_errors","Component","component","rest","render","sidebarVisible","setSidebarVisibleAction","visible","ListItemLink","exact","ListItem","button","NavLink","activeClassName","ListItemIcon","ListItemText","drawerWidth","appBar","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","easeOut","enteringScreen","menuButton","marginRight","title","flexGrow","hide","drawer","drawerPaper","drawerHeader","alignItems","padding","mixins","toolbar","justifyContent","content","contentSmUp","contentShift","DrawerContent","handleDrawerClose","entityLinks","Divider","List","link","pageState","setSidebarVisible","logout","getLinks","smUp","useMediaQuery","breakpoints","up","anchorEl","setAnchorEl","Boolean","handleCloseMenu","AppBar","Toolbar","edge","noWrap","aria-controls","aria-haspopup","event","currentTarget","anchorOrigin","vertical","horizontal","keepMounted","transformOrigin","Drawer","anchor","paper","Home","NotFound","flexDirection","avatar","secondary","form","submit","setUsername","setPassword","Avatar","autoFocus","autoComplete","validateAuth","getRoutes","prefersDarkMode","useMemo","responsiveFontSizes","createMuiTheme","ThemeProvider","path","Login","route","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","combineReducers","getReducers","setItem","middlewares","thunk","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","createStore","rootReducer","applyMiddleware","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.3b4ad8da.chunk.js","sourcesContent":["const initialState = {\n  allIds: [],\n  byIds: {},\n  byPage: {},\n  error: null,\n  status: 'idle',\n  lastPage: 1,\n  currentPage: 1,\n  totalItems: 0,\n  selectedId: null,\n  editedData: null,\n  filteredData: [],\n  pageLoaded: {},\n  lastEditedField: null\n};\n\nexport default function createReducer(entity) {\n  const actionEntity = entity.replace(' ', '_').toUpperCase();\n  const reducer = (state = initialState, action) => {\n    switch (action.type) {\n      case `SELECT_${actionEntity}_ID`:\n        return {\n          ...state,\n          selectedId: action.selectedId\n        };\n      case `SET_PAGE_${actionEntity}`:\n        return {\n          ...state,\n          currentPage: action.page\n        };\n      case `SET_EDITED_DATA_${actionEntity}`:\n        const editedData = action.id === -1 ? {} : state.byIds[action.id];\n        return {\n          ...state,\n          editedData\n        };\n      case `UPDATE_DATA_${actionEntity}`:\n        const newIds = state.allIds;\n        if (!newIds.includes(action.data.id)) {\n          newIds.push(action.data.id);\n        }\n        return {\n          ...state,\n          allIds: newIds,\n          byIds: {\n            ...state.byIds,\n            [action.data.id]: action.data\n          }\n        };\n      case `UPDATE_EDITED_DATA_${actionEntity}`:\n        const newData = { ...state.editedData, [action.field]: action.value };\n        return {\n          ...state,\n          editedData: newData,\n          lastEditedField: action.trackField\n            ? action.field\n            : state.lastEditedField\n        };\n      case `UPDATE_${actionEntity}`:\n        const page1 = state.byPage[1];\n        if (action.new) {\n          page1.unshift(action.data.id);\n        }\n        return {\n          ...state,\n          byIds: {\n            ...state.byIds,\n            [action.data.id]: action.data\n          },\n          pageLoaded: {}\n        };\n      case `FETCH_${actionEntity}_PENDING`:\n        return {\n          ...state,\n          status: 'loading'\n        };\n      case `SET_FILTERED_DATA_${actionEntity}`:\n        return {\n          ...state,\n          filteredData: action.data\n        };\n      case `FETCH_${actionEntity}_SUCCESS`:\n        const ids = [];\n        const newLookup = {};\n        const pageItems = [];\n        const { data, page, nextPage } = action.payload;\n        data.forEach((member) => {\n          pageItems.push(member.id);\n          ids.push(member.id);\n          newLookup[member.id] = member;\n        });\n\n        const lookup = { ...state.byIds, ...newLookup };\n\n        const newLastPage = Math.max(\n          state.lastPage,\n          nextPage || state.lastPage\n        );\n\n        return {\n          ...state,\n          allIds: ids,\n          byIds: lookup,\n          byPage: { ...state.byPage, [page]: pageItems },\n          status: 'idle',\n          lastPage: newLastPage,\n          currentPage: page,\n          totalItems: action.payload.count,\n          pageLoaded: {\n            ...state.pageLoaded,\n            [page]: Date.now()\n          }\n        };\n      case `FETCH_${actionEntity}_ERROR`:\n        return {\n          ...state,\n          error: action.error,\n          status: 'idle'\n        };\n      case `SET_STATUS_${actionEntity}`:\n        return {\n          ...state,\n          status: action.status\n        };\n      default:\n        return state;\n    }\n  };\n\n  return reducer;\n}\n","export function generateHeaders(token) {\n  const headers = {\n    'Content-Type': 'application/json'\n  };\n  if (token) {\n    headers.Authorization = `Token ${token}`;\n  }\n\n  return headers;\n}\n\nexport function fetchWrapper(url, options) {\n  return new Promise((resolve, reject) => {\n    fetch(url, options)\n      .then((res) => {\n        if (!res.ok) {\n          res.json().then((json) => {\n            reject({ status: res.status, message: json });\n          });\n          return;\n        }\n        if (res.status === 204) {\n          resolve();\n          return;\n        }\n        res.json().then((json) => {\n          resolve(json);\n        });\n      })\n      .catch(reject);\n  });\n}\n","import stateRegister from '../../register/stateRegister';\nimport { generateHeaders, fetchWrapper } from '../../helpers/api';\n\nexport default function getActions(entity, endpoint) {\n  const actionEntity = entity.replace(' ', '_').toUpperCase();\n\n  const getPageAction = (page, forceLoad) => {\n    return (dispatch, getState) => {\n      const state = getState();\n      const token = state.auth.token;\n      const getPageLastLoaded = stateRegister.getSelector(\n        entity,\n        'getPageLastLoaded'\n      );\n      const lastLoaded = getPageLastLoaded(state, page);\n\n      const diff = Date.now() - lastLoaded;\n\n      if (!forceLoad && diff < 60000) {\n        dispatch({ type: `SET_PAGE_${actionEntity}`, page });\n        return;\n      }\n\n      dispatch({ type: `FETCH_${actionEntity}_PENDING` });\n      fetchWrapper(\n        `${process.env.REACT_APP_API_URL}/${endpoint}/?page=${page}`,\n        {\n          headers: generateHeaders(token)\n        }\n      )\n        .then((json) => {\n          const getNextPageNumber = stateRegister.getOption(\n            entity,\n            'getNextPageNumber'\n          );\n          const nextPage = getNextPageNumber(json);\n          dispatch({\n            type: `FETCH_${actionEntity}_SUCCESS`,\n            payload: {\n              data: json.results,\n              count: json.count,\n              page,\n              nextPage\n            }\n          });\n          return json.results;\n        })\n        .catch((err) => {\n          dispatch({ type: `FETCH_${actionEntity}_ERROR`, error: err });\n        });\n    };\n  };\n\n  const deleteItemAction = (id, callback) => {\n    return (dispatch, storeGetter) => {\n      dispatch({ type: `SET_STATUS_${actionEntity}`, status: 'deleting' });\n      const store = storeGetter();\n      const token = store.auth.token;\n      const getCurrentPage = stateRegister.getSelector(\n        entity,\n        'getCurrentPage'\n      );\n      fetchWrapper(`${process.env.REACT_APP_API_URL}/${endpoint}/${id}/`, {\n        method: 'DELETE',\n        headers: generateHeaders(token)\n      })\n        .then(() => {\n          const page = getCurrentPage(store);\n          dispatch(getPageAction(page, true));\n          dispatch({ type: `SET_STATUS_${actionEntity}`, status: 'idle' });\n          if (callback && typeof callback === 'function') {\n            callback();\n          }\n        })\n        .catch((error) => {\n          dispatch({ type: `FETCH_${actionEntity}_ERROR`, error });\n        });\n    };\n  };\n\n  const setFilteredDataAction = (search) => {\n    return (dispatch, getState) => {\n      const state = getState();\n      const token = state.auth.token;\n      fetchWrapper(\n        `${process.env.REACT_APP_API_URL}/${endpoint}/?search=${search}`,\n        {\n          headers: generateHeaders(token)\n        }\n      )\n        .then((json) => {\n          dispatch({\n            type: `SET_FILTERED_DATA_${actionEntity}`,\n            data: json.results\n          });\n        })\n        .catch((err) => {\n          dispatch({ type: `FETCH_${actionEntity}_ERROR`, error: err });\n        });\n    };\n  };\n\n  const fetchAction = () => {\n    return getPageAction(1);\n  };\n\n  const selectItemAction = (id) => {\n    return (dispatch) => {\n      dispatch({ type: `SELECT_${actionEntity}_ID`, selectedId: id });\n    };\n  };\n\n  const setEditedDataAction = (id) => {\n    return (dispatch, getState) => {\n      const state = getState();\n      const token = state.auth.token;\n      if (id === -1 || state[entity].allIds.includes(id)) {\n        dispatch({ type: `SET_EDITED_DATA_${actionEntity}`, id });\n      } else {\n        fetchWrapper(`${process.env.REACT_APP_API_URL}/${endpoint}/${id}/`, {\n          headers: generateHeaders(token)\n        })\n          .then((json) => {\n            dispatch({ type: `UPDATE_DATA_${actionEntity}`, data: json });\n            dispatch({ type: `SET_EDITED_DATA_${actionEntity}`, id });\n          })\n          .catch((error) => {\n            dispatch({ type: `FETCH_${actionEntity}_ERROR`, error });\n          });\n      }\n    };\n  };\n\n  const updateEditedDataAction = (field, value, trackField = true) => {\n    return (dispatch) => {\n      dispatch({\n        type: `UPDATE_EDITED_DATA_${actionEntity}`,\n        field,\n        value,\n        trackField\n      });\n    };\n  };\n\n  const commitDataAction = (data, callback) => {\n    return (dispatch, storeGetter) => {\n      const store = storeGetter();\n      const token = store.auth.token;\n      dispatch({ type: `SET_STATUS_${actionEntity}`, status: 'saving' });\n      fetchWrapper(\n        `${process.env.REACT_APP_API_URL}/${endpoint}/${\n          data.id ? `${data.id}/` : ''\n        }`,\n        {\n          method: data.id ? 'PUT' : 'POST',\n          headers: generateHeaders(token),\n          body: JSON.stringify(data)\n        }\n      )\n        .then((json) => {\n          dispatch({\n            type: `UPDATE_${actionEntity}`,\n            data: json,\n            new: !data.id\n          });\n          dispatch({ type: `SET_STATUS_${actionEntity}`, status: 'idle' });\n          if (callback && typeof callback === 'function') {\n            callback(json);\n          }\n        })\n        .catch((err) => {\n          dispatch({ type: `FETCH_${actionEntity}_ERROR`, error: err });\n        });\n    };\n  };\n\n  return {\n    getPageAction,\n    fetchAction,\n    selectItemAction,\n    setEditedDataAction,\n    updateEditedDataAction,\n    commitDataAction,\n    setFilteredDataAction,\n    deleteItemAction\n  };\n}\n","import { bindActionCreators } from 'redux';\nimport stateRegister from '../../register/stateRegister';\n\nexport default function getMappers(entity) {\n  const mapStateToProps = (state) => {\n    const {\n      getError,\n      getStatus,\n      getCurrentPageData,\n      getLastPage,\n      getCurrentPage,\n      getSelectedId,\n      getSelectedData,\n      getEditedData,\n      getTotalItems,\n      getLastEditedField\n    } = stateRegister.getSelectors(entity);\n    const error = getError(state);\n    const status = getStatus(state);\n    const data = getCurrentPageData(state);\n    const lastPage = getLastPage(state);\n    const currentPage = getCurrentPage(state);\n    const selectedId = getSelectedId(state);\n    const selectedData = getSelectedData(state);\n    const editedData = getEditedData(state);\n    const totalItems = getTotalItems(state);\n    const lastEditedField = getLastEditedField(state);\n    return {\n      error,\n      status,\n      data,\n      lastPage,\n      currentPage,\n      selectedId,\n      selectedData,\n      editedData,\n      totalItems,\n      lastEditedField\n    };\n  };\n\n  const mapDispatchToProps = (dispatch) => {\n    const {\n      fetchAction,\n      getPageAction,\n      selectItemAction,\n      setEditedDataAction,\n      updateEditedDataAction,\n      commitDataAction,\n      deleteItemAction\n    } = stateRegister.getActions(entity);\n    return bindActionCreators(\n      {\n        fetchData: fetchAction,\n        selectPage: getPageAction,\n        selectItem: selectItemAction,\n        setEditedData: setEditedDataAction,\n        updateEditedData: updateEditedDataAction,\n        commitData: commitDataAction,\n        deleteItem: deleteItemAction\n      },\n      dispatch\n    );\n  };\n\n  return { mapStateToProps, mapDispatchToProps };\n}\n","export default function getSelectors(entity) {\n  const getState = (store) => {\n    return store[entity];\n  };\n\n  const getList = (store) => {\n    return getState(store) ? getState(store).allIds : [];\n  };\n\n  const getById = (store, id) => {\n    return getState(store) ? { ...getState(store).byIds[id], id } : {};\n  };\n\n  const get = (store) => {\n    return getList(store).map((id) => getById(store, id));\n  };\n\n  const getPage = (store, page) => {\n    const pageData = getState(store) ? getState(store).byPage[page] : [];\n    return pageData || [];\n  };\n\n  const getCurrentPage = (store) => {\n    return getState(store) ? getState(store).currentPage : 1;\n  };\n\n  const getLastPage = (store) => {\n    return getState(store) ? getState(store).lastPage : 1;\n  };\n\n  const getCurrentPageData = (store) => {\n    const currentPage = getCurrentPage(store);\n    return getPage(store, currentPage).map((id) => getById(store, id));\n  };\n\n  const getStatus = (store) => {\n    return getState(store) ? getState(store).status : 'idle';\n  };\n\n  const getError = (store) => {\n    return getState(store) ? getState(store).error : null;\n  };\n\n  const getSelectedId = (store) => {\n    return getState(store) ? getState(store).selectedId : null;\n  };\n\n  const getSelectedData = (store) => {\n    return getSelectedId(store) ? getById(store, getSelectedId(store)) : {};\n  };\n\n  const getEditedData = (store) => {\n    return getState(store) ? getState(store).editedData : null;\n  };\n\n  const getFilteredData = (store) => {\n    return getState(store) ? getState(store).filteredData : [];\n  };\n\n  const getPageLastLoaded = (store, page) => {\n    const state = getState(store);\n    if (!state) {\n      return 0;\n    }\n    return state.pageLoaded[page] ? state.pageLoaded[page] : 0;\n  };\n\n  const getTotalItems = (store) => {\n    return getState(store) ? getState(store).totalItems : 0;\n  };\n\n  const getLastEditedField = (store) => {\n    return getState(store) ? getState(store).lastEditedField : null;\n  };\n\n  return {\n    getState,\n    getList,\n    getById,\n    get,\n    getPage,\n    getCurrentPage,\n    getLastPage,\n    getCurrentPageData,\n    getStatus,\n    getError,\n    getSelectedId,\n    getSelectedData,\n    getEditedData,\n    getFilteredData,\n    getPageLastLoaded,\n    getTotalItems,\n    getLastEditedField\n  };\n}\n","export function toCamelCase(str) {\n  return str\n    .replace(/(?:^\\w|[A-Z]|\\b\\w)/g, function (word, index) {\n      return index === 0 ? word.toLowerCase() : word.toUpperCase();\n    })\n    .replace(/\\s+/g, '');\n}\n\nexport function toUpperCaseFirstChar(str) {\n  return str.charAt(0).toUpperCase() + str.slice(1);\n}\n","import React from 'react';\n\nexport default function Row({ children }) {\n  return <div className='row'>{children}</div>;\n}\n","import React from 'react';\nimport TextField from '@material-ui/core/TextField';\n\nexport default function TextFieldImpl({ value, label, errors, ...other }) {\n  const classes = [];\n  if (value) {\n    classes.push('has-value');\n  }\n  if (errors) {\n    classes.push('has-errors');\n  }\n  return (\n    <TextField\n      error={!!errors}\n      label={label}\n      value={value || ''}\n      helperText={errors?.join('\\n')}\n      fullWidth={true}\n      margin='normal'\n      {...other}\n    />\n  );\n}\n","export default function getDisplayValue(obj, displayDefinition) {\n  if (!obj) {\n    return '';\n  }\n  if (typeof obj !== 'object') {\n    return obj;\n  }\n  if (typeof displayDefinition === 'string') {\n    return obj[displayDefinition];\n  }\n\n  if (typeof displayDefinition === 'function') {\n    return displayDefinition(obj);\n  }\n\n  return '';\n}\n","import { TextField } from '@material-ui/core';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport React from 'react';\nimport { useDispatch, useStore } from 'react-redux';\nimport getDisplayValue from '../../helpers/getDisplayValue';\nimport stateRegister from '../../register/stateRegister';\n\nexport default function SearchableField({\n  label,\n  entity,\n  value,\n  onChange,\n  errors,\n  required\n}) {\n  const state = useStore().getState();\n  const setFilteredDataAction = stateRegister.getAction(\n    entity,\n    'setFilteredDataAction'\n  );\n\n  const getFilteredDataSelector = stateRegister.getSelector(\n    entity,\n    'getFilteredData'\n  );\n\n  const data = getFilteredDataSelector(state);\n\n  const primaryProperty = stateRegister.getOption(entity, 'primaryProperty');\n  const dispatch = useDispatch();\n\n  const onInputChange = (e, value) => {\n    dispatch(setFilteredDataAction(value));\n  };\n\n  return (\n    <React.Fragment>\n      <Autocomplete\n        options={data}\n        getOptionLabel={(option) =>\n          getDisplayValue(option, primaryProperty.display)\n        }\n        onChange={(_, newValue) => {\n          onChange(newValue);\n        }}\n        onInputChange={onInputChange}\n        value={value}\n        renderInput={(params) => (\n          <TextField\n            error={!!errors}\n            helperText={errors?.join('\\n')}\n            {...params}\n            label={label}\n            margin='normal'\n            required={required}\n          />\n        )}\n        getOptionSelected={(option, value) => option?.id === value?.id}\n      />\n    </React.Fragment>\n  );\n}\n","import { makeStyles } from '@material-ui/core';\nimport React from 'react';\n\nconst useStyles = makeStyles((theme) => {\n  return {\n    error: {\n      color: theme.palette.error.main\n    }\n  };\n});\n\nexport default function InputErrors({ errors }) {\n  const classes = useStyles();\n\n  return (\n    <React.Fragment>\n      {errors && (\n        <React.Fragment>\n          {Array.isArray(errors) ? (\n            <React.Fragment>\n              {errors.map((error, i) => {\n                return (\n                  <span className={classes.error} key={i}>\n                    {error}\n                  </span>\n                );\n              })}\n            </React.Fragment>\n          ) : (\n            <span className={classes.error}>{errors}</span>\n          )}\n        </React.Fragment>\n      )}\n    </React.Fragment>\n  );\n}\n","import React, { useState } from 'react';\nimport ReactMarkdown from 'react-markdown';\nimport ReactMde from 'react-mde';\nimport { CodeHighlighter, languageVBA, languagePython } from 'esembico-common';\nimport { makeStyles } from '@material-ui/core';\n\nimport 'react-mde/lib/styles/css/react-mde-editor.css';\nimport 'react-mde/lib/styles/css/react-mde-toolbar.css';\nimport 'react-mde/lib/styles/css/react-mde.css';\nimport InputErrors from './InputErrors';\nimport clsx from 'clsx';\n\nconst useStyles = makeStyles((theme) => {\n  return {\n    formGroup: {\n      marginBottom: theme.spacing(2)\n    },\n    error: {\n      color: theme.palette.error.main\n    },\n    editor: {\n      '& .react-mde': {\n        border: `1px solid ${theme.palette.primary.main}`\n      },\n      '& .mde-header': {\n        backgroundColor: theme.palette.primary.main,\n        '& .mde-tabs button': {\n          color: theme.palette.text.primary,\n          '&.selected': {\n            border: `1px solid ${theme.palette.text.primary}`\n          }\n        }\n      },\n      '& li.mde-header-item button svg': {\n        color: theme.palette.text.primary\n      },\n      '& .mde-textarea-wrapper textarea.mde-text': {\n        backgroundColor: theme.palette.background.default,\n        color: theme.palette.text.primary\n      },\n      // FIXME: Find a better way to make the editor responsive\n      '& .mde-preview-content': {\n        maxWidth: '85vw'\n      }\n    },\n    editorError: {\n      '& .react-mde': {\n        border: `1px solid ${theme.palette.error.main}`\n      }\n    }\n  };\n});\n\nconst languages = {\n  vba: languageVBA,\n  python: languagePython\n};\n\nconst renderers = {\n  code: ({ language, value }) => {\n    return (\n      <CodeHighlighter\n        getLanguageFunction={(language, callback) =>\n          callback(languages[language])\n        }\n        language={language}\n      >\n        {value}\n      </CodeHighlighter>\n    );\n  },\n  image: (params) => {\n    return <img className='responsive-image' {...params}></img>;\n  }\n};\n\nexport default function MarkdownEditor({ label, value, onChange, errors }) {\n  const classes = useStyles();\n\n  const [selectedTab, setSelectedTab] = useState('write');\n  return (\n    <div className={classes.formGroup}>\n      <label\n        className={clsx({\n          [classes.error]: !!errors\n        })}\n      >\n        {label}\n      </label>\n      <div\n        className={clsx(classes.editor, {\n          [classes.editorError]: !!errors\n        })}\n      >\n        <ReactMde\n          value={value || ''}\n          onChange={onChange}\n          selectedTab={selectedTab}\n          onTabChange={setSelectedTab}\n          generateMarkdownPreview={(markdown) => {\n            return Promise.resolve(\n              <ReactMarkdown renderers={renderers} source={markdown} />\n            );\n          }}\n        />\n      </div>\n      <InputErrors errors={errors} />\n    </div>\n  );\n}\n","import React from 'react';\nimport Select from '@material-ui/core/Select';\nimport FormControl from '@material-ui/core/FormControl';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormHelperText from '@material-ui/core/FormHelperText';\n\nexport default function SelectImpl({\n  label,\n  value,\n  options,\n  errors,\n  onChange,\n  required\n}) {\n  return (\n    <FormControl required={required} error={!!errors} fullWidth>\n      <InputLabel>{label}</InputLabel>\n      <Select\n        required={required}\n        displayEmpty\n        fullWidth\n        value={value}\n        onChange={onChange}\n      >\n        <MenuItem value=''>\n          <em>None</em>\n        </MenuItem>\n        {options.map((option) => {\n          return (\n            <MenuItem key={option.value} value={option.value}>\n              {option.display}\n            </MenuItem>\n          );\n        })}\n      </Select>\n      <FormHelperText>{errors?.join('\\n')}</FormHelperText>\n    </FormControl>\n  );\n}\n","export default function getLabelText(label, data) {\n  if (typeof label === 'function') {\n    return label(data);\n  }\n\n  return label;\n}\n","import React from 'react';\nimport Row from '../components/Responsive/Row';\nimport TextField from '../components/EditorField/TextFieldImpl';\nimport SearchableField from '../components/EditorField/SearchableField';\nimport MarkdownEditor from '../components/EditorField/MarkdownEditor';\nimport Select from '../components/EditorField/SelectImpl';\nimport getLabelText from './getLabelText';\n\nfunction createFieldForProperty({\n  property,\n  data,\n  onUpdate,\n  lastEditedField,\n  ...others\n}) {\n  if (property.if) {\n    if (!property.if(data)) {\n      return <React.Fragment />;\n    }\n  }\n  const label = getLabelText(property.label, data);\n  switch (property.type) {\n    case 'select':\n      return (\n        <Select\n          label={label}\n          value={data[property.name]}\n          onChange={(e) => onUpdate(property.name, e.target.value)}\n          options={property.options}\n          required={property.required}\n          {...others}\n        />\n      );\n    case 'text':\n    case 'url':\n      return (\n        <TextField\n          label={label}\n          value={data[property.name]}\n          multiline={property.multiline}\n          onChange={(e) => onUpdate(property.name, e.target.value)}\n          required={property.required}\n          {...others}\n        />\n      );\n    case 'number':\n      return (\n        <TextField\n          type='number'\n          label={label}\n          value={data[property.name]}\n          multiline={property.multiline}\n          onChange={(e) => onUpdate(property.name, e.target.value || null)}\n          required={property.required}\n          {...others}\n        />\n      );\n    case 'reference':\n      return (\n        <SearchableField\n          label={label}\n          entity={property.to}\n          value={data[property.name]}\n          onChange={(value) => onUpdate(property.name, value)}\n          required={property.required}\n          {...others}\n        />\n      );\n    case 'markdown':\n      return (\n        <MarkdownEditor\n          label={label}\n          value={data[property.name]}\n          onChange={(value) => onUpdate(property.name, value)}\n          required={property.required}\n          {...others}\n        />\n      );\n    case 'generated':\n      let value = data[property.name];\n      if (property.dependsOn.includes(lastEditedField)) {\n        value = property.value(data);\n        if (value !== data[property.name]) {\n          onUpdate(property.name, value, false);\n        }\n      }\n      return (\n        <TextField\n          label={label}\n          InputProps={{\n            readOnly: true\n          }}\n          value={value}\n          multiline={property.multiline}\n          onChange={(e) => onUpdate(property.name, e.target.value)}\n          required={property.required}\n          {...others}\n        />\n      );\n    default:\n      return <span>{data[property.name]}</span>;\n  }\n}\n\nexport default function makeEditor({ proprties }) {\n  const Editor = ({ data, onUpdate, errors, lastEditedField }) => {\n    return (\n      <React.Fragment>\n        <Row>\n          {proprties.map((property) => {\n            return (\n              <React.Fragment key={property.name}>\n                {createFieldForProperty({\n                  property,\n                  data,\n                  onUpdate,\n                  errors: errors[property.name],\n                  lastEditedField\n                })}\n              </React.Fragment>\n            );\n          })}\n        </Row>\n      </React.Fragment>\n    );\n  };\n\n  return Editor;\n}\n","import getLabelText from './getLabelText';\nimport makeValidationErrorHandler from './makeValidationErrorHandler';\n\nexport default function makeValidation(editor) {\n  return (data) => {\n    const errors = {};\n    const { required, requireNumber, requireUrl } = makeValidationErrorHandler(\n      errors,\n      data\n    );\n    editor.forEach((field) => {\n      if (!field.if || field.if(data)) {\n        const label = getLabelText(field.label, data);\n        if (field.required) {\n          required(label, field.name);\n        }\n        if (field.type === 'number') {\n          requireNumber(label, field.name);\n        }\n        if (field.type === 'url') {\n          requireUrl(label, field.name);\n        }\n      }\n    });\n\n    return errors;\n  };\n}\n","export default function makeValidationErrorHandler(errors, data) {\n  const required = (name, property) => {\n    if (!data[property]) {\n      if (!errors[property]) {\n        errors[property] = [];\n      }\n      errors[property].push(`${name} is required`);\n    }\n  };\n\n  const requireNumber = (name, property) => {\n    const value = data[property];\n    if (value && isNaN(value)) {\n      if (!errors[property]) {\n        errors[property] = [];\n      }\n      errors[property].push(`${name} should be a number`);\n    }\n  };\n\n  const requireUrl = (name, property) => {\n    const value = data[property];\n    try {\n      // eslint-disable-next-line no-new\n      new URL(value, 'http://esembico.de');\n    } catch {\n      if (!errors[property]) {\n        errors[property] = [];\n      }\n      errors[property].push(`${name} should be a valid url`);\n    }\n  };\n\n  return { required, requireNumber, requireUrl };\n}\n","import React from 'react';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport Table from '@material-ui/core/Table';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableFooter from '@material-ui/core/TableFooter';\nimport TableRow from '@material-ui/core/TableRow';\nimport TableCell from '@material-ui/core/TableCell';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport getDisplayValue from '../../helpers/getDisplayValue';\nimport IconButton from '@material-ui/core/IconButton';\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\nimport LastPageIcon from '@material-ui/icons/LastPage';\nimport { makeStyles, useTheme } from '@material-ui/core';\n\nconst usePaginationStyle = makeStyles((theme) => {\n  return {\n    root: {\n      flexShrink: 0,\n      marginLeft: theme.spacing(2.5)\n    }\n  };\n});\n\nfunction TablePaginationActions({ onChangePage, count, page, rowsPerPage }) {\n  const classes = usePaginationStyle();\n  const theme = useTheme();\n  const handleFirstPageButtonClick = () => {\n    onChangePage(1);\n  };\n\n  const handleBackButtonClick = () => {\n    onChangePage(page);\n  };\n\n  const handleNextButtonClick = () => {\n    onChangePage(page + 2);\n  };\n\n  const handleLastPageButtonClick = () => {\n    onChangePage(Math.max(0, Math.ceil(count / rowsPerPage)));\n  };\n\n  return (\n    <div className={classes.root}>\n      <IconButton\n        onClick={handleFirstPageButtonClick}\n        disabled={page === 0}\n        aria-label='first page'\n      >\n        {theme.direction === 'rtl' ? <LastPageIcon /> : <FirstPageIcon />}\n      </IconButton>\n      <IconButton\n        onClick={handleBackButtonClick}\n        disabled={page === 0}\n        aria-label='previous page'\n      >\n        {theme.direction === 'rtl' ? (\n          <KeyboardArrowRight />\n        ) : (\n          <KeyboardArrowLeft />\n        )}\n      </IconButton>\n      <IconButton\n        onClick={handleNextButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label='next page'\n      >\n        {theme.direction === 'rtl' ? (\n          <KeyboardArrowLeft />\n        ) : (\n          <KeyboardArrowRight />\n        )}\n      </IconButton>\n      <IconButton\n        onClick={handleLastPageButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label='last page'\n      >\n        {theme.direction === 'rtl' ? <FirstPageIcon /> : <LastPageIcon />}\n      </IconButton>\n    </div>\n  );\n}\n\nexport default function DataTable({\n  data,\n  columns,\n  pageData,\n  totalItems,\n  onPageChange,\n  onSelect,\n  selected,\n  className\n}) {\n  return (\n    <React.Fragment>\n      <TableContainer>\n        <Table className={className}>\n          <TableHead>\n            <TableRow>\n              {columns.map((column) => {\n                return (\n                  <TableCell key={column.header}>{column.header}</TableCell>\n                );\n              })}\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {data.map((entry) => {\n              return (\n                <TableRow\n                  onClick={() => onSelect(entry.id)}\n                  selected={entry.id === selected}\n                  hover\n                  key={entry.id}\n                >\n                  {columns.map((column) => {\n                    return (\n                      <TableCell key={`${column.header}-${entry.di}`}>\n                        {getDisplayValue(entry, column.display)}\n                      </TableCell>\n                    );\n                  })}\n                </TableRow>\n              );\n            })}\n          </TableBody>\n          {totalItems ? (\n            <TableFooter>\n              <TableRow>\n                <TablePagination\n                  rowsPerPageOptions={[]}\n                  colSpan={3}\n                  count={totalItems}\n                  rowsPerPage={parseInt(process.env.REACT_APP_ROWS_PER_PAGE)}\n                  page={pageData.current - 1}\n                  SelectProps={{\n                    inputProps: { 'aria-label': 'rows per page' },\n                    native: true\n                  }}\n                  onChangePage={onPageChange}\n                  ActionsComponent={TablePaginationActions}\n                />\n              </TableRow>\n            </TableFooter>\n          ) : null}\n        </Table>\n      </TableContainer>\n    </React.Fragment>\n  );\n}\n","import React from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport LinearProgress from '@material-ui/core/LinearProgress';\n\nexport default function Header({ children, loading }) {\n  return (\n    <React.Fragment>\n      <Typography variant='h3'>{children}</Typography>\n      {loading ? <LinearProgress /> : <hr />}\n    </React.Fragment>\n  );\n}\n","import React from 'react';\n\nexport default function Container({ children }) {\n  return <div className='container'>{children}</div>;\n}\n","import React, { useEffect } from 'react';\nimport DataTable from '../components/DataTable/DataTable';\nimport Header from '../components/Header';\nimport { connect } from 'react-redux';\nimport Container from '../components/Responsive/Container';\nimport stateRegister from '../register/stateRegister';\nimport { useHistory } from 'react-router-dom';\nimport Fab from '@material-ui/core/Fab';\nimport AddIcon from '@material-ui/icons/Add';\nimport { makeStyles } from '@material-ui/core';\n\nconst useStyles = makeStyles((theme) => {\n  return {\n    fab: {\n      position: 'fixed',\n      bottom: theme.spacing(2),\n      right: theme.spacing(2)\n    },\n    dataTable: {\n      marginBottom: theme.spacing(5)\n    }\n  };\n});\n\nexport default function makeListPage({ columns, entity }) {\n  const Component = ({\n    data,\n    status,\n    lastPage,\n    currentPage,\n    totalItems,\n    fetchData,\n    selectPage,\n    selectItem,\n    selectedId\n  }) => {\n    const classes = useStyles();\n    const history = useHistory();\n\n    useEffect(() => {\n      fetchData();\n    }, [fetchData]);\n\n    const changePage = (page) => {\n      selectPage(page);\n    };\n\n    const newEntry = () => {\n      history.push(stateRegister.getEditUrl(entity, 'new'));\n    };\n\n    return (\n      <div>\n        <Header loading={status !== 'idle'}>\n          {stateRegister.getOption(entity, 'header')}\n        </Header>\n        {status !== 'loading' && (\n          <React.Fragment>\n            <Container>\n              <DataTable\n                className={classes.dataTable}\n                pageData={{\n                  current: currentPage,\n                  last: lastPage\n                }}\n                data={data}\n                columns={columns}\n                onPageChange={changePage}\n                onSelect={(id) => {\n                  selectItem(id);\n                  history.push(stateRegister.getEditUrl(entity, id));\n                }}\n                selected={selectedId}\n                totalItems={totalItems}\n              />\n              <Fab\n                className={classes.fab}\n                color='primary'\n                aria-label='New'\n                onClick={newEntry}\n              >\n                <AddIcon />\n              </Fab>\n            </Container>\n          </React.Fragment>\n        )}\n      </div>\n    );\n  };\n  const { mapStateToProps, mapDispatchToProps } = stateRegister.getMappers(\n    entity\n  );\n\n  return connect(mapStateToProps, mapDispatchToProps)(Component);\n}\n","import React from 'react';\n\nexport default function Column({ children, width }) {\n  return <div className={`col col-${width}`}>{children}</div>;\n}\n","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport { makeStyles } from '@material-ui/core/styles';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nconst useStyles = makeStyles((theme) => ({\n  buttonProgress: {\n    position: 'absolute',\n    top: '50%',\n    left: '50%',\n    marginTop: -12,\n    marginLeft: -12\n  }\n}));\n\nexport default function ButtonWithLoading({\n  disabled,\n  loading,\n  children,\n  ...props\n}) {\n  const classes = useStyles();\n  return (\n    <Button {...props} disabled={disabled || loading}>\n      {children}\n      {loading && (\n        <CircularProgress className={classes.buttonProgress} size={24} />\n      )}\n    </Button>\n  );\n}\n","import React, { useEffect, useState } from 'react';\nimport Header from '../components/Header';\nimport { connect } from 'react-redux';\nimport Container from '../components/Responsive/Container';\nimport Row from '../components/Responsive/Row';\nimport Column from '../components/Responsive/Column';\nimport Button from '@material-ui/core/Button';\nimport stateRegister from '../register/stateRegister';\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\nimport { useHistory, useParams } from 'react-router-dom';\nimport Fab from '@material-ui/core/Fab';\nimport AddIcon from '@material-ui/icons/Add';\nimport { makeStyles } from '@material-ui/core';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport getDisplayValue from '../helpers/getDisplayValue';\nimport ButtonWithLoading from '../components/ButtonWithLoading';\n\nconst useStyles = makeStyles((theme) => {\n  return {\n    fab: {\n      position: 'fixed',\n      bottom: theme.spacing(2),\n      right: theme.spacing(2)\n    }\n  };\n});\n\nexport default function makeEditPage({ Editor, entity }) {\n  const Component = ({\n    editedData,\n    fetchData,\n    selectedId,\n    setEditedData,\n    updateEditedData,\n    commitData,\n    deleteItem,\n    status,\n    lastEditedField\n  }) => {\n    const classes = useStyles();\n    const [errors, setErrors] = useState({});\n    const [confirmationOpen, setConfirmationOpen] = useState(false);\n    const validateData = stateRegister.getOption(entity, 'validateData');\n    const primaryProperty = stateRegister.getOption(entity, 'primaryProperty');\n\n    useEffect(() => {\n      fetchData();\n    }, [fetchData]);\n\n    const params = useParams();\n    const history = useHistory();\n    const id = params.id;\n\n    const handleClose = () => {\n      setConfirmationOpen(false);\n    };\n\n    useEffect(() => {\n      if (id === 'new') {\n        setEditedData(-1);\n      } else {\n        setEditedData(parseInt(id));\n      }\n    }, [id]);\n\n    useEffect(() => {\n      const errors = validateData(editedData || {});\n      setErrors(errors || {});\n    }, [editedData, validateData]);\n\n    const saveEntry = () => {\n      if (Object.keys(errors).length === 0) {\n        commitData(editedData, (data) => {\n          history.push(stateRegister.getEditUrl(entity, data.id));\n        });\n      }\n    };\n\n    const onDelete = () => {\n      deleteItem(selectedId, () => {\n        history.push(stateRegister.getListUrl(entity));\n      });\n      setConfirmationOpen(false);\n    };\n\n    const onEditorSubmit = (e) => {\n      e.preventDefault();\n      saveEntry();\n    };\n\n    const newEntry = () => {\n      history.push(stateRegister.getEditUrl(entity, 'new'));\n    };\n\n    return (\n      <div>\n        <Header loading={status !== 'idle'}>\n          {stateRegister.getOption(entity, 'header')}\n        </Header>\n        {editedData && (\n          <Container>\n            <Row>\n              <form onSubmit={onEditorSubmit}>\n                <Editor\n                  errors={errors}\n                  onUpdate={updateEditedData}\n                  data={editedData}\n                  lastEditedField={lastEditedField}\n                />\n                <Column width={100}>\n                  <ButtonGroup color='primary' variant='contained'>\n                    <ButtonWithLoading\n                      loading={status === 'saving'}\n                      disabled={Object.keys(errors).length !== 0}\n                      type='submit'\n                    >\n                      Save\n                    </ButtonWithLoading>\n                    <Button\n                      onClick={() =>\n                        history.push(stateRegister.getListUrl(entity))\n                      }\n                    >\n                      Cancel\n                    </Button>\n                    <ButtonWithLoading\n                      loading={status === 'deleting'}\n                      onClick={() => setConfirmationOpen(true)}\n                      color='secondary'\n                      disabled={!editedData.id}\n                    >\n                      Delete\n                    </ButtonWithLoading>\n                  </ButtonGroup>\n                </Column>\n              </form>\n            </Row>\n            <Fab\n              className={classes.fab}\n              color='primary'\n              aria-label='New'\n              onClick={newEntry}\n              disabled={!editedData.id}\n            >\n              <AddIcon />\n            </Fab>\n            <Dialog\n              open={confirmationOpen}\n              onClose={handleClose}\n              aria-labelledby='alert-dialog-title'\n              aria-describedby='alert-dialog-description'\n            >\n              <DialogTitle id='alert-dialog-title'>\n                Delete {stateRegister.getOption(entity, 'singularName')}\n              </DialogTitle>\n              <DialogContent>\n                <DialogContentText id='alert-dialog-description'>\n                  Are you sure you want to delete the following{' '}\n                  {stateRegister.getOption(entity, 'singularName')}?\n                  <br />\n                  {getDisplayValue(editedData, primaryProperty.display)}\n                </DialogContentText>\n              </DialogContent>\n              <DialogActions>\n                <Button onClick={onDelete} color='secondary'>\n                  Yes\n                </Button>\n                <Button onClick={handleClose} color='secondary'>\n                  No\n                </Button>\n              </DialogActions>\n            </Dialog>\n          </Container>\n        )}\n      </div>\n    );\n  };\n  const { mapStateToProps, mapDispatchToProps } = stateRegister.getMappers(\n    entity\n  );\n\n  return connect(mapStateToProps, mapDispatchToProps)(Component);\n}\n","import createReducer from '../redux/helpers/createReducer';\nimport getActions from '../redux/helpers/getActions';\nimport getMappers from '../redux/helpers/getMappers';\nimport getSelectors from '../redux/helpers/getSelectors';\nimport { toCamelCase, toUpperCaseFirstChar } from '../helpers/caseConverter';\nimport makeEditor from '../helpers/makeEditor';\nimport makeValidation from '../helpers/makeValidation';\nimport makeListPage from '../helpers/makeListPage';\nimport makeEditPage from '../helpers/makeEditPage';\n\nclass StateRegister {\n  constructor() {\n    this.states = {};\n    this.defaultOptions = {\n      validateData: () => {}\n    };\n    this.globalOptions = {};\n  }\n\n  setGlobalOptions(options) {\n    this.globalOptions = options;\n  }\n\n  register(name, options = {}) {\n    const mergedOptions = {\n      ...this.defaultOptions,\n      ...this.globalOptions,\n      ...options\n    };\n    let editor = options.editor;\n    let validateData = mergedOptions.validateData;\n    if (mergedOptions.buildValidationFromEditor) {\n      if (!Array.isArray(editor)) {\n        throw Error('editor needs to be an array to build validation');\n      }\n\n      validateData = makeValidation(editor);\n    }\n    if (Array.isArray(editor)) {\n      editor = makeEditor({ proprties: editor });\n    }\n    this.states[name] = {\n      ...mergedOptions,\n      actions: getActions(name, mergedOptions.endpoint || name),\n      selectors: getSelectors(name),\n      mappers: getMappers(name, mergedOptions.endpoint || name),\n      reducer: createReducer(name),\n      header: mergedOptions.header || toUpperCaseFirstChar(name),\n      validateData,\n      editor\n    };\n  }\n\n  getListUrl(name) {\n    return `/${name}`;\n  }\n\n  getEditUrl(name, id) {\n    return `/${name}/${id}`;\n  }\n\n  getLinks() {\n    const links = [];\n    Object.entries(this.states).forEach(([name, entry]) => {\n      links.push({\n        text: entry.header,\n        to: this.getListUrl(name),\n        icon: entry.icon\n      });\n    });\n    return links;\n  }\n\n  getRoutes() {\n    const routes = [];\n    Object.entries(this.states).forEach(([name, entry]) => {\n      routes.push({\n        name,\n        listPath: `/${name}`,\n        editPath: `/${name}/:id`,\n        listComponent: makeListPage({\n          columns: entry.columns,\n          primaryProperty: entry.primaryProperty,\n          entity: name,\n          Editor: entry.editor\n        }),\n        editComponent: makeEditPage({\n          columns: entry.columns,\n          primaryProperty: entry.primaryProperty,\n          entity: name,\n          Editor: entry.editor\n        })\n      });\n    });\n    return routes;\n  }\n\n  getOption(name, option, defaultValue) {\n    const value = this.states[name][option];\n    return value || defaultValue;\n  }\n\n  getActions(name) {\n    return this.states[name].actions;\n  }\n\n  getAction(entityName, actionName) {\n    return this.states[entityName].actions[actionName];\n  }\n\n  getSelectors(name) {\n    return this.states[name].selectors;\n  }\n\n  getSelector(entityName, selectorName) {\n    return this.states[entityName].selectors[selectorName];\n  }\n\n  getMappers(name) {\n    return this.states[name].mappers;\n  }\n\n  getReducer(name) {\n    return this.states[name].reducer;\n  }\n\n  getReducers() {\n    const reducers = {};\n    Object.entries(this.states).forEach(([name, entry]) => {\n      reducers[toCamelCase(name)] = entry.reducer;\n    });\n\n    return reducers;\n  }\n}\n\nconst stateRegister = new StateRegister();\n\nexport default stateRegister;\n","import GroupIcon from '@material-ui/icons/Group';\n\nconst teamOptions = {\n  singularName: 'team member',\n  icon: <GroupIcon />,\n  endpoint: 'members',\n  columns: [\n    {\n      header: 'Name',\n      display: 'name'\n    },\n    {\n      header: 'Artist name',\n      display: 'artist_name'\n    },\n    {\n      header: 'Title',\n      display: 'titles'\n    }\n  ],\n  primaryProperty: {\n    display: (entry) => {\n      return `${entry.name} (${entry.artist_name})`;\n    },\n    header: 'Name'\n  },\n  editor: [\n    {\n      type: 'text',\n      label: 'Name',\n      name: 'name',\n      required: true\n    },\n    {\n      type: 'text',\n      label: 'Artist name',\n      name: 'artist_name',\n      required: true\n    },\n    {\n      type: 'text',\n      label: 'Titles',\n      name: 'titles',\n      required: true\n    },\n    {\n      type: 'text',\n      label: 'Bio',\n      name: 'bio',\n      multiline: true,\n      required: true\n    },\n    {\n      type: 'reference',\n      label: 'Image',\n      name: 'image',\n      to: 'images',\n      required: true\n    }\n  ]\n};\n\nexport default teamOptions;\n","import MovieIcon from '@material-ui/icons/Movie';\nimport AllInclusiveIcon from '@material-ui/icons/AllInclusive';\nimport FeaturedPlayListIcon from '@material-ui/icons/FeaturedPlayList';\n\nconst recommendationOptions = {\n  singularName: 'recommendation',\n  icon: <FeaturedPlayListIcon />,\n  columns: [\n    {\n      header: 'Type',\n      display: (entry) => {\n        switch (entry.type) {\n          case 'movie':\n            return <MovieIcon />;\n          case 'misc':\n            return <AllInclusiveIcon />;\n          default:\n            return entry.type;\n        }\n      }\n    },\n    {\n      header: 'Title',\n      display: 'title'\n    },\n    {\n      header: 'Description',\n      display: 'description'\n    }\n  ],\n  primaryProperty: {\n    header: 'Title',\n    display: 'title'\n  },\n  editor: [\n    {\n      type: 'select',\n      label: 'Type',\n      name: 'type',\n      options: [\n        { value: 'misc', display: 'Misc' },\n        { value: 'movie', display: 'Movie' }\n      ],\n      required: true\n    },\n    {\n      type: 'url',\n      label: 'Url',\n      name: 'url',\n      required: true\n    },\n    {\n      type: 'text',\n      label: 'Title',\n      name: 'title',\n      required: true\n    },\n    {\n      type: 'reference',\n      label: 'Image',\n      name: 'image',\n      to: 'images',\n      required: true\n    },\n    {\n      type: 'text',\n      label: 'Description',\n      name: 'description',\n      if: (data) => {\n        return data.type === 'misc';\n      },\n      required: true\n    },\n    {\n      type: 'text',\n      label: (data) => {\n        if (data.type === 'movie') {\n          return 'FSK Rating';\n        }\n      },\n      name: 'field1',\n      if: (data) => {\n        return data.type === 'movie';\n      },\n      required: true\n    },\n    {\n      type: 'text',\n      label: (data) => {\n        if (data.type === 'movie') {\n          return 'Release year';\n        }\n      },\n      name: 'field2',\n      if: (data) => {\n        return data.type === 'movie';\n      },\n      required: true\n    },\n    {\n      type: 'text',\n      label: 'Field3',\n      name: 'field3',\n      if: () => false\n    },\n    {\n      type: 'text',\n      label: 'Field4',\n      name: 'field4',\n      if: () => false\n    },\n    {\n      type: 'text',\n      label: 'Field5',\n      name: 'field5',\n      if: () => false\n    }\n  ]\n};\n\nexport default recommendationOptions;\n","import ImageIcon from '@material-ui/icons/Image';\n\nconst imageOptions = {\n  singularName: 'image',\n  icon: <ImageIcon />,\n  columns: [\n    {\n      header: 'Url',\n      display: 'url'\n    },\n    {\n      header: 'Alternate text',\n      display: 'alt'\n    },\n    {\n      header: 'Dimension',\n      display: (entry) => {\n        return `${entry.width || 'auto'} x ${entry.height || 'auto'}`;\n      }\n    }\n  ],\n  primaryProperty: {\n    header: 'Url',\n    display: 'url'\n  },\n  editor: [\n    {\n      type: 'url',\n      label: 'Url',\n      name: 'url',\n      required: true\n    },\n    {\n      type: 'text',\n      label: 'Alt',\n      name: 'alt',\n      required: true\n    },\n    {\n      type: 'number',\n      label: 'Width',\n      name: 'width'\n    },\n    {\n      type: 'number',\n      label: 'Height',\n      name: 'height'\n    }\n  ]\n};\n\nexport default imageOptions;\n","import EmojiObjectsIcon from '@material-ui/icons/EmojiObjects';\n\nconst prototypeOptions = {\n  singularName: 'prototype',\n  icon: <EmojiObjectsIcon />,\n  columns: [\n    {\n      header: 'Title',\n      display: 'title'\n    },\n    {\n      header: 'Subtitle',\n      display: 'subtitle'\n    }\n  ],\n  primaryProperty: {\n    header: 'Title',\n    display: 'title'\n  },\n  editor: [\n    {\n      type: 'text',\n      label: 'Title',\n      name: 'title',\n      required: true\n    },\n    {\n      type: 'text',\n      label: 'Subtitle',\n      name: 'subtitle',\n      required: true\n    },\n    {\n      type: 'url',\n      label: 'Url',\n      name: 'url',\n      required: true\n    },\n    {\n      type: 'reference',\n      label: 'Image',\n      name: 'image',\n      to: 'images',\n      required: true\n    },\n    {\n      type: 'text',\n      label: 'Challenge',\n      name: 'challenge',\n      multiline: true,\n      required: true\n    },\n    {\n      type: 'text',\n      label: 'Solution',\n      name: 'solution',\n      multiline: true,\n      required: true\n    },\n    {\n      type: 'text',\n      label: 'Rough details',\n      name: 'rough_details',\n      multiline: true,\n      required: true\n    }\n  ]\n};\n\nexport default prototypeOptions;\n","import PagesIcon from '@material-ui/icons/Pages';\n\nconst pageOptions = {\n  singularName: 'page',\n  icon: <PagesIcon />,\n  columns: [\n    {\n      header: 'Name',\n      display: 'name'\n    },\n    {\n      header: 'Slug',\n      display: 'slug'\n    }\n  ],\n  primaryProperty: {\n    header: 'Name',\n    display: 'name'\n  },\n  editor: [\n    {\n      type: 'text',\n      label: 'Name',\n      name: 'name',\n      required: true\n    },\n    {\n      type: 'generated',\n      label: 'Slug',\n      name: 'slug',\n      value: (data) => {\n        return data.name?.replace(' ', '-').toLowerCase();\n      },\n      dependsOn: ['name'],\n      required: true\n    },\n    {\n      type: 'markdown',\n      label: 'Content',\n      name: 'content',\n      required: true\n    }\n  ]\n};\n\nexport default pageOptions;\n","import stateRegister from './stateRegister';\nimport teamOptions from './options/teamOptions';\nimport recommendationOptions from './options/recommendationOptions';\nimport imageOptions from './options/imageOptions';\nimport prototypeOptions from './options/prototypeOptions';\nimport pageOptions from './options/pageOptions';\n\nstateRegister.setGlobalOptions({\n  buildValidationFromEditor: true,\n  getNextPageNumber: (json) => {\n    const pageRegex = /[\\w\\W]*page=([0-9]*)/;\n    if (json.next) {\n      const groups = json.next.match(pageRegex);\n      return parseInt(groups[1]);\n    } else {\n      return null;\n    }\n  }\n});\nstateRegister.register('team', teamOptions);\nstateRegister.register('recommendations', recommendationOptions);\nstateRegister.register('prototypes', prototypeOptions);\nstateRegister.register('pages', pageOptions);\nstateRegister.register('images', imageOptions);\n","export const SET_TOKEN = 'SET_TOKEN';\nexport const SET_USERNAME = 'SET_USERNAME';\nexport const SET_AUTH_ERROR = 'SET_AUTH_ERROR';\nexport const SET_SIDEBAR_VISIBLE = 'SET_SIDEBAR_VISIBLE';\n","import { SET_TOKEN, SET_USERNAME, SET_AUTH_ERROR } from '../actionTypes';\nimport { generateHeaders, fetchWrapper } from '../../helpers/api';\n\nconst localToken = localStorage.getItem('token');\n\nconst initialState = {\n  token: localToken,\n  username: null\n};\n\nexport function logoutAction() {\n  return (dispatch) => {\n    dispatch({ type: SET_TOKEN, token: null });\n    dispatch({ type: SET_USERNAME, username: null });\n  };\n}\n\nexport function validateAuthAction() {\n  return (dispatch, stateGetter) => {\n    const state = stateGetter();\n    fetchWrapper(`${process.env.REACT_APP_API_URL}/current-user/`, {\n      headers: generateHeaders(state.auth.token)\n    })\n      .then((json) => {\n        dispatch({ type: SET_USERNAME, username: json.user });\n      })\n      .catch((error) => {\n        dispatch({ type: SET_TOKEN, token: null });\n        dispatch({ type: SET_AUTH_ERROR, error });\n      });\n  };\n}\n\nexport function authAction(username, password) {\n  return (dispatch) => {\n    fetchWrapper(`${process.env.REACT_APP_API_URL}/auth/`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        username,\n        password\n      })\n    })\n      .then((json) => {\n        if (json.non_field_errors) {\n          dispatch({ type: SET_AUTH_ERROR, error: json.non_field_errors });\n        } else {\n          dispatch({ type: SET_TOKEN, token: json.token });\n          dispatch({ type: SET_USERNAME, username });\n        }\n      })\n      .catch((error) => {\n        dispatch({ type: SET_AUTH_ERROR, error });\n      });\n  };\n}\n\nexport default function reducer(state = initialState, action) {\n  switch (action.type) {\n    case SET_TOKEN:\n      localStorage.setItem('token', action.token);\n      return {\n        ...state,\n        token: action.token\n      };\n    case SET_USERNAME:\n      return {\n        ...state,\n        username: action.username\n      };\n    case SET_AUTH_ERROR:\n      return {\n        ...state,\n        error: action.error\n      };\n    default:\n      return state;\n  }\n}\n","import React from 'react';\nimport { Redirect, Route } from 'react-router-dom';\nimport { connect } from 'react-redux';\n\nfunction PrivateRoute({ token, component: Component, ...rest }) {\n  return (\n    <Route\n      {...rest}\n      render={(props) => {\n        return token ? <Component {...props} /> : <Redirect to='/login' />;\n      }}\n    />\n  );\n}\n\nconst mapStateToProps = (state) => {\n  const token = state.auth.token;\n  return { token };\n};\n\nexport default connect(mapStateToProps)(PrivateRoute);\n","import { SET_SIDEBAR_VISIBLE } from '../actionTypes';\n\nconst initialState = {\n  sidebarVisible: true\n};\n\nexport function setSidebarVisibleAction(visible) {\n  return (dispatch) => {\n    dispatch({ type: SET_SIDEBAR_VISIBLE, visible });\n  };\n}\n\nexport default function reducer(state = initialState, action) {\n  switch (action.type) {\n    case SET_SIDEBAR_VISIBLE:\n      return {\n        ...state,\n        sidebarVisible: action.visible\n      };\n    default:\n      return state;\n  }\n}\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\n\nexport default function ListItemLink({ icon, primary, to, exact }) {\n  return (\n    <li>\n      <ListItem\n        button\n        component={NavLink}\n        to={to}\n        activeClassName='Mui-selected'\n        exact={exact}\n      >\n        {icon ? <ListItemIcon>{icon}</ListItemIcon> : null}\n        <ListItemText primary={primary} />\n      </ListItem>\n    </li>\n  );\n}\n","import React, { useState } from 'react';\nimport { setSidebarVisibleAction } from '../redux/reducers/pageState';\nimport { logoutAction } from '../redux/reducers/auth';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport clsx from 'clsx';\nimport CssBaseLine from '@material-ui/core/CssBaseline';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport Typography from '@material-ui/core/Typography';\nimport Drawer from '@material-ui/core/Drawer';\nimport Divider from '@material-ui/core/Divider';\nimport List from '@material-ui/core/List';\nimport ListItemLink from './ListItemLink';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\nimport HomeIcon from '@material-ui/icons/Home';\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Menu from '@material-ui/core/Menu';\nimport stateRegister from '../register/stateRegister';\nimport { useMediaQuery } from '@material-ui/core';\n\nconst drawerWidth = 240;\n\nconst links = [\n  {\n    to: '/',\n    text: 'Home',\n    icon: <HomeIcon />,\n    exact: true\n  }\n];\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex'\n  },\n  appBar: {\n    transition: theme.transitions.create(['margin', 'width'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen\n    })\n  },\n  appBarShift: {\n    width: `calc(100% - ${drawerWidth}px)`,\n    marginLeft: drawerWidth,\n    transition: theme.transitions.create(['margin', 'width'], {\n      easing: theme.transitions.easing.easeOut,\n      duration: theme.transitions.duration.enteringScreen\n    })\n  },\n  menuButton: {\n    marginRight: theme.spacing(2)\n  },\n  title: {\n    flexGrow: 1\n  },\n  hide: {\n    display: 'none'\n  },\n  drawer: {\n    width: drawerWidth,\n    flexShrink: 0\n  },\n  drawerPaper: {\n    width: drawerWidth\n  },\n  drawerHeader: {\n    display: 'flex',\n    alignItems: 'center',\n    padding: theme.spacing(0, 1),\n    // necessary for content to be below app bar\n    ...theme.mixins.toolbar,\n    justifyContent: 'flex-end'\n  },\n  content: {\n    flexGrow: 1,\n    padding: theme.spacing(3),\n    transition: theme.transitions.create('margin', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen\n    })\n  },\n  contentSmUp: {\n    marginLeft: -drawerWidth\n  },\n  contentShift: {\n    transition: theme.transitions.create('margin', {\n      easing: theme.transitions.easing.easeOut,\n      duration: theme.transitions.duration.enteringScreen\n    }),\n    marginLeft: 0\n  }\n}));\n\nfunction DrawerContent({ handleDrawerClose, classes, entityLinks }) {\n  const theme = useTheme();\n  return (\n    <React.Fragment>\n      <div className={classes.drawerHeader}>\n        <IconButton onClick={handleDrawerClose}>\n          {theme.direction === 'ltr' ? (\n            <ChevronLeftIcon />\n          ) : (\n            <ChevronRightIcon />\n          )}\n        </IconButton>\n      </div>\n      <Divider />\n      <List>\n        {links.map((link) => (\n          <ListItemLink\n            key={link.text}\n            to={link.to}\n            primary={link.text}\n            icon={link.icon}\n            exact={link.exact}\n          />\n        ))}\n        {entityLinks.map((link) => (\n          <ListItemLink\n            key={link.text}\n            to={link.to}\n            primary={link.text}\n            icon={link.icon}\n            exact={true}\n          />\n        ))}\n      </List>\n    </React.Fragment>\n  );\n}\n\nfunction Base({ children, token, sidebarVisible, setSidebarVisible, logout }) {\n  const classes = useStyles();\n  const theme = useTheme();\n  const entityLinks = stateRegister.getLinks();\n\n  const smUp = useMediaQuery(theme.breakpoints.up('sm'));\n\n  const [anchorEl, setAnchorEl] = useState(null);\n  const open = Boolean(anchorEl);\n\n  const handleMenu = (event) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleCloseMenu = () => {\n    setAnchorEl(null);\n  };\n\n  const handleDrawerOpen = () => {\n    setSidebarVisible(true);\n  };\n\n  const handleDrawerClose = () => {\n    setSidebarVisible(false);\n  };\n\n  const handleLogout = () => {\n    handleCloseMenu();\n    logout();\n  };\n\n  return (\n    <div className={classes.root}>\n      <CssBaseLine />\n      {token && (\n        <React.Fragment>\n          <AppBar\n            position='fixed'\n            className={clsx(classes.appBar, {\n              [classes.appBarShift]: sidebarVisible && smUp\n            })}\n          >\n            <Toolbar>\n              <IconButton\n                color='inherit'\n                aria-label='open drawer'\n                onClick={handleDrawerOpen}\n                edge='start'\n                className={clsx(\n                  classes.menuButton,\n                  sidebarVisible && classes.hide\n                )}\n              >\n                <MenuIcon />\n              </IconButton>\n              <Typography className={classes.title} variant='h6' noWrap>\n                Content management system\n              </Typography>\n              <div>\n                <IconButton\n                  aria-label='account of current user'\n                  aria-controls='menu-appbar'\n                  aria-haspopup='true'\n                  onClick={handleMenu}\n                  color='inherit'\n                >\n                  <AccountCircleIcon />\n                </IconButton>\n                <Menu\n                  id='menu-appbar'\n                  anchorEl={anchorEl}\n                  anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\n                  keepMounted\n                  transformOrigin={{\n                    vertical: 'top',\n                    horizontal: 'right'\n                  }}\n                  open={open}\n                  onClose={handleCloseMenu}\n                >\n                  <MenuItem onClick={handleLogout}>Logout</MenuItem>\n                </Menu>\n              </div>\n            </Toolbar>\n          </AppBar>\n          <Drawer\n            className={classes.drawer}\n            variant={smUp ? 'persistent' : 'temporary'}\n            anchor='left'\n            open={sidebarVisible}\n            onClose={handleDrawerClose}\n            classes={{\n              paper: classes.drawerPaper\n            }}\n          >\n            <DrawerContent\n              classes={classes}\n              handleDrawerClose={handleDrawerClose}\n              entityLinks={entityLinks}\n            />\n          </Drawer>\n        </React.Fragment>\n      )}\n      <main\n        className={clsx(classes.content, {\n          [classes.contentShift]: sidebarVisible && smUp,\n          [classes.contentSmUp]: smUp\n        })}\n      >\n        <div className={classes.drawerHeader} />\n        {children}\n      </main>\n    </div>\n  );\n}\n\nconst mapStateToProps = (state) => {\n  const token = state.auth.token;\n  const sidebarVisible = state.pageState.sidebarVisible;\n  return { token, sidebarVisible };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  const setSidebarVisible = setSidebarVisibleAction;\n  const logout = logoutAction;\n  return bindActionCreators({ setSidebarVisible, logout }, dispatch);\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Base);\n","import React from 'react';\nimport Header from '../components/Header';\n\nexport default function Home() {\n  return (\n    <div>\n      <Header>Home</Header>\n    </div>\n  );\n}\n","export default function NotFound() {\n  return (\n    <div>\n      <h1>Page not found</h1>\n    </div>\n  );\n}\n","import { useState } from 'react';\nimport Container from '@material-ui/core/Container';\nimport { connect } from 'react-redux';\nimport { authAction } from '../redux/reducers/auth';\nimport { bindActionCreators } from 'redux';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport { Redirect } from 'react-router-dom';\nimport { makeStyles } from '@material-ui/core';\nimport Avatar from '@material-ui/core/Avatar';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Typography from '@material-ui/core/Typography';\n\nconst useStyles = makeStyles((theme) => {\n  return {\n    paper: {\n      marginTop: theme.spacing(8),\n      display: 'flex',\n      flexDirection: 'column',\n      alignItems: 'center'\n    },\n    avatar: {\n      margin: theme.spacing(1),\n      backgroundColor: theme.palette.secondary.main\n    },\n    form: {\n      width: '100%',\n      marginTop: theme.spacing(1)\n    },\n    submit: {\n      margin: theme.spacing(3, 0, 2)\n    }\n  };\n});\n\nconst Login = ({ auth, token }) => {\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n\n  const classes = useStyles();\n\n  const onLogin = (e) => {\n    e.preventDefault();\n    auth(username, password);\n  };\n  return (\n    <Container>\n      {token && <Redirect to='/' />}\n      <div className={classes.paper}>\n        <Avatar className={classes.avatar}>\n          <LockOutlinedIcon />\n        </Avatar>\n        <Typography variant='h5'>Login</Typography>\n        <form onSubmit={onLogin}>\n          <TextField\n            label='Username'\n            id='username'\n            variant='outlined'\n            fullWidth\n            required\n            value={username}\n            onChange={(e) => setUsername(e.target.value)}\n            autoFocus\n            margin='normal'\n            autoComplete='username'\n          />\n          <TextField\n            label='Password'\n            id='password'\n            type='password'\n            variant='outlined'\n            fullWidth\n            required\n            margin='normal'\n            autoComplete='current-password'\n            value={password}\n            onChange={(e) => setPassword(e.target.value)}\n          />\n          <Button\n            type='submit'\n            fullWidth\n            variant='contained'\n            color='primary'\n            className={classes.submit}\n          >\n            Login\n          </Button>\n        </form>\n      </div>\n    </Container>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  const token = state.auth.token;\n  return { token };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  const auth = authAction;\n  return bindActionCreators({ auth }, dispatch);\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Login);\n","import React, { useMemo } from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { validateAuthAction } from './redux/reducers/auth';\nimport PrivateRoute from './components/PrivateRoute';\nimport stateRegister from './register/stateRegister';\nimport { bindActionCreators } from 'redux';\nimport Base from './components/Base';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\nimport {\n  createMuiTheme,\n  responsiveFontSizes,\n  ThemeProvider\n} from '@material-ui/core/styles';\nimport CssBaseLine from '@material-ui/core/CssBaseline';\n\nimport './css/App.css';\nimport 'esembico-common/dist/styles/css/CodeHighlighter.css';\n\nimport Home from './pages/Home';\nimport NotFound from './pages/NotFound';\nimport Login from './pages/Login';\n\nfunction App({ validateAuth }) {\n  const routes = stateRegister.getRoutes();\n  validateAuth();\n\n  const prefersDarkMode = useMediaQuery('(prefers-color-scheme: dark)');\n\n  const theme = useMemo(() => {\n    return responsiveFontSizes(\n      createMuiTheme({\n        palette: {\n          type: prefersDarkMode ? 'dark' : 'light'\n        }\n      })\n    );\n  }, [prefersDarkMode]);\n\n  return (\n    <ThemeProvider theme={theme}>\n      <CssBaseLine />\n      <Router>\n        <Base>\n          <Switch>\n            <Route exact={true} path='/login' component={Login} />\n            {routes.map((route) => {\n              return (\n                <PrivateRoute\n                  key={`${route.name}-list`}\n                  exact={true}\n                  path={route.listPath}\n                  component={route.listComponent}\n                />\n              );\n            })}\n            {routes.map((route) => {\n              return (\n                <PrivateRoute\n                  key={`${route.name}-edit`}\n                  exact={true}\n                  path={route.editPath}\n                  component={route.editComponent}\n                />\n              );\n            })}\n            <PrivateRoute exact={true} path='/' component={Home} />\n            <PrivateRoute path='*' component={NotFound} />\n          </Switch>\n        </Base>\n      </Router>\n    </ThemeProvider>\n  );\n}\n\nconst mapStateToProps = () => {\n  return {};\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  const validateAuth = validateAuthAction;\n  return bindActionCreators({ validateAuth }, dispatch);\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { combineReducers } from 'redux';\nimport auth from './auth';\nimport pageState from './pageState';\nimport stateRegister from '../../register/stateRegister';\n\nexport default combineReducers({\n  ...stateRegister.getReducers(),\n  auth,\n  pageState\n});\n","import { createStore, applyMiddleware, compose } from 'redux';\nimport rootReducer from './reducers';\nimport thunk from 'redux-thunk';\n\nconst middlewares = [thunk];\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nexport default createStore(\n  rootReducer,\n  composeEnhancers(applyMiddleware(...middlewares))\n);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './register/initialize';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { Provider } from 'react-redux';\nimport store from './redux/store';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}