{"version":3,"sources":["redux/helpers/createReducer.ts","helpers/api.ts","redux/helpers/getActions.ts","redux/actionTypes.ts","redux/reducers/alert.ts","redux/reducers/selectors/auth.ts","redux/helpers/getMappers.ts","redux/helpers/getSelectors.ts","helpers/caseConverter.ts","components/Responsive/Row.tsx","components/EditorField/TextFieldImpl.tsx","helpers/getDisplayValue.ts","components/EditorField/SearchableField.tsx","components/EditorField/InputErrors.tsx","components/EditorField/MarkdownEditor.tsx","components/EditorField/SelectImpl.tsx","helpers/getLabelText.ts","components/EditorField/ImagePreview.tsx","components/EditorField/BooleanField.tsx","helpers/makeEditor.tsx","helpers/makeValidation.ts","helpers/makeValidationErrorHandler.ts","components/DataTable/DataTable.tsx","components/Header.tsx","components/Responsive/Container.tsx","helpers/makeListPage.tsx","components/Responsive/Column.tsx","components/ButtonWithLoading.tsx","helpers/makeEditPage.tsx","register/stateRegister.ts","register/options/teamOptions.tsx","register/options/recommendationOptions.tsx","register/options/imageOptions.tsx","register/options/prototypeOptions.tsx","register/options/pageOptions.tsx","register/options/userOptions.tsx","register/initialize.ts","redux/reducers/auth.ts","components/PrivateRoute.tsx","redux/reducers/pageState.ts","components/ListItemLink.tsx","components/Base.tsx","redux/reducers/selectors/alert.ts","components/AlertDisplay.tsx","pages/Home.tsx","pages/NotFound.tsx","pages/Login.tsx","App.tsx","reportWebVitals.js","redux/reducers/index.ts","redux/store.ts","index.tsx"],"names":["initialState","allIds","byIds","byPage","error","status","lastPage","currentPage","totalItems","selectedId","editedData","filteredData","pageLoaded","lastEditedField","createReducer","entity","actionEntity","replace","toUpperCase","state","action","type","selectIdAction","setPageAction","page","setEditedDataAction","id","updateDataAction","newIds","includes","data","push","updateEditedDataAction","newData","field","value","trackField","updateAction","page1","new","unshift","setFilteredDataAction","fetchSuccessAction","ids","newLookup","pageItems","payload","nextPage","forEach","item","lookup","newLastPage","Math","max","count","Date","now","fetchErrorAction","setStatusAction","generateHeaders","token","headers","Authorization","fetchWrapper","url","options","Promise","resolve","reject","fetch","then","res","ok","json","message","detail","catch","getActions","endpoint","getPageAction","forceLoad","dispatch","getState","auth","lastLoaded","stateRegister","getSelector","getPageLastLoaded","diff","process","getOption","getNextPageNumber","results","err","selectItemAction","commitDataAction","callback","errorCallback","storeGetter","method","body","JSON","stringify","search","deleteItemAction","store","getCurrentPage","SET_TOKEN","SET_USERNAME","SET_AUTH_ERROR","SET_PERMISSIONS","SET_SUPERUSER","SET_SIDEBAR_VISIBLE","ADD_ALERT","REMOVE_ALERT","alerts","addAlertAction","timestamp","random","toString","substr","removeAlertAction","hasPermission","codename","superuser","isSuperuser","permissions","getPermissions","find","permission","hasModelPermission","model","getMappers","mapStateToProps","getSelectors","getError","getStatus","getCurrentPageData","getLastPage","getSelectedId","getSelectedData","getEditedData","getTotalItems","getLastEditedField","selectedData","canDelete","canAdd","canChange","mapDispatchToProps","fetchAction","bindActionCreators","fetchData","selectPage","selectItem","setEditedData","updateEditedData","commitData","deleteItem","addAlert","getList","getById","getPage","get","map","getFilteredData","toUpperCaseFirstChar","str","charAt","slice","Row","children","className","TextFieldImpl","label","errors","other","classes","TextField","helperText","join","fullWidth","margin","getDisplayValue","displayDefinition","SearchableField","onChange","required","useStore","getAction","getFilteredDataSelector","primaryProperty","useDispatch","Fragment","Autocomplete","getOptionLabel","option","display","_","newValue","onInputChange","e","renderInput","params","getOptionSelected","useStyles","makeStyles","theme","color","palette","main","InputErrors","i","formGroup","marginBottom","spacing","editor","border","primary","backgroundColor","text","background","default","maxWidth","editorError","languages","vba","languageVBA","python","languagePython","renderers","code","language","getLanguageFunction","image","MarkdownEditor","useState","selectedTab","setSelectedTab","clsx","onTabChange","generateMarkdownPreview","markdown","source","SelectImpl","FormControl","InputLabel","Select","displayEmpty","MenuItem","FormHelperText","getLabelText","ImagePreview","base","width","height","alt","imageUrl","URL","src","href","onError","target","style","onLoad","BooleanField","checked","FormGroup","row","FormControlLabel","control","Checkbox","createFieldForProperty","property","onUpdate","others","if","additionalProps","fieldProps","name","multiline","to","dependsOn","InputProps","readOnly","Error","makeEditor","properties","key","makeValidation","requireNumber","isNaN","requireUrl","makeValidationErrorHandler","usePaginationStyle","root","flexShrink","marginLeft","TablePaginationActions","onChangePage","rowsPerPage","useTheme","IconButton","onClick","event","disabled","aria-label","direction","ceil","DataTable","columns","pageData","onPageChange","onSelect","selected","TableContainer","Table","TableHead","TableRow","column","TableCell","header","TableBody","entry","hover","TableFooter","TablePagination","rowsPerPageOptions","colSpan","length","parseInt","current","SelectProps","inputProps","native","ActionsComponent","Header","loading","Typography","variant","LinearProgress","Container","fab","position","bottom","right","dataTable","makeListPage","connect","history","useHistory","useEffect","last","getEditUrl","Fab","Column","buttonProgress","top","left","marginTop","ButtonWithLoading","props","Button","CircularProgress","size","makeEditPage","Editor","setErrors","confirmationOpen","setConfirmationOpen","validateData","useParams","handleClose","onSubmit","preventDefault","Object","keys","severity","title","ButtonGroup","getListUrl","Dialog","open","onClose","aria-labelledby","aria-describedby","DialogTitle","DialogContent","DialogContentText","DialogActions","states","defaultOptions","globalOptions","this","mergedOptions","buildValidationFromEditor","Array","isArray","actions","selectors","mappers","reducer","links","entries","icon","routes","listPath","editPath","listComponent","editComponent","defaultValue","entityName","actionName","selectorName","reducers","word","index","toLowerCase","teamOptions","singularName","artist_name","recommendationOptions","imageOptions","prototypeOptions","pageOptions","userOptions","setGlobalOptions","next","groups","match","register","localStorage","getItem","username","logoutAction","validateAuthAction","stateGetter","is_superuser","user_permissions","authAction","password","non_field_errors","Component","component","rest","render","sidebarVisible","setSidebarVisibleAction","visible","ListItemLink","exact","ListItem","button","NavLink","activeClassName","ListItemIcon","ListItemText","drawerWidth","appBar","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","easeOut","enteringScreen","menuButton","marginRight","flexGrow","hide","drawer","drawerPaper","drawerHeader","alignItems","padding","mixins","toolbar","justifyContent","content","contentSmUp","contentShift","DrawerContent","handleDrawerClose","entityLinks","Divider","List","link","pageState","setSidebarVisible","logout","getLinks","smUp","useMediaQuery","breakpoints","up","anchorEl","setAnchorEl","Boolean","handleCloseMenu","AppBar","Toolbar","edge","noWrap","aria-controls","aria-haspopup","currentTarget","anchorOrigin","vertical","horizontal","keepMounted","transformOrigin","Drawer","anchor","paper","getAlerts","alert","removeAlert","forceUpdate","useReducer","setInterval","hasDeletedAlert","Alert","AlertTitle","Home","NotFound","flexDirection","avatar","secondary","form","submit","setUsername","setPassword","Avatar","autoFocus","autoComplete","validateAuth","getRoutes","prefersDarkMode","useMemo","responsiveFontSizes","createMuiTheme","ThemeProvider","path","Login","route","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","combineReducers","getReducers","setItem","removeItem","newAlerts","middlewares","thunk","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","createStore","rootReducer","applyMiddleware","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.ffe9f680.chunk.js","sourcesContent":["import { DataState, IdLookup, Data } from './types/state';\nimport {\n  DataActionType,\n  SelectIdActionType,\n  SetPageActionType,\n  SetEditedDataActionType,\n  UpdateDataActionType,\n  UpdateEditedDataActionType,\n  UpdateActionType,\n  FetchSuccessActionType,\n  SetFilteredDataActionType,\n  FetchErrorActionType,\n  SetStatusActionType,\n  ReducerFunction\n} from './types/reducer';\n\nconst initialState: DataState = {\n  allIds: [],\n  byIds: {},\n  byPage: {},\n  error: null,\n  status: 'idle',\n  lastPage: 1,\n  currentPage: 1,\n  totalItems: 0,\n  selectedId: null,\n  editedData: null,\n  filteredData: [],\n  pageLoaded: {},\n  lastEditedField: null\n};\n\nexport default function createReducer(entity: string): ReducerFunction {\n  const actionEntity = entity.replace(' ', '_').toUpperCase();\n  const reducer = (state = initialState, action: DataActionType): DataState => {\n    switch (action.type) {\n      case `SELECT_${actionEntity}_ID`:\n        const selectIdAction = action as SelectIdActionType;\n        return {\n          ...state,\n          selectedId: selectIdAction.selectedId\n        };\n      case `SET_PAGE_${actionEntity}`:\n        const setPageAction = action as SetPageActionType;\n        return {\n          ...state,\n          currentPage: setPageAction.page\n        };\n      case `SET_EDITED_DATA_${actionEntity}`:\n        const setEditedDataAction = action as SetEditedDataActionType;\n        const editedData =\n          setEditedDataAction.id === -1\n            ? { id: 0 }\n            : state.byIds[setEditedDataAction.id];\n        return {\n          ...state,\n          editedData\n        };\n      case `UPDATE_DATA_${actionEntity}`:\n        const updateDataAction = action as UpdateDataActionType;\n        const newIds = state.allIds;\n        if (!newIds.includes(updateDataAction.data.id)) {\n          newIds.push(updateDataAction.data.id);\n        }\n        return {\n          ...state,\n          allIds: newIds,\n          byIds: {\n            ...state.byIds,\n            [updateDataAction.data.id]: updateDataAction.data\n          }\n        };\n      case `UPDATE_EDITED_DATA_${actionEntity}`:\n        const updateEditedDataAction = action as UpdateEditedDataActionType;\n        const newData: Data = {\n          id: 0,\n          ...state.editedData,\n          [updateEditedDataAction.field]: updateEditedDataAction.value\n        };\n        return {\n          ...state,\n          editedData: newData,\n          lastEditedField: updateEditedDataAction.trackField\n            ? updateEditedDataAction.field\n            : state.lastEditedField\n        };\n      case `UPDATE_${actionEntity}`:\n        const updateAction = action as UpdateActionType;\n        const page1 = state.byPage[1];\n        if (updateAction.new) {\n          page1.unshift(updateAction.data.id);\n        }\n        return {\n          ...state,\n          byIds: {\n            ...state.byIds,\n            [updateAction.data.id]: updateAction.data\n          },\n          pageLoaded: {}\n        };\n      case `FETCH_${actionEntity}_PENDING`:\n        return {\n          ...state,\n          status: 'loading'\n        };\n      case `SET_FILTERED_DATA_${actionEntity}`:\n        const setFilteredDataAction = action as SetFilteredDataActionType;\n        return {\n          ...state,\n          filteredData: setFilteredDataAction.data\n        };\n      case `FETCH_${actionEntity}_SUCCESS`:\n        const fetchSuccessAction = action as FetchSuccessActionType;\n        const ids: Array<number> = [];\n        const newLookup: IdLookup = {};\n        const pageItems: Array<number> = [];\n        const { data, page, nextPage } = fetchSuccessAction.payload;\n        data.forEach((item: { id: number }) => {\n          pageItems.push(item.id);\n          ids.push(item.id);\n          newLookup[item.id] = item;\n        });\n\n        const lookup = { ...state.byIds, ...newLookup };\n\n        const newLastPage = Math.max(\n          state.lastPage,\n          nextPage || state.lastPage\n        );\n\n        return {\n          ...state,\n          allIds: ids,\n          byIds: lookup,\n          byPage: { ...state.byPage, [page]: pageItems },\n          status: 'idle',\n          lastPage: newLastPage,\n          currentPage: page,\n          totalItems: fetchSuccessAction.payload.count,\n          pageLoaded: {\n            ...state.pageLoaded,\n            [page]: Date.now()\n          }\n        };\n      case `FETCH_${actionEntity}_ERROR`:\n        const fetchErrorAction = action as FetchErrorActionType;\n        return {\n          ...state,\n          error: fetchErrorAction.error,\n          status: 'idle'\n        };\n      case `SET_STATUS_${actionEntity}`:\n        const setStatusAction = action as SetStatusActionType;\n        return {\n          ...state,\n          status: setStatusAction.status\n        };\n      default:\n        return state;\n    }\n  };\n\n  return reducer;\n}\n","export function generateHeaders(token: string): HeadersInit {\n  const headers: HeadersInit = {\n    'Content-Type': 'application/json'\n  };\n  if (token) {\n    headers.Authorization = `Token ${token}`;\n  }\n\n  return headers;\n}\n\nexport function fetchWrapper(url: string, options: RequestInit): Promise<any> {\n  return new Promise((resolve, reject) => {\n    fetch(url, options)\n      .then((res) => {\n        if (!res.ok) {\n          res.json().then((json) => {\n            reject({ status: res.status, message: json.detail });\n          });\n          return;\n        }\n        if (res.status === 204) {\n          resolve(null);\n          return;\n        }\n        res.json().then((json) => {\n          resolve(json);\n        });\n      })\n      .catch(reject);\n  });\n}\n","import stateRegister from '../../register/stateRegister';\nimport { generateHeaders, fetchWrapper } from '../../helpers/api';\nimport {\n  Actions,\n  DeleteItemAction,\n  GetPageAction,\n  SelectItemAction,\n  SetFilteredDataAction,\n  SetEditedDataAction,\n  UpdateEditedDataAction,\n  CommitDataAction\n} from './types/actions';\nimport { GetNextPageNumber } from '../../types/stateRegister';\nimport { GetCurrentPage, GetPageLastLoaded } from './types/selectors';\n\nexport default function getActions(entity: string, endpoint: string): Actions {\n  const actionEntity = entity.replace(' ', '_').toUpperCase();\n\n  const getPageAction: GetPageAction = (page, forceLoad) => {\n    return (dispatch, getState) => {\n      const state = getState();\n      const token = state.auth.token;\n      const getPageLastLoaded = stateRegister.getSelector(\n        entity,\n        'getPageLastLoaded'\n      ) as GetPageLastLoaded;\n      const lastLoaded = getPageLastLoaded(state, page);\n\n      const diff = Date.now() - lastLoaded;\n\n      if (!forceLoad && diff < 60000) {\n        dispatch({ type: `SET_PAGE_${actionEntity}`, page });\n        return;\n      }\n\n      dispatch({ type: `FETCH_${actionEntity}_PENDING` });\n      fetchWrapper(\n        `${process.env.REACT_APP_API_URL}/${endpoint}/?page=${page}`,\n        {\n          headers: generateHeaders(token as string)\n        }\n      )\n        .then((json) => {\n          const getNextPageNumber = stateRegister.getOption(\n            entity,\n            'getNextPageNumber'\n          ) as GetNextPageNumber;\n          const nextPage = getNextPageNumber(json);\n          dispatch({\n            type: `FETCH_${actionEntity}_SUCCESS`,\n            payload: {\n              data: json.results,\n              count: json.count,\n              page,\n              nextPage\n            }\n          });\n          return json.results;\n        })\n        .catch((err) => {\n          dispatch({ type: `FETCH_${actionEntity}_ERROR`, error: err });\n        });\n    };\n  };\n\n  const deleteItemAction: DeleteItemAction = (id, callback, errorCallback) => {\n    return (dispatch, storeGetter) => {\n      dispatch({ type: `SET_STATUS_${actionEntity}`, status: 'deleting' });\n      const store = storeGetter();\n      const token = store.auth.token;\n      const getCurrentPage = stateRegister.getSelector(\n        entity,\n        'getCurrentPage'\n      ) as GetCurrentPage;\n      fetchWrapper(`${process.env.REACT_APP_API_URL}/${endpoint}/${id}/`, {\n        method: 'DELETE',\n        headers: generateHeaders(token as string)\n      })\n        .then(() => {\n          const page = getCurrentPage(store);\n          dispatch(getPageAction(page, true) as any);\n          dispatch({ type: `SET_STATUS_${actionEntity}`, status: 'idle' });\n          if (callback && typeof callback === 'function') {\n            callback();\n          }\n        })\n        .catch((error) => {\n          dispatch({ type: `FETCH_${actionEntity}_ERROR`, error });\n          if (errorCallback) {\n            errorCallback(error);\n          }\n        });\n    };\n  };\n\n  const setFilteredDataAction: SetFilteredDataAction = (search) => {\n    return (dispatch, getState) => {\n      const state = getState();\n      const token = state.auth.token;\n      fetchWrapper(\n        `${process.env.REACT_APP_API_URL}/${endpoint}/?search=${search}`,\n        {\n          headers: generateHeaders(token as string)\n        }\n      )\n        .then((json) => {\n          dispatch({\n            type: `SET_FILTERED_DATA_${actionEntity}`,\n            data: json.results\n          });\n        })\n        .catch((err) => {\n          dispatch({ type: `FETCH_${actionEntity}_ERROR`, error: err });\n        });\n    };\n  };\n\n  const selectItemAction: SelectItemAction = (id) => {\n    return (dispatch) => {\n      dispatch({ type: `SELECT_${actionEntity}_ID`, selectedId: id });\n    };\n  };\n\n  const setEditedDataAction: SetEditedDataAction = (id) => {\n    return (dispatch, getState) => {\n      const state = getState();\n      const token = state.auth.token;\n      if (id === -1 || state[entity].allIds.includes(id)) {\n        dispatch({ type: `SET_EDITED_DATA_${actionEntity}`, id });\n      } else {\n        fetchWrapper(`${process.env.REACT_APP_API_URL}/${endpoint}/${id}/`, {\n          headers: generateHeaders(token as string)\n        })\n          .then((json) => {\n            dispatch({ type: `UPDATE_DATA_${actionEntity}`, data: json });\n            dispatch({ type: `SET_EDITED_DATA_${actionEntity}`, id });\n          })\n          .catch((error) => {\n            dispatch({ type: `FETCH_${actionEntity}_ERROR`, error });\n          });\n      }\n    };\n  };\n\n  const updateEditedDataAction: UpdateEditedDataAction = (\n    field,\n    value,\n    trackField = true\n  ) => {\n    return (dispatch) => {\n      dispatch({\n        type: `UPDATE_EDITED_DATA_${actionEntity}`,\n        field,\n        value,\n        trackField\n      });\n    };\n  };\n\n  const commitDataAction: CommitDataAction = (\n    data,\n    callback,\n    errorCallback\n  ) => {\n    return (dispatch, storeGetter) => {\n      const store = storeGetter();\n      const token = store.auth.token;\n      dispatch({ type: `SET_STATUS_${actionEntity}`, status: 'saving' });\n      fetchWrapper(\n        `${process.env.REACT_APP_API_URL}/${endpoint}/${\n          data.id ? `${data.id}/` : ''\n        }`,\n        {\n          method: data.id ? 'PUT' : 'POST',\n          headers: generateHeaders(token as string),\n          body: JSON.stringify(data)\n        }\n      )\n        .then((json) => {\n          dispatch({\n            type: `UPDATE_${actionEntity}`,\n            data: json,\n            new: !data.id\n          });\n          dispatch({ type: `SET_STATUS_${actionEntity}`, status: 'idle' });\n          if (callback && typeof callback === 'function') {\n            callback(json);\n          }\n        })\n        .catch((error) => {\n          dispatch({ type: `FETCH_${actionEntity}_ERROR`, error });\n          if (errorCallback) {\n            errorCallback(error);\n          }\n        });\n    };\n  };\n\n  return {\n    getPageAction,\n    selectItemAction,\n    setEditedDataAction,\n    updateEditedDataAction,\n    commitDataAction,\n    setFilteredDataAction,\n    deleteItemAction\n  };\n}\n","export const SET_TOKEN = 'SET_TOKEN';\nexport const SET_USERNAME = 'SET_USERNAME';\nexport const SET_AUTH_ERROR = 'SET_AUTH_ERROR';\nexport const SET_PERMISSIONS = 'SET_PERMISSIONS';\nexport const SET_SUPERUSER = 'SET_SUPERUSER';\nexport const SET_SIDEBAR_VISIBLE = 'SET_SIDEBAR_VISIBLE';\nexport const ADD_ALERT = 'ADD_ALERT';\nexport const REMOVE_ALERT = 'REMOVE_ALERT';\n","import { ADD_ALERT, REMOVE_ALERT } from '../actionTypes';\nimport { DispatchActionFunction } from '../helpers/types/actions';\nimport {\n  AddAlertActionType,\n  AlertState,\n  RemoveAlertActionType,\n  AlertActionType,\n  AlertData\n} from './types/alert';\n\nconst initialState: AlertState = {\n  alerts: {}\n};\n\nconst generateId = (): string => {\n  return '_' + Math.random().toString(36).substr(2, 9);\n};\n\nexport function addAlertAction(data: AlertData): DispatchActionFunction {\n  return (dispatch: (action: AddAlertActionType) => void) => {\n    dispatch({\n      type: ADD_ALERT,\n      data: { ...data, timestamp: Date.now() },\n      id: generateId()\n    });\n  };\n}\n\nexport function removeAlertAction(id: string): DispatchActionFunction {\n  return (dispatch: (action: RemoveAlertActionType) => void) => {\n    dispatch({ type: REMOVE_ALERT, id });\n  };\n}\n\nexport default function reducer(\n  state = initialState,\n  action: AlertActionType\n): AlertState {\n  switch (action.type) {\n    case ADD_ALERT:\n      return {\n        ...state,\n        alerts: {\n          ...state.alerts,\n          [action.id]: action.data\n        }\n      };\n    case REMOVE_ALERT:\n      const newAlerts = state.alerts;\n      delete newAlerts[action.id];\n      return {\n        ...state,\n        alerts: newAlerts\n      };\n    default:\n      return state;\n  }\n}\n","import { AuthState, Permission } from '../types/auth';\nimport { ReduxStore } from '../types/base';\n\nexport const getState = (store: ReduxStore): AuthState => {\n  return store.auth;\n};\n\nexport const getToken = (store: ReduxStore): string | null => {\n  return getState(store) ? getState(store).token : null;\n};\n\nexport const getUsername = (store: ReduxStore): string | null => {\n  return getState(store) ? getState(store).username : null;\n};\n\nexport const isSuperuser = (store: ReduxStore): boolean => {\n  return getState(store) ? getState(store).superuser : false;\n};\n\nexport const getPermissions = (store: ReduxStore): Array<Permission> => {\n  return getState(store) ? getState(store).permissions : [];\n};\n\nexport const hasPermission = (store: ReduxStore, codename: string): boolean => {\n  if (isSuperuser(store)) {\n    return true;\n  }\n  const permissions = getPermissions(store);\n  const foundPermission = permissions.find(\n    (permission) => permission.codename === codename\n  );\n\n  return !!foundPermission;\n};\n\nexport const hasModelPermission = (\n  store: ReduxStore,\n  model: string,\n  type: 'add' | 'change' | 'delete' | 'view'\n): boolean => {\n  return hasPermission(store, `${type}_${model}`);\n};\n","import { bindActionCreators } from 'redux';\nimport stateRegister from '../../register/stateRegister';\nimport { Mappers } from './types/mappers';\nimport { addAlertAction } from '../reducers/alert';\nimport { hasModelPermission } from '../reducers/selectors/auth';\n\nexport default function getMappers(entity: string, model: string): Mappers {\n  const mapStateToProps = (state: any) => {\n    const {\n      getError,\n      getStatus,\n      getCurrentPageData,\n      getLastPage,\n      getCurrentPage,\n      getSelectedId,\n      getSelectedData,\n      getEditedData,\n      getTotalItems,\n      getLastEditedField\n    } = stateRegister.getSelectors(entity);\n    const error = getError(state);\n    const status = getStatus(state);\n    const data = getCurrentPageData(state);\n    const lastPage = getLastPage(state);\n    const currentPage = getCurrentPage(state);\n    const selectedId = getSelectedId(state);\n    const selectedData = getSelectedData(state);\n    const editedData = getEditedData(state);\n    const totalItems = getTotalItems(state);\n    const lastEditedField = getLastEditedField(state);\n    const canDelete = hasModelPermission(state, model, 'delete');\n    const canAdd = hasModelPermission(state, model, 'add');\n    const canChange = hasModelPermission(state, model, 'change');\n    return {\n      error,\n      status,\n      data,\n      lastPage,\n      currentPage,\n      selectedId,\n      selectedData,\n      editedData,\n      totalItems,\n      lastEditedField,\n      canAdd,\n      canDelete,\n      canChange\n    };\n  };\n\n  const mapDispatchToProps = (dispatch: any) => {\n    const {\n      fetchAction,\n      getPageAction,\n      selectItemAction,\n      setEditedDataAction,\n      updateEditedDataAction,\n      commitDataAction,\n      deleteItemAction\n    } = stateRegister.getActions(entity);\n    return bindActionCreators(\n      {\n        fetchData: fetchAction,\n        selectPage: getPageAction,\n        selectItem: selectItemAction,\n        setEditedData: setEditedDataAction,\n        updateEditedData: updateEditedDataAction,\n        commitData: commitDataAction,\n        deleteItem: deleteItemAction,\n        addAlert: addAlertAction\n      },\n      dispatch\n    );\n  };\n\n  return { mapStateToProps, mapDispatchToProps };\n}\n","import {\n  GetState,\n  GetList,\n  GetById,\n  Get,\n  GetPage,\n  GetCurrentPage,\n  GetLastPage,\n  GetCurrentPageData,\n  GetStatus,\n  GetError,\n  GetSelectedId,\n  GetSelectedData,\n  GetEditedData,\n  GetFilteredData,\n  GetPageLastLoaded,\n  GetTotalItems,\n  GetLastEditedField,\n  Selectors\n} from './types/selectors';\n\nexport default function getSelectors(entity: string): Selectors {\n  const getState: GetState = (store) => {\n    return store[entity];\n  };\n\n  const getList: GetList = (store) => {\n    return getState(store) ? getState(store).allIds : [];\n  };\n\n  const getById: GetById = (store, id) => {\n    return getState(store) ? { ...getState(store).byIds[id], id } : {};\n  };\n\n  const get: Get = (store) => {\n    return getList(store).map((id: number) => getById(store, id));\n  };\n\n  const getPage: GetPage = (store, page) => {\n    const pageData = getState(store) ? getState(store).byPage[page] : [];\n    return pageData || [];\n  };\n\n  const getCurrentPage: GetCurrentPage = (store) => {\n    return getState(store) ? getState(store).currentPage : 1;\n  };\n\n  const getLastPage: GetLastPage = (store) => {\n    return getState(store) ? getState(store).lastPage : 1;\n  };\n\n  const getCurrentPageData: GetCurrentPageData = (store) => {\n    const currentPage = getCurrentPage(store);\n    return getPage(store, currentPage).map((id: number) => getById(store, id));\n  };\n\n  const getStatus: GetStatus = (store) => {\n    return getState(store) ? getState(store).status : 'idle';\n  };\n\n  const getError: GetError = (store) => {\n    return getState(store) ? getState(store).error : null;\n  };\n\n  const getSelectedId: GetSelectedId = (store) => {\n    return getState(store) ? getState(store).selectedId : null;\n  };\n\n  const getSelectedData: GetSelectedData = (store) => {\n    const selectedId = getSelectedId(store);\n    if (selectedId) {\n      return getSelectedId(store) ? getById(store, selectedId) : {};\n    } else {\n      return {};\n    }\n  };\n\n  const getEditedData: GetEditedData = (store) => {\n    return getState(store) ? getState(store).editedData : null;\n  };\n\n  const getFilteredData: GetFilteredData = (store) => {\n    return getState(store) ? getState(store).filteredData : [];\n  };\n\n  const getPageLastLoaded: GetPageLastLoaded = (store, page) => {\n    const state = getState(store);\n    if (!state) {\n      return 0;\n    }\n    return state.pageLoaded[page] ? state.pageLoaded[page] : 0;\n  };\n\n  const getTotalItems: GetTotalItems = (store) => {\n    return getState(store) ? getState(store).totalItems : 0;\n  };\n\n  const getLastEditedField: GetLastEditedField = (store) => {\n    return getState(store) ? getState(store).lastEditedField : null;\n  };\n\n  return {\n    getState,\n    getList,\n    getById,\n    get,\n    getPage,\n    getCurrentPage,\n    getLastPage,\n    getCurrentPageData,\n    getStatus,\n    getError,\n    getSelectedId,\n    getSelectedData,\n    getEditedData,\n    getFilteredData,\n    getPageLastLoaded,\n    getTotalItems,\n    getLastEditedField\n  };\n}\n","export function toCamelCase(str: string): string {\n  return str\n    .replace(/(?:^\\w|[A-Z]|\\b\\w)/g, function (word, index) {\n      return index === 0 ? word.toLowerCase() : word.toUpperCase();\n    })\n    .replace(/\\s+/g, '');\n}\n\nexport function toUpperCaseFirstChar(str: string): string {\n  return str.charAt(0).toUpperCase() + str.slice(1);\n}\n","import React from 'react';\nimport { RowProps } from '../types/components';\n\nexport default function Row({ children }: RowProps): JSX.Element {\n  return <div className='row'>{children}</div>;\n}\n","import React from 'react';\nimport TextField from '@material-ui/core/TextField';\nimport { TextFieldProps } from '../types/components';\n\nexport default function TextFieldImpl({\n  value,\n  label,\n  errors,\n  ...other\n}: TextFieldProps): JSX.Element {\n  const classes = [];\n  if (value) {\n    classes.push('has-value');\n  }\n  if (errors) {\n    classes.push('has-errors');\n  }\n  return (\n    <TextField\n      error={!!errors}\n      label={label}\n      value={value || ''}\n      helperText={errors?.join('\\n')}\n      fullWidth={true}\n      margin='normal'\n      {...other}\n    />\n  );\n}\n","import { Data, FieldValue } from '../redux/helpers/types/state';\nimport { ResolveValueFromDataFunction } from '../types/stateRegister';\n\nexport default function getDisplayValue(\n  data: Data,\n  displayDefinition: string | ResolveValueFromDataFunction\n): FieldValue {\n  if (!data) {\n    return '';\n  }\n  if (typeof data !== 'object') {\n    return data;\n  }\n  if (typeof displayDefinition === 'string') {\n    return data[displayDefinition];\n  }\n\n  if (typeof displayDefinition === 'function') {\n    return displayDefinition(data);\n  }\n\n  return '';\n}\n","import { TextField } from '@material-ui/core';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport React, { ChangeEvent } from 'react';\nimport { useDispatch, useStore } from 'react-redux';\nimport getDisplayValue from '../../helpers/getDisplayValue';\nimport stateRegister from '../../register/stateRegister';\nimport { SearchableFieldProps } from '../types/components';\nimport { SetFilteredDataAction } from '../../redux/helpers/types/actions';\nimport { GetFilteredData } from '../../redux/helpers/types/selectors';\n\nexport default function SearchableField({\n  label,\n  entity,\n  value,\n  onChange,\n  errors,\n  required\n}: SearchableFieldProps): JSX.Element {\n  const state = useStore().getState();\n  const setFilteredDataAction = stateRegister.getAction(\n    entity,\n    'setFilteredDataAction'\n  ) as SetFilteredDataAction;\n\n  const getFilteredDataSelector = stateRegister.getSelector(\n    entity,\n    'getFilteredData'\n  ) as GetFilteredData;\n\n  const data = getFilteredDataSelector(state);\n\n  const primaryProperty = stateRegister.getOption(\n    entity,\n    'primaryProperty'\n  ) as any;\n  const dispatch = useDispatch();\n\n  const onInputChange = (e: ChangeEvent<unknown>, value: any) => {\n    dispatch(setFilteredDataAction(value));\n  };\n\n  return (\n    <React.Fragment>\n      <Autocomplete\n        options={data}\n        getOptionLabel={(option) =>\n          getDisplayValue(option, primaryProperty.display) as string\n        }\n        onChange={(_, newValue) => {\n          onChange(newValue);\n        }}\n        onInputChange={onInputChange}\n        value={value}\n        renderInput={(params) => (\n          <TextField\n            error={!!errors}\n            helperText={errors?.join('\\n')}\n            {...params}\n            label={label}\n            margin='normal'\n            required={required}\n          />\n        )}\n        getOptionSelected={(option, value) => option?.id === value?.id}\n      />\n    </React.Fragment>\n  );\n}\n","import { makeStyles } from '@material-ui/core';\nimport React from 'react';\nimport { InputErrorsProps } from '../types/components';\n\nconst useStyles = makeStyles((theme) => {\n  return {\n    error: {\n      color: theme.palette.error.main\n    }\n  };\n});\n\nexport default function InputErrors({ errors }: InputErrorsProps): JSX.Element {\n  const classes = useStyles();\n\n  return (\n    <React.Fragment>\n      {errors && (\n        <React.Fragment>\n          {errors.map((error, i) => {\n            return (\n              <span className={classes.error} key={i}>\n                {error}\n              </span>\n            );\n          })}\n        </React.Fragment>\n      )}\n    </React.Fragment>\n  );\n}\n","import React, { useState } from 'react';\nimport ReactMarkdown from 'react-markdown';\nimport ReactMde from 'react-mde';\nimport { CodeHighlighter, languageVBA, languagePython } from 'esembico-common';\nimport { makeStyles } from '@material-ui/core';\n\nimport 'react-mde/lib/styles/css/react-mde-editor.css';\nimport 'react-mde/lib/styles/css/react-mde-toolbar.css';\nimport 'react-mde/lib/styles/css/react-mde.css';\nimport InputErrors from './InputErrors';\nimport clsx from 'clsx';\nimport { CodeRendererParams, MarkdownEditorProps } from '../types/components';\n\nconst useStyles = makeStyles((theme) => {\n  return {\n    formGroup: {\n      marginBottom: theme.spacing(2)\n    },\n    error: {\n      color: theme.palette.error.main\n    },\n    editor: {\n      '& .react-mde': {\n        border: `1px solid ${theme.palette.primary.main}`\n      },\n      '& .mde-header': {\n        backgroundColor: theme.palette.primary.main,\n        '& .mde-tabs button': {\n          color: theme.palette.text.primary,\n          '&.selected': {\n            border: `1px solid ${theme.palette.text.primary}`\n          }\n        }\n      },\n      '& li.mde-header-item button svg': {\n        color: theme.palette.text.primary\n      },\n      '& .mde-textarea-wrapper textarea.mde-text': {\n        backgroundColor: theme.palette.background.default,\n        color: theme.palette.text.primary\n      },\n      // FIXME: Find a better way to make the editor responsive\n      '& .mde-preview-content': {\n        maxWidth: '85vw'\n      }\n    },\n    editorError: {\n      '& .react-mde': {\n        border: `1px solid ${theme.palette.error.main}`\n      }\n    }\n  };\n});\n\ninterface LanguageDictionary {\n  [language: string]: any;\n}\n\nconst languages: LanguageDictionary = {\n  vba: languageVBA,\n  python: languagePython\n};\n\nconst renderers = {\n  code: ({ language, value }: CodeRendererParams) => {\n    return (\n      <CodeHighlighter\n        getLanguageFunction={(language: string, callback: any) =>\n          callback(languages[language])\n        }\n        language={language}\n      >\n        {value}\n      </CodeHighlighter>\n    );\n  },\n  image: (params: any) => {\n    return <img className='responsive-image' {...params}></img>;\n  }\n};\n\nexport default function MarkdownEditor({\n  label,\n  value,\n  onChange,\n  errors\n}: MarkdownEditorProps): JSX.Element {\n  const classes = useStyles();\n\n  const [selectedTab, setSelectedTab] = useState<'write' | 'preview'>('write');\n  return (\n    <div className={classes.formGroup}>\n      <label\n        className={clsx({\n          [classes.error]: !!errors\n        })}\n      >\n        {label}\n      </label>\n      <div\n        className={clsx(classes.editor, {\n          [classes.editorError]: !!errors\n        })}\n      >\n        <ReactMde\n          value={value || ''}\n          onChange={onChange}\n          selectedTab={selectedTab}\n          onTabChange={setSelectedTab}\n          generateMarkdownPreview={(markdown) => {\n            return Promise.resolve(\n              <ReactMarkdown renderers={renderers} source={markdown} />\n            );\n          }}\n        />\n      </div>\n      <InputErrors errors={errors} />\n    </div>\n  );\n}\n","import React from 'react';\nimport Select from '@material-ui/core/Select';\nimport FormControl from '@material-ui/core/FormControl';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport { SelectProps } from '../types/components';\n\nexport default function SelectImpl({\n  label,\n  value,\n  options,\n  errors,\n  onChange,\n  required\n}: SelectProps): JSX.Element {\n  return (\n    <FormControl required={required} error={!!errors} fullWidth>\n      <InputLabel>{label}</InputLabel>\n      <Select\n        required={required}\n        displayEmpty\n        fullWidth\n        value={value}\n        onChange={onChange}\n      >\n        <MenuItem value=''>\n          <em>None</em>\n        </MenuItem>\n        {options.map((option) => {\n          return (\n            <MenuItem key={option.value} value={option.value}>\n              {option.display}\n            </MenuItem>\n          );\n        })}\n      </Select>\n      <FormHelperText>{errors?.join('\\n')}</FormHelperText>\n    </FormControl>\n  );\n}\n","import { Data } from '../redux/helpers/types/state';\nimport { ResolveValueFromDataFunction } from '../types/stateRegister';\n\nexport default function getLabelText(\n  label: string | ResolveValueFromDataFunction,\n  data: Data\n): string {\n  if (typeof label === 'function') {\n    return label(data);\n  }\n\n  return label;\n}\n","import React, { SyntheticEvent } from 'react';\nimport { ImagePreviewProps } from '../types/components';\n\nexport default function ImagePreview({\n  value,\n  base,\n  width,\n  height,\n  alt\n}: ImagePreviewProps): JSX.Element {\n  const imageUrl = new URL(value, base);\n  return (\n    <img\n      className='responsive-image'\n      src={imageUrl.href}\n      width={width}\n      height={height}\n      alt={alt}\n      onError={(e: SyntheticEvent<HTMLImageElement>) =>\n        ((e.target as HTMLImageElement).style.display = 'none')\n      }\n      onLoad={(e: SyntheticEvent<HTMLImageElement>) =>\n        ((e.target as HTMLImageElement).style.display = 'block')\n      }\n    ></img>\n  );\n}\n","import React from 'react';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport { BooleanFieldProps } from '../types/components';\n\nexport default function BooleanField({\n  label,\n  checked,\n  onChange,\n  errors\n}: BooleanFieldProps): JSX.Element {\n  return (\n    <FormGroup row>\n      <FormControl error={!!errors}>\n        <FormControlLabel\n          control={<Checkbox checked={checked} onChange={onChange} />}\n          label={label}\n        />\n        <FormHelperText>{errors?.join('\\n')}</FormHelperText>\n      </FormControl>\n    </FormGroup>\n  );\n}\n","import React, { FC } from 'react';\nimport Row from '../components/Responsive/Row';\nimport TextField from '../components/EditorField/TextFieldImpl';\nimport SearchableField from '../components/EditorField/SearchableField';\nimport MarkdownEditor from '../components/EditorField/MarkdownEditor';\nimport Select from '../components/EditorField/SelectImpl';\nimport getLabelText from './getLabelText';\nimport ImagePreview from '../components/EditorField/ImagePreview';\nimport BooleanField from '../components/EditorField/BooleanField';\nimport {\n  CreateFieldForPropertyParams,\n  EditorProps,\n  MakeEditorParams\n} from './types/makeEditor';\nimport { EditorEntryBase } from '../types/stateRegister';\nimport { Data } from '../redux/helpers/types/state';\n\nfunction createFieldForProperty({\n  property,\n  data,\n  onUpdate,\n  lastEditedField,\n  ...others\n}: CreateFieldForPropertyParams): JSX.Element {\n  if (property.if) {\n    if (!property.if(data)) {\n      return <React.Fragment />;\n    }\n  }\n  const label = getLabelText(property.label, data);\n\n  const additionalProps = property.fieldProps ? property.fieldProps(data) : {};\n\n  switch (property.type) {\n    case 'select':\n      return (\n        <Select\n          {...additionalProps}\n          {...others}\n          label={label}\n          value={data[property.name] as string}\n          onChange={(e: any) => onUpdate(property.name, e.target.value)}\n          options={property.options}\n          required={property.required}\n        />\n      );\n    case 'text':\n      return (\n        <TextField\n          {...additionalProps}\n          {...others}\n          label={label}\n          value={data[property.name] as string}\n          multiline={property.multiline}\n          onChange={(e: any) => onUpdate(property.name, e.target.value)}\n          required={property.required}\n        />\n      );\n    case 'url':\n      return (\n        <TextField\n          {...additionalProps}\n          {...others}\n          label={label}\n          value={data[property.name] as string}\n          onChange={(e: any) => onUpdate(property.name, e.target.value)}\n          required={property.required}\n        />\n      );\n    case 'number':\n      return (\n        <TextField\n          {...additionalProps}\n          {...others}\n          type='number'\n          label={label}\n          value={data[property.name] as string}\n          onChange={(e: any) => onUpdate(property.name, e.target.value || null)}\n          required={property.required}\n          {...others}\n        />\n      );\n    case 'reference':\n      return (\n        <SearchableField\n          {...additionalProps}\n          {...others}\n          label={label}\n          entity={property.to}\n          value={data[property.name] as Data}\n          onChange={(value: any) => onUpdate(property.name, value)}\n          required={property.required}\n        />\n      );\n    case 'markdown':\n      return (\n        <MarkdownEditor\n          {...additionalProps}\n          {...others}\n          label={label}\n          value={data[property.name] as string}\n          onChange={(value: any) => onUpdate(property.name, value)}\n        />\n      );\n    case 'generated':\n      let value = data[property.name];\n      if (lastEditedField && property.dependsOn.includes(lastEditedField)) {\n        value = property.value(data);\n        if (value !== data[property.name]) {\n          onUpdate(property.name, value, false);\n        }\n      }\n      return (\n        <TextField\n          {...additionalProps}\n          {...others}\n          label={label}\n          InputProps={{\n            readOnly: true\n          }}\n          value={value as string}\n          onChange={(e: any) => onUpdate(property.name, e.target.value)}\n          required={property.required}\n        />\n      );\n    case 'image-preview':\n      return (\n        <ImagePreview\n          {...additionalProps}\n          {...others}\n          value={data[property.name] as string}\n          base={property.base}\n        />\n      );\n    case 'boolean':\n      return (\n        <BooleanField\n          {...others}\n          {...additionalProps}\n          label={label}\n          checked={data[property.name] as boolean}\n          onChange={(e: any) => onUpdate(property.name, e.target.checked)}\n        />\n      );\n    default:\n      throw Error(\n        `Unsupported type for field ${(property as EditorEntryBase).name}`\n      );\n  }\n}\n\nexport default function makeEditor({\n  properties\n}: MakeEditorParams): FC<EditorProps> {\n  const Editor: FC<EditorProps> = ({\n    data,\n    onUpdate,\n    errors,\n    lastEditedField\n  }) => {\n    return (\n      <React.Fragment>\n        <Row>\n          {properties.map((property: any) => {\n            return (\n              <React.Fragment key={property.key || property.name}>\n                {createFieldForProperty({\n                  property,\n                  data,\n                  onUpdate,\n                  errors: errors[property.name],\n                  lastEditedField\n                })}\n              </React.Fragment>\n            );\n          })}\n        </Row>\n      </React.Fragment>\n    );\n  };\n\n  return Editor;\n}\n","import { EditorEntry, ValidateData } from '../types/stateRegister';\nimport getLabelText from './getLabelText';\nimport makeValidationErrorHandler from './makeValidationErrorHandler';\n\nexport default function makeValidation(\n  editor: Array<EditorEntry>\n): ValidateData {\n  return (data) => {\n    const errors = {};\n    const { required, requireNumber, requireUrl } = makeValidationErrorHandler(\n      errors,\n      data\n    );\n    editor.forEach((field) => {\n      if (!field.if || field.if(data)) {\n        const label = getLabelText(field.label, data);\n        if (field.required) {\n          required(label, field.name);\n        }\n        if (field.type === 'number') {\n          requireNumber(label, field.name);\n        }\n        if (field.type === 'url') {\n          requireUrl(label, field.name);\n        }\n      }\n    });\n\n    return errors;\n  };\n}\n","import { Data } from '../redux/helpers/types/state';\nimport { InputErrors } from '../types/stateRegister';\nimport {\n  RequiredHandler,\n  ValidationErrorHandler\n} from './types/makeValidationErrorHandler';\n\nexport default function makeValidationErrorHandler(\n  errors: Record<string, InputErrors>,\n  data: Data\n): ValidationErrorHandler {\n  const required: RequiredHandler = (name, property) => {\n    if (!data[property]) {\n      if (!errors[property]) {\n        errors[property] = [];\n      }\n      errors[property].push(`${name} is required`);\n    }\n  };\n\n  const requireNumber: RequiredHandler = (name, property) => {\n    const value = data[property];\n    if (value && isNaN(value as number)) {\n      if (!errors[property]) {\n        errors[property] = [];\n      }\n      errors[property].push(`${name} should be a number`);\n    }\n  };\n\n  const requireUrl: RequiredHandler = (name, property) => {\n    const value = data[property];\n    try {\n      // eslint-disable-next-line no-new\n      new URL(value as string, 'http://esembico.de');\n    } catch {\n      if (!errors[property]) {\n        errors[property] = [];\n      }\n      errors[property].push(`${name} should be a valid url`);\n    }\n  };\n\n  return { required, requireNumber, requireUrl };\n}\n","import React, { MouseEvent } from 'react';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport Table from '@material-ui/core/Table';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableFooter from '@material-ui/core/TableFooter';\nimport TableRow from '@material-ui/core/TableRow';\nimport TableCell from '@material-ui/core/TableCell';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport getDisplayValue from '../../helpers/getDisplayValue';\nimport IconButton from '@material-ui/core/IconButton';\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\nimport LastPageIcon from '@material-ui/icons/LastPage';\nimport { makeStyles, useTheme } from '@material-ui/core';\nimport { TablePaginationActionsProps } from '@material-ui/core/TablePagination/TablePaginationActions';\nimport { DataTableProps } from '../types/components';\nimport { Data } from '../../redux/helpers/types/state';\n\nconst usePaginationStyle = makeStyles((theme) => {\n  return {\n    root: {\n      flexShrink: 0,\n      marginLeft: theme.spacing(2.5)\n    }\n  };\n});\n\nfunction TablePaginationActions({\n  onChangePage,\n  count,\n  page,\n  rowsPerPage\n}: TablePaginationActionsProps) {\n  const classes = usePaginationStyle();\n  const theme = useTheme();\n  const handleFirstPageButtonClick = (event: MouseEvent<HTMLButtonElement>) => {\n    onChangePage(event, 1);\n  };\n\n  const handleBackButtonClick = (event: MouseEvent<HTMLButtonElement>) => {\n    onChangePage(event, page);\n  };\n\n  const handleNextButtonClick = (event: MouseEvent<HTMLButtonElement>) => {\n    onChangePage(event, page + 2);\n  };\n\n  const handleLastPageButtonClick = (event: MouseEvent<HTMLButtonElement>) => {\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage)));\n  };\n\n  return (\n    <div className={classes.root}>\n      <IconButton\n        onClick={handleFirstPageButtonClick}\n        disabled={page === 0}\n        aria-label='first page'\n      >\n        {theme.direction === 'rtl' ? <LastPageIcon /> : <FirstPageIcon />}\n      </IconButton>\n      <IconButton\n        onClick={handleBackButtonClick}\n        disabled={page === 0}\n        aria-label='previous page'\n      >\n        {theme.direction === 'rtl' ? (\n          <KeyboardArrowRight />\n        ) : (\n          <KeyboardArrowLeft />\n        )}\n      </IconButton>\n      <IconButton\n        onClick={handleNextButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label='next page'\n      >\n        {theme.direction === 'rtl' ? (\n          <KeyboardArrowLeft />\n        ) : (\n          <KeyboardArrowRight />\n        )}\n      </IconButton>\n      <IconButton\n        onClick={handleLastPageButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label='last page'\n      >\n        {theme.direction === 'rtl' ? <FirstPageIcon /> : <LastPageIcon />}\n      </IconButton>\n    </div>\n  );\n}\n\nexport default function DataTable({\n  data,\n  columns,\n  pageData,\n  totalItems,\n  onPageChange,\n  onSelect,\n  selected,\n  className\n}: DataTableProps): JSX.Element {\n  return (\n    <React.Fragment>\n      <TableContainer>\n        <Table className={className}>\n          <TableHead>\n            <TableRow>\n              {columns.map((column) => {\n                return (\n                  <TableCell key={column.header}>{column.header}</TableCell>\n                );\n              })}\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {data.map((entry: Data) => {\n              return (\n                <TableRow\n                  onClick={() => onSelect(entry.id)}\n                  selected={entry.id === selected}\n                  hover\n                  key={entry.id}\n                >\n                  {columns.map((column) => {\n                    const display = getDisplayValue(entry, column.display);\n                    return (\n                      <TableCell key={`${column.header}-${entry.id}`}>\n                        {typeof display === 'object'\n                          ? display\n                          : display.toString()}\n                      </TableCell>\n                    );\n                  })}\n                </TableRow>\n              );\n            })}\n          </TableBody>\n          {totalItems ? (\n            <TableFooter>\n              <TableRow>\n                <TablePagination\n                  rowsPerPageOptions={[]}\n                  colSpan={columns.length}\n                  count={totalItems}\n                  rowsPerPage={parseInt(\n                    process.env.REACT_APP_ROWS_PER_PAGE ?? '50'\n                  )}\n                  page={pageData.current - 1}\n                  SelectProps={{\n                    inputProps: { 'aria-label': 'rows per page' },\n                    native: true\n                  }}\n                  onChangePage={(\n                    e: MouseEvent<HTMLButtonElement> | null,\n                    page: number\n                  ) => onPageChange(page)}\n                  ActionsComponent={TablePaginationActions}\n                />\n              </TableRow>\n            </TableFooter>\n          ) : null}\n        </Table>\n      </TableContainer>\n    </React.Fragment>\n  );\n}\n","import React from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport { HeaderProps } from './types/components';\n\nexport default function Header({\n  children,\n  loading\n}: HeaderProps): JSX.Element {\n  return (\n    <React.Fragment>\n      <Typography variant='h3'>{children}</Typography>\n      {loading ? <LinearProgress /> : <hr />}\n    </React.Fragment>\n  );\n}\n","import React from 'react';\nimport { ContainerProps } from '../types/components';\n\nexport default function Container({ children }: ContainerProps): JSX.Element {\n  return <div className='container'>{children}</div>;\n}\n","import React, { FC, useEffect } from 'react';\nimport DataTable from '../components/DataTable/DataTable';\nimport Header from '../components/Header';\nimport { connect } from 'react-redux';\nimport Container from '../components/Responsive/Container';\nimport stateRegister from '../register/stateRegister';\nimport { useHistory } from 'react-router-dom';\nimport Fab from '@material-ui/core/Fab';\nimport AddIcon from '@material-ui/icons/Add';\nimport { makeStyles } from '@material-ui/core';\nimport { ListPageProps, MakeListPageParams } from './types/makeListPage';\n\nconst useStyles = makeStyles((theme) => {\n  return {\n    fab: {\n      position: 'fixed',\n      bottom: theme.spacing(2),\n      right: theme.spacing(2)\n    },\n    dataTable: {\n      marginBottom: theme.spacing(5)\n    }\n  };\n});\n\nexport default function makeListPage({\n  columns,\n  entity\n}: MakeListPageParams): FC<ListPageProps> {\n  const Component: FC<ListPageProps> = ({\n    data,\n    status,\n    lastPage,\n    currentPage,\n    totalItems,\n    selectPage,\n    selectItem,\n    selectedId,\n    canAdd\n  }) => {\n    const classes = useStyles();\n    const history = useHistory();\n\n    useEffect(() => {\n      selectPage(1);\n    }, [selectPage]);\n\n    const changePage = (page: number) => {\n      selectPage(page);\n    };\n\n    const newEntry = () => {\n      history.push(stateRegister.getEditUrl(entity, 'new'));\n    };\n\n    return (\n      <div>\n        <Header loading={status !== 'idle'}>\n          {stateRegister.getOption(entity, 'header')}\n        </Header>\n        {status !== 'loading' && (\n          <React.Fragment>\n            <Container>\n              <DataTable\n                className={classes.dataTable}\n                pageData={{\n                  current: currentPage,\n                  last: lastPage\n                }}\n                data={data}\n                columns={columns}\n                onPageChange={changePage}\n                onSelect={(id: number) => {\n                  selectItem(id);\n                  history.push(stateRegister.getEditUrl(entity, id));\n                }}\n                selected={selectedId}\n                totalItems={totalItems}\n              />\n              <Fab\n                className={classes.fab}\n                color='primary'\n                aria-label='New'\n                onClick={newEntry}\n                disabled={!canAdd}\n              >\n                <AddIcon />\n              </Fab>\n            </Container>\n          </React.Fragment>\n        )}\n      </div>\n    );\n  };\n  const { mapStateToProps, mapDispatchToProps } = stateRegister.getMappers(\n    entity\n  );\n\n  return connect(mapStateToProps, mapDispatchToProps)(Component);\n}\n","import React from 'react';\nimport { ColumnProps } from '../types/components';\n\nexport default function Column({ children, width }: ColumnProps): JSX.Element {\n  return <div className={`col col-${width}`}>{children}</div>;\n}\n","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport { makeStyles } from '@material-ui/core/styles';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { ButtonWithLoadingProps } from './types/components';\n\nconst useStyles = makeStyles(() => ({\n  buttonProgress: {\n    position: 'absolute',\n    top: '50%',\n    left: '50%',\n    marginTop: -12,\n    marginLeft: -12\n  }\n}));\n\nexport default function ButtonWithLoading({\n  disabled,\n  loading,\n  children,\n  ...props\n}: ButtonWithLoadingProps): JSX.Element {\n  const classes = useStyles();\n  return (\n    <Button {...props} disabled={disabled || loading}>\n      {children}\n      {loading && (\n        <CircularProgress className={classes.buttonProgress} size={24} />\n      )}\n    </Button>\n  );\n}\n","import React, { FC, useEffect, useState, FormEvent } from 'react';\nimport Header from '../components/Header';\nimport { connect } from 'react-redux';\nimport Container from '../components/Responsive/Container';\nimport Row from '../components/Responsive/Row';\nimport Column from '../components/Responsive/Column';\nimport Button from '@material-ui/core/Button';\nimport stateRegister from '../register/stateRegister';\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\nimport { useHistory, useParams } from 'react-router-dom';\nimport Fab from '@material-ui/core/Fab';\nimport AddIcon from '@material-ui/icons/Add';\nimport { makeStyles } from '@material-ui/core';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport getDisplayValue from './getDisplayValue';\nimport ButtonWithLoading from '../components/ButtonWithLoading';\nimport { MakeEditPageParams, EditPageProps } from './types/makeEditPage';\nimport { Property, ValidateData } from '../types/stateRegister';\n\nconst useStyles = makeStyles((theme) => {\n  return {\n    fab: {\n      position: 'fixed',\n      bottom: theme.spacing(2),\n      right: theme.spacing(2)\n    }\n  };\n});\n\nexport default function makeEditPage({\n  Editor,\n  entity\n}: MakeEditPageParams): FC<EditPageProps> {\n  const Component: FC<EditPageProps> = ({\n    editedData,\n    selectPage,\n    setEditedData,\n    updateEditedData,\n    commitData,\n    deleteItem,\n    status,\n    lastEditedField,\n    addAlert,\n    canAdd,\n    canDelete,\n    canChange\n  }) => {\n    const classes = useStyles();\n    const [errors, setErrors] = useState({});\n    const [confirmationOpen, setConfirmationOpen] = useState(false);\n    const validateData = stateRegister.getOption(\n      entity,\n      'validateData'\n    ) as ValidateData;\n    const primaryProperty = stateRegister.getOption(\n      entity,\n      'primaryProperty'\n    ) as Property;\n\n    useEffect(() => {\n      selectPage(1);\n    }, [selectPage]);\n\n    const params: any = useParams();\n    const history = useHistory();\n    const id = params.id;\n\n    const handleClose = () => {\n      setConfirmationOpen(false);\n    };\n\n    useEffect(() => {\n      if (id === 'new') {\n        setEditedData(-1);\n      } else {\n        setEditedData(parseInt(id));\n      }\n    }, [id]);\n\n    useEffect(() => {\n      const errors = validateData(editedData || {});\n      setErrors(errors || {});\n    }, [editedData, validateData]);\n\n    const saveEntry = () => {\n      if (Object.keys(errors).length === 0) {\n        commitData(\n          editedData,\n          (data: any) => {\n            history.push(stateRegister.getEditUrl(entity, data.id));\n          },\n          (error: any) => {\n            addAlert({\n              severity: 'error',\n              title: 'Failed to Save',\n              message: error.message\n            });\n          }\n        );\n      }\n    };\n\n    const onDelete = () => {\n      deleteItem(\n        id,\n        () => {\n          history.push(stateRegister.getListUrl(entity));\n        },\n        (error: any) => {\n          addAlert({\n            severity: 'error',\n            title: 'Failed to Delete',\n            message: error.message\n          });\n        }\n      );\n      setConfirmationOpen(false);\n    };\n\n    const onEditorSubmit = (e: FormEvent) => {\n      e.preventDefault();\n      saveEntry();\n    };\n\n    const newEntry = () => {\n      history.push(stateRegister.getEditUrl(entity, 'new'));\n    };\n\n    return (\n      <div>\n        <Header loading={status !== 'idle'}>\n          {stateRegister.getOption(entity, 'header')}\n        </Header>\n        {editedData && (\n          <Container>\n            <Row>\n              <form onSubmit={onEditorSubmit}>\n                <Editor\n                  errors={errors}\n                  onUpdate={updateEditedData}\n                  data={editedData}\n                  lastEditedField={lastEditedField}\n                />\n                <Column width={100}>\n                  <ButtonGroup color='primary' variant='contained'>\n                    <ButtonWithLoading\n                      loading={status === 'saving'}\n                      disabled={\n                        (id !== 'new' && !canChange) ||\n                        Object.keys(errors).length !== 0\n                      }\n                      type='submit'\n                    >\n                      Save\n                    </ButtonWithLoading>\n                    <Button\n                      onClick={() =>\n                        history.push(stateRegister.getListUrl(entity))\n                      }\n                    >\n                      Cancel\n                    </Button>\n                    <ButtonWithLoading\n                      loading={status === 'deleting'}\n                      onClick={() => setConfirmationOpen(true)}\n                      color='secondary'\n                      disabled={!canDelete || !editedData.id}\n                    >\n                      Delete\n                    </ButtonWithLoading>\n                  </ButtonGroup>\n                </Column>\n              </form>\n            </Row>\n            <Fab\n              className={classes.fab}\n              color='primary'\n              aria-label='New'\n              onClick={newEntry}\n              disabled={!canAdd || !editedData.id}\n            >\n              <AddIcon />\n            </Fab>\n            <Dialog\n              open={confirmationOpen}\n              onClose={handleClose}\n              aria-labelledby='alert-dialog-title'\n              aria-describedby='alert-dialog-description'\n            >\n              <DialogTitle id='alert-dialog-title'>\n                Delete {stateRegister.getOption(entity, 'singularName')}\n              </DialogTitle>\n              <DialogContent>\n                <DialogContentText id='alert-dialog-description'>\n                  Are you sure you want to delete the following{' '}\n                  {stateRegister.getOption(entity, 'singularName')}?\n                  <br />\n                  {getDisplayValue(editedData, primaryProperty.display)}\n                </DialogContentText>\n              </DialogContent>\n              <DialogActions>\n                <Button onClick={onDelete} color='secondary'>\n                  Yes\n                </Button>\n                <Button onClick={handleClose} color='secondary'>\n                  No\n                </Button>\n              </DialogActions>\n            </Dialog>\n          </Container>\n        )}\n      </div>\n    );\n  };\n  const { mapStateToProps, mapDispatchToProps } = stateRegister.getMappers(\n    entity\n  );\n\n  return connect(mapStateToProps, mapDispatchToProps)(Component);\n}\n","import createReducer from '../redux/helpers/createReducer';\nimport getActions from '../redux/helpers/getActions';\nimport getMappers from '../redux/helpers/getMappers';\nimport getSelectors from '../redux/helpers/getSelectors';\nimport { toCamelCase, toUpperCaseFirstChar } from '../helpers/caseConverter';\nimport makeEditor from '../helpers/makeEditor';\nimport makeValidation from '../helpers/makeValidation';\nimport makeListPage from '../helpers/makeListPage';\nimport makeEditPage from '../helpers/makeEditPage';\nimport {\n  States,\n  Options,\n  Link,\n  Route,\n  Reducers,\n  EditorEntry,\n  StateOption\n} from '../types/stateRegister';\nimport { FC } from 'react';\nimport { EditorProps } from '../helpers/types/makeEditor';\n\nclass StateRegister {\n  states: States;\n  defaultOptions: Options;\n  globalOptions: Options;\n  constructor() {\n    this.states = {};\n    this.defaultOptions = {\n      validateData: () => ({})\n    };\n    this.globalOptions = {};\n  }\n\n  setGlobalOptions(options: Options) {\n    this.globalOptions = options;\n  }\n\n  register(name: string, options: Options = {}) {\n    const mergedOptions = {\n      ...this.defaultOptions,\n      ...this.globalOptions,\n      ...options\n    };\n    let editor: FC<EditorProps> | Array<EditorEntry> = options.editor ?? [];\n    let validateData = mergedOptions.validateData;\n    if (mergedOptions.buildValidationFromEditor) {\n      if (!Array.isArray(editor)) {\n        throw Error('editor needs to be an array to build validation');\n      }\n\n      validateData = makeValidation(editor);\n    }\n    if (Array.isArray(editor)) {\n      editor = makeEditor({ properties: editor });\n    }\n    if (!validateData) {\n      throw Error('validateData is required');\n    }\n    if (!editor) {\n      throw new Error('editor is required');\n    }\n    const model = mergedOptions.model ?? name;\n    this.states[name] = {\n      ...mergedOptions,\n      actions: getActions(name, mergedOptions.endpoint || name),\n      selectors: getSelectors(name),\n      mappers: getMappers(name, model),\n      reducer: createReducer(name),\n      header: mergedOptions.header || toUpperCaseFirstChar(name),\n      validateData,\n      editor,\n      model\n    };\n  }\n\n  getListUrl(name: string) {\n    return `/${name}`;\n  }\n\n  getEditUrl(name: string, id: number | string) {\n    return `/${name}/${id}`;\n  }\n\n  getLinks() {\n    const links: Array<Link> = [];\n    Object.entries(this.states).forEach(([name, entry]) => {\n      links.push({\n        text: entry.header,\n        to: this.getListUrl(name),\n        icon: entry.icon\n      });\n    });\n    return links;\n  }\n\n  getRoutes() {\n    const routes: Array<Route> = [];\n    Object.entries(this.states).forEach(([name, entry]) => {\n      routes.push({\n        name,\n        listPath: `/${name}`,\n        editPath: `/${name}/:id`,\n        listComponent: makeListPage({\n          columns: entry.columns ?? [],\n          entity: name\n        }),\n        editComponent: makeEditPage({\n          entity: name,\n          Editor: entry.editor\n        })\n      });\n    });\n    return routes;\n  }\n\n  getOption(name: string, option: string, defaultValue?: StateOption) {\n    const value = this.states[name][option];\n    return value || defaultValue;\n  }\n\n  getActions(name: string) {\n    return this.states[name].actions;\n  }\n\n  getAction(entityName: string, actionName: string) {\n    return this.states[entityName].actions[actionName];\n  }\n\n  getSelectors(name: string) {\n    return this.states[name].selectors;\n  }\n\n  getSelector(entityName: string, selectorName: string) {\n    return this.states[entityName].selectors[selectorName];\n  }\n\n  getMappers(name: string) {\n    return this.states[name].mappers;\n  }\n\n  getReducer(name: string) {\n    return this.states[name].reducer;\n  }\n\n  getReducers() {\n    const reducers: Reducers = {};\n    Object.entries(this.states).forEach(([name, entry]) => {\n      reducers[toCamelCase(name)] = entry.reducer;\n    });\n\n    return reducers;\n  }\n}\n\nconst stateRegister = new StateRegister();\n\nexport default stateRegister;\n","import GroupIcon from '@material-ui/icons/Group';\nimport { Options } from '../../types/stateRegister';\nimport { Data } from '../../redux/helpers/types/state';\n\nconst teamOptions: Options = {\n  singularName: 'team member',\n  model: 'member',\n  icon: <GroupIcon />,\n  endpoint: 'members',\n  columns: [\n    {\n      header: 'Name',\n      display: 'name'\n    },\n    {\n      header: 'Artist name',\n      display: 'artist_name'\n    },\n    {\n      header: 'Title',\n      display: 'titles'\n    }\n  ],\n  primaryProperty: {\n    display: (entry: Data): string => {\n      return `${entry.name} (${entry.artist_name})`;\n    },\n    header: 'Name'\n  },\n  editor: [\n    {\n      type: 'text',\n      label: 'Name',\n      name: 'name',\n      required: true\n    },\n    {\n      type: 'text',\n      label: 'Artist name',\n      name: 'artist_name',\n      required: true\n    },\n    {\n      type: 'text',\n      label: 'Titles',\n      name: 'titles',\n      required: true\n    },\n    {\n      type: 'text',\n      label: 'Bio',\n      name: 'bio',\n      multiline: true,\n      required: true\n    },\n    {\n      type: 'reference',\n      label: 'Image',\n      name: 'image',\n      to: 'images',\n      required: true\n    }\n  ]\n};\n\nexport default teamOptions;\n","import MovieIcon from '@material-ui/icons/Movie';\nimport AllInclusiveIcon from '@material-ui/icons/AllInclusive';\nimport FeaturedPlayListIcon from '@material-ui/icons/FeaturedPlayList';\nimport { Options } from '../../types/stateRegister';\nimport { Data } from '../../redux/helpers/types/state';\n\nconst recommendationOptions: Options = {\n  singularName: 'recommendation',\n  model: 'recommendation',\n  icon: <FeaturedPlayListIcon />,\n  columns: [\n    {\n      header: 'Type',\n      display: (entry: Data): any => {\n        switch (entry.type) {\n          case 'movie':\n            return <MovieIcon />;\n          case 'misc':\n            return <AllInclusiveIcon />;\n          default:\n            return entry.type;\n        }\n      }\n    },\n    {\n      header: 'Title',\n      display: 'title'\n    },\n    {\n      header: 'Description',\n      display: 'description'\n    }\n  ],\n  primaryProperty: {\n    header: 'Title',\n    display: 'title'\n  },\n  editor: [\n    {\n      type: 'select',\n      label: 'Type',\n      name: 'type',\n      options: [\n        { value: 'misc', display: 'Misc' },\n        { value: 'movie', display: 'Movie' }\n      ],\n      required: true\n    },\n    {\n      type: 'url',\n      label: 'Url',\n      name: 'url',\n      required: true\n    },\n    {\n      type: 'text',\n      label: 'Title',\n      name: 'title',\n      required: true\n    },\n    {\n      type: 'reference',\n      label: 'Image',\n      name: 'image',\n      to: 'images',\n      required: true\n    },\n    {\n      type: 'text',\n      label: 'Description',\n      name: 'description',\n      if: (data: Data): boolean => {\n        return data.type === 'misc';\n      },\n      required: true\n    },\n    {\n      type: 'text',\n      label: (data: Data): string => {\n        if (data.type === 'movie') {\n          return 'FSK Rating';\n        }\n        return 'Field1';\n      },\n      name: 'field1',\n      if: (data: Data): boolean => {\n        return data.type === 'movie';\n      },\n      required: true\n    },\n    {\n      type: 'text',\n      label: (data: Data): string => {\n        if (data.type === 'movie') {\n          return 'Release year';\n        }\n        return 'Field2';\n      },\n      name: 'field2',\n      if: (data: Data): boolean => {\n        return data.type === 'movie';\n      },\n      required: true\n    },\n    {\n      type: 'text',\n      label: 'Field3',\n      name: 'field3',\n      if: (): boolean => false\n    },\n    {\n      type: 'text',\n      label: 'Field4',\n      name: 'field4',\n      if: (): boolean => false\n    },\n    {\n      type: 'text',\n      label: 'Field5',\n      name: 'field5',\n      if: (): boolean => false\n    }\n  ]\n};\n\nexport default recommendationOptions;\n","import ImageIcon from '@material-ui/icons/Image';\nimport { Data } from '../../redux/helpers/types/state';\nimport { FieldProps, Options } from '../../types/stateRegister';\n\nconst imageOptions: Options = {\n  singularName: 'image',\n  model: 'image',\n  icon: <ImageIcon />,\n  columns: [\n    {\n      header: 'Url',\n      display: 'url'\n    },\n    {\n      header: 'Alternate text',\n      display: 'alt'\n    },\n    {\n      header: 'Dimension',\n      display: (entry: Data): string => {\n        return `${entry.width || 'auto'} x ${entry.height || 'auto'}`;\n      }\n    }\n  ],\n  primaryProperty: {\n    header: 'Url',\n    display: 'url'\n  },\n  editor: [\n    {\n      type: 'url',\n      label: 'Url',\n      name: 'url',\n      required: true\n    },\n    {\n      type: 'image-preview',\n      label: 'Preview',\n      key: 'image-preview',\n      name: 'url',\n      base: 'http://react.esembico.de',\n      fieldProps: (data: Data): FieldProps => {\n        const { width, height, alt } = data;\n        return { width, height, alt };\n      }\n    },\n    {\n      type: 'text',\n      label: 'Alt',\n      name: 'alt',\n      required: true\n    },\n    {\n      type: 'number',\n      label: 'Width',\n      name: 'width'\n    },\n    {\n      type: 'number',\n      label: 'Height',\n      name: 'height'\n    }\n  ]\n};\n\nexport default imageOptions;\n","import EmojiObjectsIcon from '@material-ui/icons/EmojiObjects';\nimport { Options } from '../../types/stateRegister';\n\nconst prototypeOptions: Options = {\n  singularName: 'prototype',\n  model: 'prototype',\n  icon: <EmojiObjectsIcon />,\n  columns: [\n    {\n      header: 'Title',\n      display: 'title'\n    },\n    {\n      header: 'Subtitle',\n      display: 'subtitle'\n    }\n  ],\n  primaryProperty: {\n    header: 'Title',\n    display: 'title'\n  },\n  editor: [\n    {\n      type: 'text',\n      label: 'Title',\n      name: 'title',\n      required: true\n    },\n    {\n      type: 'text',\n      label: 'Subtitle',\n      name: 'subtitle',\n      required: true\n    },\n    {\n      type: 'url',\n      label: 'Url',\n      name: 'url',\n      required: true\n    },\n    {\n      type: 'reference',\n      label: 'Image',\n      name: 'image',\n      to: 'images',\n      required: true\n    },\n    {\n      type: 'text',\n      label: 'Challenge',\n      name: 'challenge',\n      multiline: true,\n      required: true\n    },\n    {\n      type: 'text',\n      label: 'Solution',\n      name: 'solution',\n      multiline: true,\n      required: true\n    },\n    {\n      type: 'text',\n      label: 'Rough details',\n      name: 'rough_details',\n      multiline: true,\n      required: true\n    }\n  ]\n};\n\nexport default prototypeOptions;\n","import PagesIcon from '@material-ui/icons/Pages';\nimport { Data } from '../../redux/helpers/types/state';\nimport { Options } from '../../types/stateRegister';\n\nconst pageOptions: Options = {\n  singularName: 'page',\n  model: 'page',\n  icon: <PagesIcon />,\n  columns: [\n    {\n      header: 'Name',\n      display: 'name'\n    },\n    {\n      header: 'Slug',\n      display: 'slug'\n    }\n  ],\n  primaryProperty: {\n    header: 'Name',\n    display: 'name'\n  },\n  editor: [\n    {\n      type: 'text',\n      label: 'Name',\n      name: 'name',\n      required: true\n    },\n    {\n      type: 'generated',\n      label: 'Slug',\n      name: 'slug',\n      value: (data: Data): string => {\n        if (typeof data.name === 'string')\n          return data.name?.replace(' ', '-').toLowerCase();\n        return '';\n      },\n      dependsOn: ['name'],\n      required: true\n    },\n    {\n      type: 'markdown',\n      label: 'Content',\n      name: 'content',\n      required: true\n    }\n  ]\n};\n\nexport default pageOptions;\n","import PersonIcon from '@material-ui/icons/Person';\nimport { Options } from '../../types/stateRegister';\n\nconst userOptions: Options = {\n  singularName: 'user',\n  model: 'user',\n  icon: <PersonIcon />,\n  columns: [\n    {\n      header: 'Username',\n      display: 'username'\n    },\n    {\n      header: 'Email',\n      display: 'email'\n    },\n    {\n      header: 'Active',\n      display: 'is_active'\n    }\n  ],\n  primaryProperty: {\n    header: 'Username',\n    display: 'username'\n  },\n  editor: [\n    {\n      type: 'text',\n      label: 'Username',\n      name: 'username',\n      required: true\n    },\n    {\n      type: 'text',\n      label: 'Email',\n      name: 'email'\n    },\n    {\n      type: 'text',\n      label: 'First name',\n      name: 'first_name'\n    },\n    {\n      type: 'text',\n      label: 'Last name',\n      name: 'last_name'\n    },\n    {\n      type: 'boolean',\n      label: 'Superuser',\n      name: 'is_superuser'\n    },\n    {\n      type: 'boolean',\n      label: 'Active',\n      name: 'is_active'\n    },\n    {\n      type: 'boolean',\n      label: 'Staff',\n      name: 'is_staff'\n    }\n  ]\n};\n\nexport default userOptions;\n","import stateRegister from './stateRegister';\nimport teamOptions from './options/teamOptions';\nimport recommendationOptions from './options/recommendationOptions';\nimport imageOptions from './options/imageOptions';\nimport prototypeOptions from './options/prototypeOptions';\nimport pageOptions from './options/pageOptions';\nimport userOptions from './options/userOptions';\n\nstateRegister.setGlobalOptions({\n  buildValidationFromEditor: true,\n  getNextPageNumber: (json) => {\n    const pageRegex = /[\\w\\W]*page=([0-9]*)/;\n    if (json.next && typeof json.next === 'string') {\n      const groups = json.next.match(pageRegex);\n      if (groups) {\n        return parseInt(groups[1]);\n      }\n      return null;\n    } else {\n      return null;\n    }\n  }\n});\nstateRegister.register('team', teamOptions);\nstateRegister.register('recommendations', recommendationOptions);\nstateRegister.register('prototypes', prototypeOptions);\nstateRegister.register('pages', pageOptions);\nstateRegister.register('images', imageOptions);\nstateRegister.register('users', userOptions);\n","import {\n  SET_TOKEN,\n  SET_USERNAME,\n  SET_AUTH_ERROR,\n  SET_SUPERUSER,\n  SET_PERMISSIONS\n} from '../actionTypes';\nimport { generateHeaders, fetchWrapper } from '../../helpers/api';\nimport {\n  AuthActionType,\n  AuthState,\n  SetAuthErrorActionType,\n  SetPermissionsActionType,\n  SetSuperuserActionType,\n  SetTokenActionType,\n  SetUsernameActionType\n} from './types/auth';\nimport { DispatchActionFunction } from '../helpers/types/actions';\n\nconst localToken = localStorage.getItem('token');\n\nconst initialState: AuthState = {\n  token: localToken,\n  username: null,\n  error: null,\n  superuser: false,\n  permissions: []\n};\n\nexport function logoutAction(): DispatchActionFunction {\n  return (\n    dispatch: (action: SetTokenActionType | SetUsernameActionType) => void\n  ) => {\n    dispatch({ type: SET_TOKEN, token: null });\n    dispatch({ type: SET_USERNAME, username: null });\n  };\n}\n\nexport function validateAuthAction(): DispatchActionFunction {\n  return (\n    dispatch: (\n      action:\n        | SetTokenActionType\n        | SetUsernameActionType\n        | SetAuthErrorActionType\n        | SetPermissionsActionType\n        | SetSuperuserActionType\n    ) => void,\n    stateGetter: () => any\n  ) => {\n    const state = stateGetter();\n    fetchWrapper(`${process.env.REACT_APP_API_URL}/current-user/`, {\n      headers: generateHeaders(state.auth.token)\n    })\n      .then((json) => {\n        dispatch({ type: SET_USERNAME, username: json.username });\n        dispatch({ type: SET_SUPERUSER, superuser: json.is_superuser });\n        dispatch({ type: SET_PERMISSIONS, permissions: json.user_permissions });\n      })\n      .catch((error) => {\n        dispatch({ type: SET_TOKEN, token: null });\n        dispatch({ type: SET_AUTH_ERROR, error });\n      });\n  };\n}\n\nexport function authAction(\n  username: string,\n  password: string\n): DispatchActionFunction {\n  return (\n    dispatch: (\n      action:\n        | SetAuthErrorActionType\n        | SetTokenActionType\n        | DispatchActionFunction\n    ) => void\n  ) => {\n    fetchWrapper(`${process.env.REACT_APP_API_URL}/auth/`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        username,\n        password\n      })\n    })\n      .then((json) => {\n        if (json.non_field_errors) {\n          dispatch({ type: SET_AUTH_ERROR, error: json.non_field_errors });\n        } else {\n          dispatch({ type: SET_TOKEN, token: json.token });\n          dispatch(validateAuthAction());\n        }\n      })\n      .catch((error) => {\n        dispatch({ type: SET_AUTH_ERROR, error });\n      });\n  };\n}\n\nexport default function reducer(\n  state = initialState,\n  action: AuthActionType\n): AuthState {\n  switch (action.type) {\n    case SET_TOKEN:\n      if (action.token) {\n        localStorage.setItem('token', action.token);\n      } else {\n        localStorage.removeItem('token');\n      }\n      return {\n        ...state,\n        token: action.token\n      };\n    case SET_USERNAME:\n      return {\n        ...state,\n        username: action.username\n      };\n    case SET_AUTH_ERROR:\n      return {\n        ...state,\n        error: action.error\n      };\n    case SET_SUPERUSER:\n      return {\n        ...state,\n        superuser: action.superuser\n      };\n    case SET_PERMISSIONS:\n      return {\n        ...state,\n        permissions: action.permissions\n      };\n    default:\n      return state;\n  }\n}\n","import React from 'react';\nimport { Redirect, Route } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { PrivateRouteProps } from './types/components';\n\nfunction PrivateRoute({\n  token,\n  component: Component,\n  ...rest\n}: PrivateRouteProps): JSX.Element {\n  return (\n    <Route\n      {...rest}\n      render={(props) => {\n        return token ? <Component {...props} /> : <Redirect to='/login' />;\n      }}\n    />\n  );\n}\n\nconst mapStateToProps = (state: { auth: { token: string | null } }) => {\n  const token = state.auth.token;\n  return { token };\n};\n\nexport default connect(mapStateToProps)(PrivateRoute);\n","import { SET_SIDEBAR_VISIBLE } from '../actionTypes';\nimport { DispatchActionFunction } from '../helpers/types/actions';\nimport {\n  PageState,\n  SetSidebarVisibleActionType,\n  PageStateActionType\n} from './types/pageState';\n\nconst initialState: PageState = {\n  sidebarVisible: true\n};\n\nexport function setSidebarVisibleAction(\n  visible: boolean\n): DispatchActionFunction {\n  return (dispatch: (action: SetSidebarVisibleActionType) => void) => {\n    dispatch({ type: SET_SIDEBAR_VISIBLE, visible });\n  };\n}\n\nexport default function reducer(\n  state = initialState,\n  action: PageStateActionType\n): PageState {\n  switch (action.type) {\n    case SET_SIDEBAR_VISIBLE:\n      return {\n        ...state,\n        sidebarVisible: action.visible\n      };\n    default:\n      return state;\n  }\n}\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport { ListItemLinkProps } from './types/components';\n\nexport default function ListItemLink({\n  icon,\n  primary,\n  to,\n  exact\n}: ListItemLinkProps): JSX.Element {\n  return (\n    <li>\n      <ListItem\n        button\n        component={NavLink}\n        to={to}\n        activeClassName='Mui-selected'\n        exact={exact}\n      >\n        {icon ? <ListItemIcon>{icon}</ListItemIcon> : null}\n        <ListItemText primary={primary} />\n      </ListItem>\n    </li>\n  );\n}\n","import React, { useState } from 'react';\nimport { setSidebarVisibleAction } from '../redux/reducers/pageState';\nimport { logoutAction } from '../redux/reducers/auth';\nimport { connect } from 'react-redux';\nimport { AnyAction, bindActionCreators, Dispatch } from 'redux';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport clsx from 'clsx';\nimport CssBaseLine from '@material-ui/core/CssBaseline';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport Typography from '@material-ui/core/Typography';\nimport Drawer from '@material-ui/core/Drawer';\nimport Divider from '@material-ui/core/Divider';\nimport List from '@material-ui/core/List';\nimport ListItemLink from './ListItemLink';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\nimport HomeIcon from '@material-ui/icons/Home';\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Menu from '@material-ui/core/Menu';\nimport stateRegister from '../register/stateRegister';\nimport { useMediaQuery } from '@material-ui/core';\nimport { BaseProps, DrawerContentProps } from './types/components';\n\nconst drawerWidth = 240;\n\nconst links = [\n  {\n    to: '/',\n    text: 'Home',\n    icon: <HomeIcon />,\n    exact: true\n  }\n];\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex'\n  },\n  appBar: {\n    transition: theme.transitions.create(['margin', 'width'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen\n    })\n  },\n  appBarShift: {\n    width: `calc(100% - ${drawerWidth}px)`,\n    marginLeft: drawerWidth,\n    transition: theme.transitions.create(['margin', 'width'], {\n      easing: theme.transitions.easing.easeOut,\n      duration: theme.transitions.duration.enteringScreen\n    })\n  },\n  menuButton: {\n    marginRight: theme.spacing(2)\n  },\n  title: {\n    flexGrow: 1\n  },\n  hide: {\n    display: 'none'\n  },\n  drawer: {\n    width: drawerWidth,\n    flexShrink: 0\n  },\n  drawerPaper: {\n    width: drawerWidth\n  },\n  drawerHeader: {\n    display: 'flex',\n    alignItems: 'center',\n    padding: theme.spacing(0, 1),\n    // necessary for content to be below app bar\n    ...theme.mixins.toolbar,\n    justifyContent: 'flex-end'\n  },\n  content: {\n    flexGrow: 1,\n    padding: theme.spacing(3),\n    transition: theme.transitions.create('margin', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen\n    })\n  },\n  contentSmUp: {\n    marginLeft: -drawerWidth\n  },\n  contentShift: {\n    transition: theme.transitions.create('margin', {\n      easing: theme.transitions.easing.easeOut,\n      duration: theme.transitions.duration.enteringScreen\n    }),\n    marginLeft: 0\n  }\n}));\n\nfunction DrawerContent({\n  handleDrawerClose,\n  classes,\n  entityLinks\n}: DrawerContentProps): JSX.Element {\n  const theme = useTheme();\n  return (\n    <React.Fragment>\n      <div className={classes.drawerHeader}>\n        <IconButton onClick={handleDrawerClose}>\n          {theme.direction === 'ltr' ? (\n            <ChevronLeftIcon />\n          ) : (\n            <ChevronRightIcon />\n          )}\n        </IconButton>\n      </div>\n      <Divider />\n      <List>\n        {links.map((link) => (\n          <ListItemLink\n            key={link.text}\n            to={link.to}\n            primary={link.text}\n            icon={link.icon}\n            exact={link.exact}\n          />\n        ))}\n        {entityLinks.map((link) => (\n          <ListItemLink\n            key={link.text}\n            to={link.to}\n            primary={link.text}\n            icon={link.icon}\n            exact={true}\n          />\n        ))}\n      </List>\n    </React.Fragment>\n  );\n}\n\nfunction Base({\n  children,\n  token,\n  sidebarVisible,\n  setSidebarVisible,\n  logout\n}: BaseProps): JSX.Element {\n  const classes = useStyles();\n  const theme = useTheme();\n  const entityLinks = stateRegister.getLinks();\n\n  const smUp = useMediaQuery(theme.breakpoints.up('sm'));\n\n  const [anchorEl, setAnchorEl] = useState(null);\n  const open = Boolean(anchorEl);\n\n  const handleMenu = (event: { currentTarget: any }) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleCloseMenu = () => {\n    setAnchorEl(null);\n  };\n\n  const handleDrawerOpen = () => {\n    setSidebarVisible(true);\n  };\n\n  const handleDrawerClose = () => {\n    setSidebarVisible(false);\n  };\n\n  const handleLogout = () => {\n    handleCloseMenu();\n    logout();\n  };\n\n  return (\n    <div className={classes.root}>\n      <CssBaseLine />\n      {token && (\n        <React.Fragment>\n          <AppBar\n            position='fixed'\n            className={clsx(classes.appBar, {\n              [classes.appBarShift]: sidebarVisible && smUp\n            })}\n          >\n            <Toolbar>\n              <IconButton\n                color='inherit'\n                aria-label='open drawer'\n                onClick={handleDrawerOpen}\n                edge='start'\n                className={clsx(\n                  classes.menuButton,\n                  sidebarVisible && classes.hide\n                )}\n              >\n                <MenuIcon />\n              </IconButton>\n              <Typography className={classes.title} variant='h6' noWrap>\n                Content management system\n              </Typography>\n              <div>\n                <IconButton\n                  aria-label='account of current user'\n                  aria-controls='menu-appbar'\n                  aria-haspopup='true'\n                  onClick={handleMenu}\n                  color='inherit'\n                >\n                  <AccountCircleIcon />\n                </IconButton>\n                <Menu\n                  id='menu-appbar'\n                  anchorEl={anchorEl}\n                  anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\n                  keepMounted\n                  transformOrigin={{\n                    vertical: 'top',\n                    horizontal: 'right'\n                  }}\n                  open={open}\n                  onClose={handleCloseMenu}\n                >\n                  <MenuItem onClick={handleLogout}>Logout</MenuItem>\n                </Menu>\n              </div>\n            </Toolbar>\n          </AppBar>\n          <Drawer\n            className={classes.drawer}\n            variant={smUp ? 'persistent' : 'temporary'}\n            anchor='left'\n            open={sidebarVisible}\n            onClose={handleDrawerClose}\n            classes={{\n              paper: classes.drawerPaper\n            }}\n          >\n            <DrawerContent\n              classes={classes}\n              handleDrawerClose={handleDrawerClose}\n              entityLinks={entityLinks}\n            />\n          </Drawer>\n        </React.Fragment>\n      )}\n      <main\n        className={clsx(classes.content, {\n          [classes.contentShift]: sidebarVisible && smUp,\n          [classes.contentSmUp]: smUp\n        })}\n      >\n        <div className={classes.drawerHeader} />\n        {children}\n      </main>\n    </div>\n  );\n}\n\nconst mapStateToProps = (state: {\n  auth: { token: any };\n  pageState: { sidebarVisible: any };\n}) => {\n  const token = state.auth.token;\n  const sidebarVisible = state.pageState.sidebarVisible;\n  return { token, sidebarVisible };\n};\n\nconst mapDispatchToProps = (dispatch: Dispatch<AnyAction>) => {\n  const setSidebarVisible = setSidebarVisibleAction;\n  const logout = logoutAction;\n  return bindActionCreators({ setSidebarVisible, logout }, dispatch);\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Base);\n","import { AlertData, AlertState } from '../types/alert';\nimport { ReduxStore } from '../types/base';\n\nexport const getState = (store: ReduxStore): AlertState => {\n  return store.alert;\n};\n\n// eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\nexport const getAlerts = (store: ReduxStore): Record<string, AlertData> => {\n  return getState(store).alerts;\n};\n\n// eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\nexport const getAlertList = (store: ReduxStore): Array<AlertData> => {\n  return Object.values(getAlerts(store));\n};\n","import React, { useEffect, useReducer } from 'react';\nimport { getAlerts } from '../redux/reducers/selectors/alert';\nimport { removeAlertAction } from '../redux/reducers/alert';\nimport { AnyAction, bindActionCreators, Dispatch } from 'redux';\nimport { connect } from 'react-redux';\nimport { AlertDisplayProps } from './types/components';\nimport Alert from '@material-ui/lab/Alert';\nimport AlertTitle from '@material-ui/lab/AlertTitle';\nimport { makeStyles } from '@material-ui/core';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: '100%',\n    '& > * + *': {\n      marginTop: theme.spacing(2)\n    },\n    marginBottom: theme.spacing(1)\n  }\n}));\n\nconst AlertDisplay = ({ alerts, removeAlert }: AlertDisplayProps) => {\n  const classes = useStyles();\n  const forceUpdate = useReducer(() => ({}), {})[1] as () => void;\n  useEffect(() => {\n    if (Object.keys(alerts).length !== 0) {\n      setInterval(() => {\n        let hasDeletedAlert = false;\n        Object.entries(alerts).forEach(([id, alert]) => {\n          const age = Date.now() - (alert.timestamp ?? 0);\n          if (age >= 5000) {\n            removeAlert(id);\n            hasDeletedAlert = true;\n          }\n        });\n        if (hasDeletedAlert) {\n          forceUpdate();\n        }\n      }, 1000);\n    }\n  }, [alerts]);\n  return (\n    <div className={classes.root}>\n      {Object.entries(alerts).map(([id, alert]) => {\n        return (\n          <Alert\n            key={id}\n            variant='outlined'\n            severity={alert.severity}\n            onClose={() => {\n              removeAlert(id);\n              forceUpdate();\n            }}\n          >\n            {alert.title && <AlertTitle>{alert.title}</AlertTitle>}\n            {alert.message}\n          </Alert>\n        );\n      })}\n    </div>\n  );\n};\n\nconst mapStateToProps = (state: any) => {\n  const alerts = getAlerts(state);\n  return { alerts };\n};\n\nconst mapDispatchToProps = (dispatch: Dispatch<AnyAction>) => {\n  return bindActionCreators({ removeAlert: removeAlertAction }, dispatch);\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AlertDisplay);\n","import Header from '../components/Header';\n\nexport default function Home(): JSX.Element {\n  return (\n    <div>\n      <Header>Home</Header>\n    </div>\n  );\n}\n","export default function NotFound(): JSX.Element {\n  return (\n    <div>\n      <h1>Page not found</h1>\n    </div>\n  );\n}\n","import { useState, FormEvent } from 'react';\nimport Container from '@material-ui/core/Container';\nimport { connect } from 'react-redux';\nimport { authAction } from '../redux/reducers/auth';\nimport { AnyAction, bindActionCreators, Dispatch } from 'redux';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport { Redirect } from 'react-router-dom';\nimport { makeStyles } from '@material-ui/core';\nimport Avatar from '@material-ui/core/Avatar';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Typography from '@material-ui/core/Typography';\nimport { LoginProps } from './types/pages';\n\nconst useStyles = makeStyles((theme) => {\n  return {\n    paper: {\n      marginTop: theme.spacing(8),\n      display: 'flex',\n      flexDirection: 'column',\n      alignItems: 'center'\n    },\n    avatar: {\n      margin: theme.spacing(1),\n      backgroundColor: theme.palette.secondary.main\n    },\n    form: {\n      width: '100%',\n      marginTop: theme.spacing(1)\n    },\n    submit: {\n      margin: theme.spacing(3, 0, 2)\n    }\n  };\n});\n\nconst Login = ({ auth, token }: LoginProps) => {\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n\n  const classes = useStyles();\n\n  const onLogin = (e: FormEvent) => {\n    e.preventDefault();\n    auth(username, password);\n  };\n  return (\n    <Container>\n      {token && <Redirect to='/' />}\n      <div className={classes.paper}>\n        <Avatar className={classes.avatar}>\n          <LockOutlinedIcon />\n        </Avatar>\n        <Typography variant='h5'>Login</Typography>\n        <form onSubmit={onLogin}>\n          <TextField\n            label='Username'\n            id='username'\n            variant='outlined'\n            fullWidth\n            required\n            value={username}\n            onChange={(e) => setUsername(e.target.value)}\n            autoFocus\n            margin='normal'\n            autoComplete='username'\n          />\n          <TextField\n            label='Password'\n            id='password'\n            type='password'\n            variant='outlined'\n            fullWidth\n            required\n            margin='normal'\n            autoComplete='current-password'\n            value={password}\n            onChange={(e) => setPassword(e.target.value)}\n          />\n          <Button\n            type='submit'\n            fullWidth\n            variant='contained'\n            color='primary'\n            className={classes.submit}\n          >\n            Login\n          </Button>\n        </form>\n      </div>\n    </Container>\n  );\n};\n\nconst mapStateToProps = (state: { auth: { token: string | null } }) => {\n  const token = state.auth.token;\n  return { token };\n};\n\nconst mapDispatchToProps = (dispatch: Dispatch<AnyAction>) => {\n  const auth = authAction;\n  return bindActionCreators({ auth }, dispatch);\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Login);\n","import React, { useMemo } from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { validateAuthAction } from './redux/reducers/auth';\nimport PrivateRoute from './components/PrivateRoute';\nimport stateRegister from './register/stateRegister';\nimport { AnyAction, bindActionCreators, Dispatch } from 'redux';\nimport Base from './components/Base';\nimport AlertDisplay from './components/AlertDisplay';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\nimport {\n  createMuiTheme,\n  responsiveFontSizes,\n  ThemeProvider\n} from '@material-ui/core/styles';\nimport CssBaseLine from '@material-ui/core/CssBaseline';\nimport { AppProps } from './types/App';\n\nimport './css/App.css';\nimport 'esembico-common/dist/styles/css/CodeHighlighter.css';\n\nimport Home from './pages/Home';\nimport NotFound from './pages/NotFound';\nimport Login from './pages/Login';\n\nfunction App({ validateAuth }: AppProps) {\n  const routes = stateRegister.getRoutes();\n  validateAuth();\n\n  const prefersDarkMode = useMediaQuery('(prefers-color-scheme: dark)');\n\n  const theme = useMemo(() => {\n    return responsiveFontSizes(\n      createMuiTheme({\n        palette: {\n          type: prefersDarkMode ? 'dark' : 'light'\n        }\n      })\n    );\n  }, [prefersDarkMode]);\n\n  return (\n    <ThemeProvider theme={theme}>\n      <CssBaseLine />\n      <Router>\n        <Base>\n          <AlertDisplay />\n          <Switch>\n            <Route exact={true} path='/login' component={Login} />\n            {routes.map((route) => {\n              return (\n                <PrivateRoute\n                  key={`${route.name}-list`}\n                  exact={true}\n                  path={route.listPath}\n                  component={route.listComponent}\n                />\n              );\n            })}\n            {routes.map((route) => {\n              return (\n                <PrivateRoute\n                  key={`${route.name}-edit`}\n                  exact={true}\n                  path={route.editPath}\n                  component={route.editComponent}\n                />\n              );\n            })}\n            <PrivateRoute exact={true} path='/' component={Home} />\n            <PrivateRoute path='*' component={NotFound} />\n          </Switch>\n        </Base>\n      </Router>\n    </ThemeProvider>\n  );\n}\n\nconst mapStateToProps = () => {\n  return {};\n};\n\nconst mapDispatchToProps = (dispatch: Dispatch<AnyAction>) => {\n  const validateAuth = validateAuthAction;\n  return bindActionCreators({ validateAuth }, dispatch);\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","// eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\nconst reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { combineReducers } from 'redux';\nimport auth from './auth';\nimport pageState from './pageState';\nimport alert from './alert';\nimport stateRegister from '../../register/stateRegister';\n\nexport default combineReducers({\n  ...stateRegister.getReducers(),\n  auth,\n  pageState,\n  alert\n});\n","import { createStore, applyMiddleware, compose } from 'redux';\nimport rootReducer from './reducers';\nimport thunk from 'redux-thunk';\n\ndeclare global {\n  interface Window {\n    __REDUX_DEVTOOLS_EXTENSION_COMPOSE__?: typeof compose;\n  }\n}\n\nconst middlewares = [thunk];\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nexport default createStore(\n  rootReducer,\n  composeEnhancers(applyMiddleware(...middlewares))\n);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './register/initialize';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { Provider } from 'react-redux';\nimport store from './redux/store';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}