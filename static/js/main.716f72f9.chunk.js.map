{"version":3,"sources":["redux/helpers/createReducer.js","helpers/api.js","redux/helpers/getActions.js","redux/helpers/getMappers.js","redux/helpers/getSelectors.js","helpers/caseConverter.js","helpers/getDisplayValue.js","components/DataTable/DataTable.js","components/Header.js","components/LoadingIndicator.js","components/Responsive/Container.js","components/Responsive/Row.js","components/Responsive/Column.js","helpers/makeDataPage.js","components/Input/TextFieldImpl.js","components/Input/SearchableField.js","components/Input/InputErrors.js","components/Input/MarkdownEditor.js","components/Input/SelectImpl.js","helpers/getLabelText.js","helpers/makeEditor.js","helpers/makeValidation.js","helpers/validation.js","register/stateRegister.js","register/options/teamOptions.js","register/options/recommendationOptions.js","register/options/imageOptions.js","register/options/prototypeOptions.js","register/options/pageOptions.js","register/initialize.js","redux/actionTypes.js","redux/reducers/auth.js","components/PrivateRoute.js","redux/reducers/pageState.js","components/ListItemLink.js","components/Base.js","pages/Home.js","pages/NotFound.js","pages/Login.js","App.js","reportWebVitals.js","redux/reducers/index.js","redux/store.js","index.js"],"names":["initialState","allIds","byIds","byPage","error","status","lastPage","currentPage","totalItems","selectedId","editedData","filteredData","pageLoaded","createReducer","entity","actionEntity","replace","toUpperCase","state","action","type","page","id","newData","field","value","page1","new","unshift","data","ids","newLookup","pageItems","payload","nextPage","forEach","member","push","lookup","newLastPage","Math","max","count","Date","now","generateHeaders","token","headers","Authorization","fetchWrapper","url","options","Promise","resolve","reject","fetch","then","res","ok","json","message","catch","getActions","endpoint","getPageAction","forceLoad","dispatch","storeGetter","store","lastLoaded","stateRegister","getSelector","getPageLastLoaded","diff","process","getOption","getNextPageNumber","results","err","fetchAction","selectItemAction","setEditedDataAction","updateEditedDataAction","commitDataAction","stateGetter","auth","method","body","JSON","stringify","setFilteredDataAction","search","deleteItemAction","getCurrentPage","getMappers","mapStateToProps","getSelectors","getError","getStatus","getCurrentPageData","getLastPage","getSelectedId","getSelectedData","getEditedData","getTotalItems","selectedData","mapDispatchToProps","bindActionCreators","fetchData","selectPage","selectItem","setEditedData","updateEditedData","commitData","deleteItem","getState","getList","getById","getPage","get","map","getFilteredData","toUpperCaseFirstChar","str","charAt","slice","getDisplayValue","obj","displayDefinition","usePaginationStyle","makeStyles","theme","root","flexShrink","marginLeft","spacing","TablePaginationActions","onChangePage","rowsPerPage","classes","useTheme","className","IconButton","onClick","disabled","aria-label","direction","ceil","DataTable","columns","pageData","onPageChange","onSelect","selected","Fragment","TableContainer","Table","TableHead","TableRow","column","TableCell","header","TableBody","entry","hover","display","di","TableFooter","TablePagination","rowsPerPageOptions","colSpan","parseInt","current","SelectProps","inputProps","native","ActionsComponent","Header","children","Typography","variant","LoadingIndicator","show","style","margin","width","height","color","size","Container","Row","Column","makeDataPage","Editor","connect","useState","mode","setMode","errors","setErrors","validateData","useEffect","Button","last","editEntry","onUpdate","ButtonGroup","Object","keys","length","TextFieldImpl","label","other","TextField","helperText","join","fullWidth","SearchableField","onChange","required","useStore","getAction","getFilteredDataSelector","primaryProperty","useDispatch","Autocomplete","getOptionLabel","option","_","newValue","onInputChange","e","renderInput","params","getOptionSelected","InputErrors","Array","isArray","i","languages","vba","languageVBA","python","languagePython","renderers","code","language","getLanguageFunction","callback","image","MarkdownEditor","selectedTab","setSelectedTab","onTabChange","generateMarkdownPreview","markdown","source","SelectImpl","FormControl","InputLabel","Select","displayEmpty","MenuItem","FormHelperText","getLabelText","createFieldForProperty","property","others","if","name","target","multiline","to","makeEditor","proprties","makeValidation","editor","this","states","defaultOptions","globalOptions","mergedOptions","buildValidationFromEditor","Error","actions","selectors","mappers","reducer","routes","entries","path","component","pageComponent","defaultValue","entityName","actionName","selectorName","reducers","word","index","toLowerCase","teamOptions","artist_name","recommendationOptions","imageOptions","prototypeOptions","pageOptions","setGlobalOptions","next","groups","match","register","SET_TOKEN","SET_USERNAME","SET_AUTH_ERROR","SET_SIDEBAR_VISIBLE","localStorage","getItem","username","validateAuthAction","user","authAction","password","non_field_errors","Component","rest","render","props","sidebarVisible","setSidebarVisibleAction","visible","ListItemLink","icon","primary","ListItem","button","NavLink","activeClassName","exact","ListItemIcon","ListItemText","drawerWidth","links","text","useStyles","appBar","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","easeOut","enteringScreen","menuButton","marginRight","hide","drawer","drawerPaper","drawerHeader","alignItems","padding","mixins","toolbar","justifyContent","content","flexGrow","contentShift","pageState","setSidebarVisible","AppBar","position","clsx","Toolbar","edge","noWrap","Drawer","anchor","open","paper","Divider","List","link","Home","NotFound","marginTop","flexDirection","avatar","backgroundColor","palette","secondary","main","form","submit","setUsername","setPassword","Avatar","onSubmit","preventDefault","autoFocus","autoComplete","validateAuth","getRoutes","prefersDarkMode","useMediaQuery","useMemo","createMuiTheme","ThemeProvider","Login","route","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","combineReducers","getReducers","setItem","middlewares","thunk","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","createStore","rootReducer","applyMiddleware","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.716f72f9.chunk.js","sourcesContent":["const initialState = {\n  allIds: [],\n  byIds: {},\n  byPage: {},\n  error: null,\n  status: 'idle',\n  lastPage: 1,\n  currentPage: 1,\n  totalItems: 0,\n  selectedId: null,\n  editedData: null,\n  filteredData: [],\n  pageLoaded: {}\n};\n\nexport default function createReducer(entity) {\n  const actionEntity = entity.replace(' ', '_').toUpperCase();\n  const reducer = (state = initialState, action) => {\n    switch (action.type) {\n      case `SELECT_${actionEntity}_ID`:\n        return {\n          ...state,\n          selectedId: action.selectedId\n        };\n      case `SET_PAGE_${actionEntity}`:\n        return {\n          ...state,\n          currentPage: action.page\n        };\n      case `SET_EDITED_DATA_${actionEntity}`:\n        const editedData = action.id === -1 ? {} : state.byIds[action.id];\n        return {\n          ...state,\n          editedData\n        };\n      case `UPDATE_EDITED_DATA_${actionEntity}`:\n        const newData = { ...state.editedData, [action.field]: action.value };\n        return {\n          ...state,\n          editedData: newData\n        };\n      case `UPDATE_${actionEntity}`:\n        const page1 = state.byPage[1];\n        if (action.new) {\n          page1.unshift(action.data.id);\n        }\n        return {\n          ...state,\n          byIds: {\n            ...state.byIds,\n            [action.data.id]: action.data\n          },\n          pageLoaded: {}\n        };\n      case `FETCH_${actionEntity}_PENDING`:\n        return {\n          ...state,\n          status: 'loading'\n        };\n      case `SET_FILTERED_DATA_${actionEntity}`:\n        return {\n          ...state,\n          filteredData: action.data\n        };\n      case `FETCH_${actionEntity}_SUCCESS`:\n        const ids = [];\n        const newLookup = {};\n        const pageItems = [];\n        const { data, page, nextPage } = action.payload;\n        data.forEach((member) => {\n          pageItems.push(member.id);\n          ids.push(member.id);\n          newLookup[member.id] = member;\n        });\n\n        const lookup = { ...state.byIds, ...newLookup };\n\n        const newLastPage = Math.max(\n          state.lastPage,\n          nextPage || state.lastPage\n        );\n\n        return {\n          ...state,\n          allIds: ids,\n          byIds: lookup,\n          byPage: { ...state.byPage, [page]: pageItems },\n          status: 'idle',\n          lastPage: newLastPage,\n          currentPage: page,\n          totalItems: action.payload.count,\n          pageLoaded: {\n            ...state.pageLoaded,\n            [page]: Date.now()\n          }\n        };\n      case `FETCH_${actionEntity}_ERROR`:\n        return {\n          ...state,\n          error: action.error,\n          status: 'idle'\n        };\n      default:\n        return state;\n    }\n  };\n\n  return reducer;\n}\n","export function generateHeaders(token) {\n  const headers = {\n    'Content-Type': 'application/json'\n  };\n  if (token) {\n    headers.Authorization = `Token ${token}`;\n  }\n\n  return headers;\n}\n\nexport function fetchWrapper(url, options) {\n  return new Promise((resolve, reject) => {\n    fetch(url, options)\n      .then((res) => {\n        if (!res.ok) {\n          res.json().then((json) => {\n            reject({ status: res.status, message: json });\n          });\n          return;\n        }\n        if (res.status === 204) {\n          resolve();\n          return;\n        }\n        res.json().then((json) => {\n          resolve(json);\n        });\n      })\n      .catch(reject);\n  });\n}\n","import stateRegister from '../../register/stateRegister';\nimport { generateHeaders, fetchWrapper } from '../../helpers/api';\n\nexport default function getActions(entity, endpoint) {\n  const actionEntity = entity.replace(' ', '_').toUpperCase();\n\n  const getPageAction = (page, forceLoad) => {\n    return (dispatch, storeGetter) => {\n      const store = storeGetter();\n      const getPageLastLoaded = stateRegister.getSelector(\n        entity,\n        'getPageLastLoaded'\n      );\n      const lastLoaded = getPageLastLoaded(store, page);\n\n      const diff = Date.now() - lastLoaded;\n\n      if (!forceLoad && diff < 60000) {\n        dispatch({ type: `SET_PAGE_${actionEntity}`, page });\n        return;\n      }\n\n      dispatch({ type: `FETCH_${actionEntity}_PENDING` });\n      fetchWrapper(\n        `${process.env.REACT_APP_API_URL}/${endpoint}/?page=${page}`,\n        {\n          headers: generateHeaders()\n        }\n      )\n        .then((json) => {\n          const getNextPageNumber = stateRegister.getOption(\n            entity,\n            'getNextPageNumber'\n          );\n          const nextPage = getNextPageNumber(json);\n          dispatch({\n            type: `FETCH_${actionEntity}_SUCCESS`,\n            payload: {\n              data: json.results,\n              count: json.count,\n              page,\n              nextPage\n            }\n          });\n          return json.results;\n        })\n        .catch((err) => {\n          dispatch({ type: `FETCH_${actionEntity}_ERROR`, error: err });\n        });\n    };\n  };\n\n  const deleteItemAction = (id) => {\n    return (dispatch, storeGetter) => {\n      const store = storeGetter();\n      const token = store.auth.token;\n      const getCurrentPage = stateRegister.getSelector(\n        entity,\n        'getCurrentPage'\n      );\n      fetchWrapper(`${process.env.REACT_APP_API_URL}/${endpoint}/${id}/`, {\n        method: 'DELETE',\n        headers: generateHeaders(token)\n      })\n        .then(() => {\n          const page = getCurrentPage(store);\n          dispatch(getPageAction(page, true));\n        })\n        .catch((error) => {\n          dispatch({ type: `FETCH_${actionEntity}_ERROR`, error });\n        });\n    };\n  };\n\n  const setFilteredDataAction = (search) => {\n    return (dispatch) => {\n      fetchWrapper(\n        `${process.env.REACT_APP_API_URL}/${endpoint}/?search=${search}`,\n        {\n          headers: generateHeaders()\n        }\n      )\n        .then((json) => {\n          dispatch({\n            type: `SET_FILTERED_DATA_${actionEntity}`,\n            data: json.results\n          });\n        })\n        .catch((err) => {\n          dispatch({ type: `FETCH_${actionEntity}_ERROR`, error: err });\n        });\n    };\n  };\n\n  const fetchAction = () => {\n    return getPageAction(1);\n  };\n\n  const selectItemAction = (id) => {\n    return (dispatch) => {\n      dispatch({ type: `SELECT_${actionEntity}_ID`, selectedId: id });\n    };\n  };\n\n  const setEditedDataAction = (id) => {\n    return (dispatch) => {\n      dispatch({ type: `SET_EDITED_DATA_${actionEntity}`, id });\n    };\n  };\n\n  const updateEditedDataAction = (field, value) => {\n    return (dispatch) => {\n      dispatch({ type: `UPDATE_EDITED_DATA_${actionEntity}`, field, value });\n    };\n  };\n\n  const commitDataAction = (data) => {\n    return (dispatch, stateGetter) => {\n      const state = stateGetter();\n      const token = state.auth.token;\n      fetchWrapper(\n        `${process.env.REACT_APP_API_URL}/${endpoint}/${\n          data.id ? `${data.id}/` : ''\n        }`,\n        {\n          method: data.id ? 'PUT' : 'POST',\n          headers: generateHeaders(token),\n          body: JSON.stringify(data)\n        }\n      )\n        .then((json) => {\n          dispatch({\n            type: `UPDATE_${actionEntity}`,\n            data: json,\n            new: !data.id\n          });\n        })\n        .catch((err) => {\n          dispatch({ type: `FETCH_${actionEntity}_ERROR`, error: err });\n        });\n    };\n  };\n\n  return {\n    getPageAction,\n    fetchAction,\n    selectItemAction,\n    setEditedDataAction,\n    updateEditedDataAction,\n    commitDataAction,\n    setFilteredDataAction,\n    deleteItemAction\n  };\n}\n","import { bindActionCreators } from 'redux';\nimport stateRegister from '../../register/stateRegister';\n\nexport default function getMappers(entity) {\n  const mapStateToProps = (state) => {\n    const {\n      getError,\n      getStatus,\n      getCurrentPageData,\n      getLastPage,\n      getCurrentPage,\n      getSelectedId,\n      getSelectedData,\n      getEditedData,\n      getTotalItems\n    } = stateRegister.getSelectors(entity);\n    const error = getError(state);\n    const status = getStatus(state);\n    const data = getCurrentPageData(state);\n    const lastPage = getLastPage(state);\n    const currentPage = getCurrentPage(state);\n    const selectedId = getSelectedId(state);\n    const selectedData = getSelectedData(state);\n    const editedData = getEditedData(state);\n    const totalItems = getTotalItems(state);\n    return {\n      error,\n      status,\n      data,\n      lastPage,\n      currentPage,\n      selectedId,\n      selectedData,\n      editedData,\n      totalItems\n    };\n  };\n\n  const mapDispatchToProps = (dispatch) => {\n    const {\n      fetchAction,\n      getPageAction,\n      selectItemAction,\n      setEditedDataAction,\n      updateEditedDataAction,\n      commitDataAction,\n      deleteItemAction\n    } = stateRegister.getActions(entity);\n    return bindActionCreators(\n      {\n        fetchData: fetchAction,\n        selectPage: getPageAction,\n        selectItem: selectItemAction,\n        setEditedData: setEditedDataAction,\n        updateEditedData: updateEditedDataAction,\n        commitData: commitDataAction,\n        deleteItem: deleteItemAction\n      },\n      dispatch\n    );\n  };\n\n  return { mapStateToProps, mapDispatchToProps };\n}\n","export default function getSelectors(entity) {\n  const getState = (store) => {\n    return store[entity];\n  };\n\n  const getList = (store) => {\n    return getState(store) ? getState(store).allIds : [];\n  };\n\n  const getById = (store, id) => {\n    return getState(store) ? { ...getState(store).byIds[id], id } : {};\n  };\n\n  const get = (store) => {\n    return getList(store).map((id) => getById(store, id));\n  };\n\n  const getPage = (store, page) => {\n    const pageData = getState(store) ? getState(store).byPage[page] : [];\n    return pageData || [];\n  };\n\n  const getCurrentPage = (store) => {\n    return getState(store) ? getState(store).currentPage : 1;\n  };\n\n  const getLastPage = (store) => {\n    return getState(store) ? getState(store).lastPage : 1;\n  };\n\n  const getCurrentPageData = (store) => {\n    const currentPage = getCurrentPage(store);\n    return getPage(store, currentPage).map((id) => getById(store, id));\n  };\n\n  const getStatus = (store) => {\n    return getState(store) ? getState(store).status : 'idle';\n  };\n\n  const getError = (store) => {\n    return getState(store) ? getState(store).error : null;\n  };\n\n  const getSelectedId = (store) => {\n    return getState(store) ? getState(store).selectedId : null;\n  };\n\n  const getSelectedData = (store) => {\n    return getSelectedId(store) ? getById(store, getSelectedId(store)) : {};\n  };\n\n  const getEditedData = (store) => {\n    return getState(store) ? getState(store).editedData : null;\n  };\n\n  const getFilteredData = (store) => {\n    return getState(store) ? getState(store).filteredData : [];\n  };\n\n  const getPageLastLoaded = (store, page) => {\n    const state = getState(store);\n    if (!state) {\n      return 0;\n    }\n    return state.pageLoaded[page] ? state.pageLoaded[page] : 0;\n  };\n\n  const getTotalItems = (store) => {\n    return getState(store) ? getState(store).totalItems : 0;\n  };\n\n  return {\n    getState,\n    getList,\n    getById,\n    get,\n    getPage,\n    getCurrentPage,\n    getLastPage,\n    getCurrentPageData,\n    getStatus,\n    getError,\n    getSelectedId,\n    getSelectedData,\n    getEditedData,\n    getFilteredData,\n    getPageLastLoaded,\n    getTotalItems\n  };\n}\n","export function toCamelCase(str) {\n  return str\n    .replace(/(?:^\\w|[A-Z]|\\b\\w)/g, function (word, index) {\n      return index === 0 ? word.toLowerCase() : word.toUpperCase();\n    })\n    .replace(/\\s+/g, '');\n}\n\nexport function toUpperCaseFirstChar(str) {\n  return str.charAt(0).toUpperCase() + str.slice(1);\n}\n","export default function getDisplayValue(obj, displayDefinition) {\n  if (!obj) {\n    return '';\n  }\n  if (typeof obj !== 'object') {\n    return obj;\n  }\n  if (typeof displayDefinition === 'string') {\n    return obj[displayDefinition];\n  }\n\n  if (typeof displayDefinition === 'function') {\n    return displayDefinition(obj);\n  }\n\n  return '';\n}\n","import React from 'react';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport Table from '@material-ui/core/Table';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableFooter from '@material-ui/core/TableFooter';\nimport TableRow from '@material-ui/core/TableRow';\nimport TableCell from '@material-ui/core/TableCell';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport getDisplayValue from '../../helpers/getDisplayValue';\nimport IconButton from '@material-ui/core/IconButton';\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\nimport LastPageIcon from '@material-ui/icons/LastPage';\nimport { makeStyles, useTheme } from '@material-ui/core';\n\nconst usePaginationStyle = makeStyles((theme) => {\n  return {\n    root: {\n      flexShrink: 0,\n      marginLeft: theme.spacing(2.5)\n    }\n  };\n});\n\nfunction TablePaginationActions({ onChangePage, count, page, rowsPerPage }) {\n  const classes = usePaginationStyle();\n  const theme = useTheme();\n  const handleFirstPageButtonClick = () => {\n    onChangePage(1);\n  };\n\n  const handleBackButtonClick = () => {\n    onChangePage(page);\n  };\n\n  const handleNextButtonClick = () => {\n    onChangePage(page + 2);\n  };\n\n  const handleLastPageButtonClick = () => {\n    onChangePage(Math.max(0, Math.ceil(count / rowsPerPage)));\n  };\n\n  return (\n    <div className={classes.root}>\n      <IconButton\n        onClick={handleFirstPageButtonClick}\n        disabled={page === 0}\n        aria-label='first page'\n      >\n        {theme.direction === 'rtl' ? <LastPageIcon /> : <FirstPageIcon />}\n      </IconButton>\n      <IconButton\n        onClick={handleBackButtonClick}\n        disabled={page === 0}\n        aria-label='previous page'\n      >\n        {theme.direction === 'rtl' ? (\n          <KeyboardArrowRight />\n        ) : (\n          <KeyboardArrowLeft />\n        )}\n      </IconButton>\n      <IconButton\n        onClick={handleNextButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label='next page'\n      >\n        {theme.direction === 'rtl' ? (\n          <KeyboardArrowLeft />\n        ) : (\n          <KeyboardArrowRight />\n        )}\n      </IconButton>\n      <IconButton\n        onClick={handleLastPageButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label='last page'\n      >\n        {theme.direction === 'rtl' ? <FirstPageIcon /> : <LastPageIcon />}\n      </IconButton>\n    </div>\n  );\n}\n\nexport default function DataTable({\n  data,\n  columns,\n  pageData,\n  totalItems,\n  onPageChange,\n  onSelect,\n  selected\n}) {\n  return (\n    <React.Fragment>\n      <TableContainer>\n        <Table>\n          <TableHead>\n            <TableRow>\n              {columns.map((column) => {\n                return (\n                  <TableCell key={column.header}>{column.header}</TableCell>\n                );\n              })}\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {data.map((entry) => {\n              return (\n                <TableRow\n                  onClick={() => onSelect(entry.id)}\n                  selected={entry.id === selected}\n                  hover\n                  key={entry.id}\n                >\n                  {columns.map((column) => {\n                    return (\n                      <TableCell key={`${column.header}-${entry.di}`}>\n                        {getDisplayValue(entry, column.display)}\n                      </TableCell>\n                    );\n                  })}\n                </TableRow>\n              );\n            })}\n          </TableBody>\n          {totalItems ? (\n            <TableFooter>\n              <TableRow>\n                <TablePagination\n                  rowsPerPageOptions={[]}\n                  colSpan={3}\n                  count={totalItems}\n                  rowsPerPage={parseInt(process.env.REACT_APP_ROWS_PER_PAGE)}\n                  page={pageData.current - 1}\n                  SelectProps={{\n                    inputProps: { 'aria-label': 'rows per page' },\n                    native: true\n                  }}\n                  onChangePage={onPageChange}\n                  ActionsComponent={TablePaginationActions}\n                />\n              </TableRow>\n            </TableFooter>\n          ) : null}\n        </Table>\n      </TableContainer>\n    </React.Fragment>\n  );\n}\n","import Typography from '@material-ui/core/Typography';\nimport React from 'react';\n\nexport default function Header({ children }) {\n  return (\n    <React.Fragment>\n      <Typography variant='h3'>{children}</Typography>\n      <hr />\n    </React.Fragment>\n  );\n}\n","import React from 'react';\nimport HashLoader from 'react-spinners/HashLoader';\n\nexport default function LoadingIndicator({ show }) {\n  return (\n    <React.Fragment>\n      {show && (\n        <div\n          style={{ margin: '40px auto 0 auto', width: '0px', height: '40px' }}\n        >\n          <HashLoader color='white' size={80}></HashLoader>\n        </div>\n      )}\n    </React.Fragment>\n  );\n}\n","import React from 'react';\n\nexport default function Container({ children }) {\n  return <div className='container'>{children}</div>;\n}\n","import React from 'react';\n\nexport default function Row({ children }) {\n  return <div className='row'>{children}</div>;\n}\n","import React from 'react';\n\nexport default function Column({ children, width }) {\n  return <div className={`col col-${width}`}>{children}</div>;\n}\n","import React, { useEffect, useState } from 'react';\nimport DataTable from '../components/DataTable/DataTable';\nimport Header from '../components/Header';\nimport { connect } from 'react-redux';\nimport LoadingIndicator from '../components/LoadingIndicator';\nimport Container from '../components/Responsive/Container';\nimport Row from '../components/Responsive/Row';\nimport Column from '../components/Responsive/Column';\nimport Button from '@material-ui/core/Button';\nimport stateRegister from '../register/stateRegister';\nimport { ButtonGroup } from '@material-ui/core';\n\nexport default function makeDataPage({ columns, Editor, entity }) {\n  const Component = ({\n    data,\n    status,\n    lastPage,\n    currentPage,\n    editedData,\n    totalItems,\n    fetchData,\n    selectPage,\n    selectItem,\n    selectedId,\n    setEditedData,\n    updateEditedData,\n    commitData,\n    deleteItem\n  }) => {\n    const [mode, setMode] = useState('view');\n    const [errors, setErrors] = useState({});\n    const validateData = stateRegister.getOption(entity, 'validateData');\n    useEffect(() => {\n      fetchData();\n    }, [fetchData]);\n\n    useEffect(() => {\n      const errors = validateData(editedData || {});\n      setErrors(errors || {});\n    }, [editedData, validateData]);\n\n    const changePage = (page) => {\n      selectPage(page);\n    };\n\n    const editEntry = (id) => {\n      setMode('edit');\n      setEditedData(id);\n    };\n\n    const saveEntry = () => {\n      if (Object.keys(errors).length === 0) {\n        commitData(editedData);\n      }\n    };\n\n    const newEntry = () => {\n      setMode('edit');\n      setEditedData(-1);\n      selectItem(null);\n    };\n\n    const onDelete = () => {\n      // FIXME: Ask for confirmation before deleting.\n      deleteItem(selectedId);\n    };\n\n    return (\n      <div>\n        <Header>{stateRegister.getOption(entity, 'header')}</Header>\n        <LoadingIndicator show={status === 'loading'} />\n        {status !== 'loading' && (\n          <React.Fragment>\n            <Container>\n              <Row>\n                <Button variant='contained' color='primary' onClick={newEntry}>\n                  New\n                </Button>\n              </Row>\n              {mode === 'view' && (\n                <DataTable\n                  pageData={{\n                    current: currentPage,\n                    last: lastPage\n                  }}\n                  data={data}\n                  columns={columns}\n                  onPageChange={changePage}\n                  onSelect={(id) => {\n                    editEntry(id);\n                    selectItem(id);\n                  }}\n                  selected={selectedId}\n                  totalItems={totalItems}\n                />\n              )}\n              {mode === 'edit' && (\n                <Row>\n                  <Column width={100}>\n                    {Editor && (\n                      <React.Fragment>\n                        <Editor\n                          errors={errors}\n                          onUpdate={updateEditedData}\n                          data={editedData}\n                        />\n                        <Column width={100}>\n                          <ButtonGroup color='primary' variant='contained'>\n                            <Button onClick={saveEntry}>Save</Button>\n                            <Button onClick={() => setMode('view')}>\n                              Cancel\n                            </Button>\n                            <Button\n                              onClick={() => onDelete()}\n                              color='secondary'\n                            >\n                              Delete\n                            </Button>\n                          </ButtonGroup>\n                        </Column>\n                      </React.Fragment>\n                    )}\n                  </Column>\n                </Row>\n              )}\n            </Container>\n          </React.Fragment>\n        )}\n      </div>\n    );\n  };\n  const { mapStateToProps, mapDispatchToProps } = stateRegister.getMappers(\n    entity\n  );\n\n  return connect(mapStateToProps, mapDispatchToProps)(Component);\n}\n","import React from 'react';\nimport TextField from '@material-ui/core/TextField';\n\nexport default function TextFieldImpl({ value, label, errors, ...other }) {\n  const classes = [];\n  if (value) {\n    classes.push('has-value');\n  }\n  if (errors) {\n    classes.push('has-errors');\n  }\n  return (\n    <TextField\n      error={!!errors}\n      label={label}\n      value={value || ''}\n      helperText={errors?.join('\\n')}\n      fullWidth={true}\n      margin='normal'\n      {...other}\n    />\n  );\n}\n","import { TextField } from '@material-ui/core';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport React from 'react';\nimport { useDispatch, useStore } from 'react-redux';\nimport getDisplayValue from '../../helpers/getDisplayValue';\nimport stateRegister from '../../register/stateRegister';\n\nexport default function SearchableField({\n  label,\n  entity,\n  value,\n  onChange,\n  errors,\n  required\n}) {\n  const state = useStore().getState();\n  const setFilteredDataAction = stateRegister.getAction(\n    entity,\n    'setFilteredDataAction'\n  );\n\n  const getFilteredDataSelector = stateRegister.getSelector(\n    entity,\n    'getFilteredData'\n  );\n\n  const data = getFilteredDataSelector(state);\n\n  const primaryProperty = stateRegister.getOption(entity, 'primaryProperty');\n  const dispatch = useDispatch();\n\n  const onInputChange = (e, value) => {\n    dispatch(setFilteredDataAction(value));\n  };\n\n  return (\n    <React.Fragment>\n      <Autocomplete\n        options={data}\n        getOptionLabel={(option) =>\n          getDisplayValue(option, primaryProperty.display)\n        }\n        onChange={(_, newValue) => {\n          onChange(newValue);\n        }}\n        onInputChange={onInputChange}\n        value={value}\n        renderInput={(params) => (\n          <TextField\n            error={!!errors}\n            helperText={errors?.join('\\n')}\n            {...params}\n            label={label}\n            margin='normal'\n            required={required}\n          />\n        )}\n        getOptionSelected={(option, value) => option?.id === value?.id}\n      />\n    </React.Fragment>\n  );\n}\n","import React from 'react';\n\nexport default function InputErrors({ errors }) {\n  return (\n    <React.Fragment>\n      {errors && (\n        <React.Fragment>\n          {Array.isArray(errors) ? (\n            <React.Fragment>\n              {errors.map((error, i) => {\n                return (\n                  <span className='error' key={i}>\n                    {error}\n                  </span>\n                );\n              })}\n            </React.Fragment>\n          ) : (\n            <span className='error'>{errors}</span>\n          )}\n        </React.Fragment>\n      )}\n    </React.Fragment>\n  );\n}\n","import React, { useState } from 'react';\nimport ReactMarkdown from 'react-markdown';\nimport ReactMde from 'react-mde';\nimport { CodeHighlighter, languageVBA, languagePython } from 'esembico-common';\n\nimport 'react-mde/lib/styles/css/react-mde-editor.css';\nimport 'react-mde/lib/styles/css/react-mde-toolbar.css';\nimport 'react-mde/lib/styles/css/react-mde.css';\nimport '../../css/MarkdownEditor.css';\nimport InputErrors from './InputErrors';\n\nconst languages = {\n  vba: languageVBA,\n  python: languagePython\n};\n\nconst renderers = {\n  code: ({ language, value }) => {\n    return (\n      <CodeHighlighter\n        getLanguageFunction={(language, callback) =>\n          callback(languages[language])\n        }\n        language={language}\n      >\n        {value}\n      </CodeHighlighter>\n    );\n  },\n  image: (params) => {\n    return <img className='responsive-image' {...params}></img>;\n  }\n};\n\nexport default function MarkdownEditor({ label, value, onChange, errors }) {\n  const [selectedTab, setSelectedTab] = useState('write');\n  return (\n    <div className='form-group'>\n      <label className={`markdown-label ${errors ? 'has-errors' : ''}`}>\n        {label}\n      </label>\n      <ReactMde\n        value={value || ''}\n        onChange={onChange}\n        selectedTab={selectedTab}\n        onTabChange={setSelectedTab}\n        generateMarkdownPreview={(markdown) => {\n          return Promise.resolve(\n            <ReactMarkdown renderers={renderers} source={markdown} />\n          );\n        }}\n      />\n      <InputErrors errors={errors} />\n    </div>\n  );\n}\n","import React from 'react';\nimport Select from '@material-ui/core/Select';\nimport FormControl from '@material-ui/core/FormControl';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormHelperText from '@material-ui/core/FormHelperText';\n\nexport default function SelectImpl({\n  label,\n  value,\n  options,\n  errors,\n  onChange,\n  required\n}) {\n  return (\n    <FormControl required={required} error={!!errors} fullWidth>\n      <InputLabel>{label}</InputLabel>\n      <Select\n        required={required}\n        displayEmpty\n        fullWidth\n        value={value}\n        onChange={onChange}\n      >\n        <MenuItem value=''>\n          <em>None</em>\n        </MenuItem>\n        {options.map((option) => {\n          return (\n            <MenuItem key={option.value} value={option.value}>\n              {option.display}\n            </MenuItem>\n          );\n        })}\n      </Select>\n      <FormHelperText>{errors?.join('\\n')}</FormHelperText>\n    </FormControl>\n  );\n}\n","export default function getLabelText(label, data) {\n  if (typeof label === 'function') {\n    return label(data);\n  }\n\n  return label;\n}\n","import React from 'react';\nimport Row from '../components/Responsive/Row';\nimport TextField from '../components/Input/TextFieldImpl';\nimport SearchableField from '../components/Input/SearchableField';\nimport MarkdownEditor from '../components/Input/MarkdownEditor';\nimport Select from '../components/Input/SelectImpl';\nimport getLabelText from './getLabelText';\n\nfunction createFieldForProperty({ property, data, onUpdate, ...others }) {\n  if (property.if) {\n    if (!property.if(data)) {\n      return <React.Fragment />;\n    }\n  }\n  const label = getLabelText(property.label, data);\n  switch (property.type) {\n    case 'select':\n      return (\n        <Select\n          label={label}\n          value={data[property.name]}\n          onChange={(e) => onUpdate(property.name, e.target.value)}\n          options={property.options}\n          required={property.required}\n          {...others}\n        />\n      );\n    case 'text':\n      return (\n        <TextField\n          label={label}\n          value={data[property.name]}\n          multiline={property.multiline}\n          onChange={(e) => onUpdate(property.name, e.target.value)}\n          required={property.required}\n          {...others}\n        />\n      );\n    case 'number':\n      return (\n        <TextField\n          label={label}\n          value={data[property.name]}\n          multiline={property.multiline}\n          onChange={(e) => onUpdate(property.name, e.target.value || null)}\n          required={property.required}\n          {...others}\n        />\n      );\n    case 'reference':\n      return (\n        <SearchableField\n          label={label}\n          entity={property.to}\n          value={data[property.name]}\n          onChange={(value) => onUpdate(property.name, value)}\n          required={property.required}\n          {...others}\n        />\n      );\n    case 'markdown':\n      return (\n        <MarkdownEditor\n          label={label}\n          value={data[property.name]}\n          onChange={(value) => onUpdate(property.name, value)}\n          required={property.required}\n          {...others}\n        />\n      );\n    default:\n      return <span>{data[property.name]}</span>;\n  }\n}\n\nexport default function makeEditor({ proprties }) {\n  const Editor = ({ data, onUpdate, errors }) => {\n    return (\n      <React.Fragment>\n        <Row>\n          {proprties.map((property) => {\n            return (\n              <React.Fragment key={property.name}>\n                {createFieldForProperty({\n                  property,\n                  data,\n                  onUpdate,\n                  errors: errors[property.name]\n                })}\n              </React.Fragment>\n            );\n          })}\n        </Row>\n      </React.Fragment>\n    );\n  };\n\n  return Editor;\n}\n","import { required } from './validation';\nimport getLabelText from './getLabelText';\n\nexport default function makeValidation(editor) {\n  return (data) => {\n    const errors = {};\n    editor.forEach((field) => {\n      if (!field.if || field.if(data)) {\n        if (field.required) {\n          required(errors, getLabelText(field.label, data), data, field.name);\n        }\n      }\n    });\n\n    return errors;\n  };\n}\n","export function required(errors, name, data, property) {\n  if (!data[property]) {\n    if (!errors[property]) {\n      errors[property] = [];\n    }\n    errors[property].push(`${name} is required`);\n  }\n}\n","import createReducer from '../redux/helpers/createReducer';\nimport getActions from '../redux/helpers/getActions';\nimport getMappers from '../redux/helpers/getMappers';\nimport getSelectors from '../redux/helpers/getSelectors';\nimport { toCamelCase, toUpperCaseFirstChar } from '../helpers/caseConverter';\nimport makeDataPage from '../helpers/makeDataPage';\nimport makeEditor from '../helpers/makeEditor';\nimport makeValidation from '../helpers/makeValidation';\n\nclass StateRegister {\n  constructor() {\n    this.states = {};\n    this.defaultOptions = {\n      validateData: () => {}\n    };\n    this.globalOptions = {};\n  }\n\n  setGlobalOptions(options) {\n    this.globalOptions = options;\n  }\n\n  register(name, options = {}) {\n    const mergedOptions = {\n      ...this.defaultOptions,\n      ...this.globalOptions,\n      ...options\n    };\n    let editor = options.editor;\n    let validateData = mergedOptions.validateData;\n    if (mergedOptions.buildValidationFromEditor) {\n      if (!Array.isArray(editor)) {\n        throw Error('editor needs to be an array to build validation');\n      }\n\n      validateData = makeValidation(editor);\n    }\n    if (Array.isArray(editor)) {\n      editor = makeEditor({ proprties: editor });\n    }\n    this.states[name] = {\n      ...mergedOptions,\n      actions: getActions(name, mergedOptions.endpoint || name),\n      selectors: getSelectors(name),\n      mappers: getMappers(name, mergedOptions.endpoint || name),\n      reducer: createReducer(name),\n      header: mergedOptions.header || toUpperCaseFirstChar(name),\n      validateData,\n      editor\n    };\n  }\n\n  getRoutes() {\n    const routes = [];\n    Object.entries(this.states).forEach(([name, entry]) => {\n      routes.push({\n        name,\n        path: `/${name}`,\n        component:\n          entry.pageComponent ||\n          makeDataPage({\n            columns: entry.columns,\n            primaryProperty: entry.primaryProperty,\n            entity: name,\n            Editor: entry.editor\n          })\n      });\n    });\n    return routes;\n  }\n\n  getOption(name, option, defaultValue) {\n    const value = this.states[name][option];\n    return value || defaultValue;\n  }\n\n  getActions(name) {\n    return this.states[name].actions;\n  }\n\n  getAction(entityName, actionName) {\n    return this.states[entityName].actions[actionName];\n  }\n\n  getSelectors(name) {\n    return this.states[name].selectors;\n  }\n\n  getSelector(entityName, selectorName) {\n    return this.states[entityName].selectors[selectorName];\n  }\n\n  getMappers(name) {\n    return this.states[name].mappers;\n  }\n\n  getReducer(name) {\n    return this.states[name].reducer;\n  }\n\n  getReducers() {\n    const reducers = {};\n    Object.entries(this.states).forEach(([name, entry]) => {\n      reducers[toCamelCase(name)] = entry.reducer;\n    });\n\n    return reducers;\n  }\n}\n\nconst stateRegister = new StateRegister();\n\nexport default stateRegister;\n","const teamOptions = {\n  endpoint: 'members',\n  columns: [\n    {\n      header: 'Name',\n      display: 'name'\n    },\n    {\n      header: 'Artist name',\n      display: 'artist_name'\n    },\n    {\n      header: 'Title',\n      display: 'titles'\n    }\n  ],\n  primaryProperty: {\n    display: (entry) => {\n      return `${entry.name} (${entry.artist_name})`;\n    },\n    header: 'Name'\n  },\n  editor: [\n    {\n      type: 'text',\n      label: 'Name',\n      name: 'name',\n      required: true\n    },\n    {\n      type: 'text',\n      label: 'Artist name',\n      name: 'artist_name',\n      required: true\n    },\n    {\n      type: 'text',\n      label: 'Titles',\n      name: 'titles',\n      required: true\n    },\n    {\n      type: 'text',\n      label: 'Bio',\n      name: 'bio',\n      multiline: true,\n      required: true\n    },\n    {\n      type: 'reference',\n      label: 'Image',\n      name: 'image',\n      to: 'images',\n      required: true\n    }\n  ]\n};\n\nexport default teamOptions;\n","import MovieIcon from '@material-ui/icons/Movie';\nimport AllInclusiveIcon from '@material-ui/icons/AllInclusive';\n\nconst recommendationOptions = {\n  columns: [\n    {\n      header: 'Type',\n      display: (entry) => {\n        switch (entry.type) {\n          case 'movie':\n            return <MovieIcon />;\n          case 'misc':\n            return <AllInclusiveIcon />;\n          default:\n            return entry.type;\n        }\n      }\n    },\n    {\n      header: 'Title',\n      display: 'title'\n    },\n    {\n      header: 'Description',\n      display: 'description'\n    }\n  ],\n  primaryProperty: {\n    header: 'Title',\n    display: 'title'\n  },\n  editor: [\n    {\n      type: 'select',\n      label: 'Type',\n      name: 'type',\n      options: [\n        { value: 'misc', display: 'Misc' },\n        { value: 'movie', display: 'Movie' }\n      ],\n      required: true\n    },\n    {\n      type: 'text',\n      label: 'Url',\n      name: 'url',\n      required: true\n    },\n    {\n      type: 'text',\n      label: 'Title',\n      name: 'title',\n      required: true\n    },\n    {\n      type: 'reference',\n      label: 'Image',\n      name: 'image',\n      to: 'images',\n      required: true\n    },\n    {\n      type: 'text',\n      label: 'Description',\n      name: 'description',\n      if: (data) => {\n        return data.type === 'misc';\n      },\n      required: true\n    },\n    {\n      type: 'text',\n      label: (data) => {\n        if (data.type === 'movie') {\n          return 'FSK Rating';\n        }\n      },\n      name: 'field1',\n      if: (data) => {\n        return data.type === 'movie';\n      },\n      required: true\n    },\n    {\n      type: 'text',\n      label: (data) => {\n        if (data.type === 'movie') {\n          return 'Release year';\n        }\n      },\n      name: 'field2',\n      if: (data) => {\n        return data.type === 'movie';\n      },\n      required: true\n    },\n    {\n      type: 'text',\n      label: 'Field3',\n      name: 'field3',\n      if: () => false\n    },\n    {\n      type: 'text',\n      label: 'Field4',\n      name: 'field4',\n      if: () => false\n    },\n    {\n      type: 'text',\n      label: 'Field5',\n      name: 'field5',\n      if: () => false\n    }\n  ]\n};\n\nexport default recommendationOptions;\n","const imageOptions = {\n  columns: [\n    {\n      header: 'Url',\n      display: 'url'\n    },\n    {\n      header: 'Alternate text',\n      display: 'alt'\n    },\n    {\n      header: 'Dimension',\n      display: (entry) => {\n        return `${entry.width || 'auto'} x ${entry.height || 'auto'}`;\n      }\n    }\n  ],\n  primaryProperty: {\n    header: 'Url',\n    display: 'url'\n  },\n  editor: [\n    {\n      type: 'text',\n      label: 'Url',\n      name: 'url',\n      required: true\n    },\n    {\n      type: 'text',\n      label: 'Alt',\n      name: 'alt',\n      required: true\n    },\n    {\n      type: 'number',\n      label: 'Width',\n      name: 'width'\n    },\n    {\n      type: 'number',\n      label: 'Height',\n      name: 'height'\n    }\n  ]\n};\n\nexport default imageOptions;\n","const prototypeOptions = {\n  columns: [\n    {\n      header: 'Title',\n      display: 'title'\n    },\n    {\n      header: 'Subtitle',\n      display: 'subtitle'\n    }\n  ],\n  primaryProperty: {\n    header: 'Title',\n    display: 'title'\n  },\n  editor: [\n    {\n      type: 'text',\n      label: 'Title',\n      name: 'title',\n      required: true\n    },\n    {\n      type: 'text',\n      label: 'Subtitle',\n      name: 'subtitle',\n      required: true\n    },\n    {\n      type: 'text',\n      label: 'Url',\n      name: 'url',\n      required: true\n    },\n    {\n      type: 'reference',\n      label: 'Image',\n      name: 'image',\n      to: 'images',\n      required: true\n    },\n    {\n      type: 'text',\n      label: 'Challenge',\n      name: 'challenge',\n      multiline: true,\n      required: true\n    },\n    {\n      type: 'text',\n      label: 'Solution',\n      name: 'solution',\n      multiline: true,\n      required: true\n    },\n    {\n      type: 'text',\n      label: 'Rough details',\n      name: 'rough_details',\n      multiline: true,\n      required: true\n    }\n  ]\n};\n\nexport default prototypeOptions;\n","const pageOptions = {\n  columns: [\n    {\n      header: 'Name',\n      display: 'name'\n    },\n    {\n      header: 'Slug',\n      display: 'slug'\n    }\n  ],\n  primaryProperty: {\n    header: 'Name',\n    display: 'name'\n  },\n  editor: [\n    {\n      type: 'text',\n      label: 'Name',\n      name: 'name',\n      required: true\n    },\n    {\n      type: 'text',\n      label: 'Slug',\n      name: 'slug',\n      required: true\n    },\n    {\n      type: 'markdown',\n      label: 'Content',\n      name: 'content',\n      required: true\n    }\n  ]\n};\n\nexport default pageOptions;\n","import stateRegister from './stateRegister';\nimport teamOptions from './options/teamOptions';\nimport recommendationOptions from './options/recommendationOptions';\nimport imageOptions from './options/imageOptions';\nimport prototypeOptions from './options/prototypeOptions';\nimport pageOptions from './options/pageOptions';\n\nstateRegister.setGlobalOptions({\n  buildValidationFromEditor: true,\n  getNextPageNumber: (json) => {\n    const pageRegex = /[\\w\\W]*page=([0-9]*)/;\n    if (json.next) {\n      const groups = json.next.match(pageRegex);\n      return parseInt(groups[1]);\n    } else {\n      return null;\n    }\n  }\n});\nstateRegister.register('team', teamOptions);\nstateRegister.register('recommendations', recommendationOptions);\nstateRegister.register('images', imageOptions);\nstateRegister.register('prototypes', prototypeOptions);\nstateRegister.register('pages', pageOptions);\n","export const SET_TOKEN = 'SET_TOKEN';\nexport const SET_USERNAME = 'SET_USERNAME';\nexport const SET_AUTH_ERROR = 'SET_AUTH_ERROR';\nexport const SET_SIDEBAR_VISIBLE = 'SET_SIDEBAR_VISIBLE';\n","import { SET_TOKEN, SET_USERNAME, SET_AUTH_ERROR } from '../actionTypes';\nimport { generateHeaders, fetchWrapper } from '../../helpers/api';\n\nconst localToken = localStorage.getItem('token');\n\nconst initialState = {\n  token: localToken,\n  username: null\n};\n\nexport function validateAuthAction() {\n  return (dispatch, stateGetter) => {\n    const state = stateGetter();\n    fetchWrapper(`${process.env.REACT_APP_API_URL}/current-user/`, {\n      headers: generateHeaders(state.auth.token)\n    })\n      .then((json) => {\n        dispatch({ type: SET_USERNAME, username: json.user });\n      })\n      .catch((error) => {\n        dispatch({ type: SET_TOKEN, token: null });\n        dispatch({ type: SET_AUTH_ERROR, error });\n      });\n  };\n}\n\nexport function authAction(username, password) {\n  return (dispatch) => {\n    fetchWrapper(`${process.env.REACT_APP_API_URL}/auth/`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        username,\n        password\n      })\n    })\n      .then((json) => {\n        if (json.non_field_errors) {\n          dispatch({ type: SET_AUTH_ERROR, error: json.non_field_errors });\n        } else {\n          dispatch({ type: SET_TOKEN, token: json.token });\n          dispatch({ type: SET_USERNAME, username });\n        }\n      })\n      .catch((error) => {\n        dispatch({ type: SET_AUTH_ERROR, error });\n      });\n  };\n}\n\nexport default function reducer(state = initialState, action) {\n  switch (action.type) {\n    case SET_TOKEN:\n      localStorage.setItem('token', action.token);\n      return {\n        ...state,\n        token: action.token\n      };\n    case SET_USERNAME:\n      return {\n        ...state,\n        username: action.username\n      };\n    case SET_AUTH_ERROR:\n      return {\n        ...state,\n        error: action.error\n      };\n    default:\n      return state;\n  }\n}\n","import React from 'react';\nimport { Redirect, Route } from 'react-router-dom';\nimport { connect } from 'react-redux';\n\nfunction PrivateRoute({ token, component: Component, ...rest }) {\n  return (\n    <Route\n      {...rest}\n      render={(props) => {\n        return token ? <Component {...props} /> : <Redirect to='/login' />;\n      }}\n    />\n  );\n}\n\nconst mapStateToProps = (state) => {\n  const token = state.auth.token;\n  return { token };\n};\n\nexport default connect(mapStateToProps)(PrivateRoute);\n","import { SET_SIDEBAR_VISIBLE } from '../actionTypes';\n\nconst initialState = {\n  sidebarVisible: true\n};\n\nexport function setSidebarVisibleAction(visible) {\n  return (dispatch) => {\n    dispatch({ type: SET_SIDEBAR_VISIBLE, visible });\n  };\n}\n\nexport default function reducer(state = initialState, action) {\n  switch (action.type) {\n    case SET_SIDEBAR_VISIBLE:\n      return {\n        ...state,\n        sidebarVisible: action.visible\n      };\n    default:\n      return state;\n  }\n}\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\n\nexport default function ListItemLink({ icon, primary, to }) {\n  return (\n    <li>\n      <ListItem\n        button\n        component={NavLink}\n        to={to}\n        activeClassName='Mui-selected'\n        exact={true}\n      >\n        {icon ? <ListItemIcon>{icon}</ListItemIcon> : null}\n        <ListItemText primary={primary} />\n      </ListItem>\n    </li>\n  );\n}\n","import React from 'react';\nimport { setSidebarVisibleAction } from '../redux/reducers/pageState';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport clsx from 'clsx';\nimport CssBaseLine from '@material-ui/core/CssBaseline';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport Typography from '@material-ui/core/Typography';\nimport Drawer from '@material-ui/core/Drawer';\nimport Divider from '@material-ui/core/Divider';\nimport List from '@material-ui/core/List';\nimport ListItemLink from './ListItemLink';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\nimport GroupIcon from '@material-ui/icons/Group';\nimport EmojiObjectsIcon from '@material-ui/icons/EmojiObjects';\nimport FeaturedPlayListIcon from '@material-ui/icons/FeaturedPlayList';\nimport PagesIcon from '@material-ui/icons/Pages';\nimport ImageIcon from '@material-ui/icons/Image';\nimport HomeIcon from '@material-ui/icons/Home';\n\nconst drawerWidth = 240;\n\nconst links = [\n  {\n    to: '/',\n    text: 'Home',\n    icon: <HomeIcon />\n  },\n  {\n    to: '/team',\n    text: 'Team',\n    icon: <GroupIcon />\n  },\n  {\n    to: '/prototypes',\n    text: 'Prototypes',\n    icon: <EmojiObjectsIcon />\n  },\n  {\n    to: '/recommendations',\n    text: 'Recommendations',\n    icon: <FeaturedPlayListIcon />\n  },\n  {\n    to: '/pages',\n    text: 'Pages',\n    icon: <PagesIcon />\n  },\n  {\n    to: '/images',\n    text: 'Images',\n    icon: <ImageIcon />\n  }\n];\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex'\n  },\n  appBar: {\n    transition: theme.transitions.create(['margin', 'width'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen\n    })\n  },\n  appBarShift: {\n    width: `calc(100% - ${drawerWidth}px)`,\n    marginLeft: drawerWidth,\n    transition: theme.transitions.create(['margin', 'width'], {\n      easing: theme.transitions.easing.easeOut,\n      duration: theme.transitions.duration.enteringScreen\n    })\n  },\n  menuButton: {\n    marginRight: theme.spacing(2)\n  },\n  hide: {\n    display: 'none'\n  },\n  drawer: {\n    width: drawerWidth,\n    flexShrink: 0\n  },\n  drawerPaper: {\n    width: drawerWidth\n  },\n  drawerHeader: {\n    display: 'flex',\n    alignItems: 'center',\n    padding: theme.spacing(0, 1),\n    // necessary for content to be below app bar\n    ...theme.mixins.toolbar,\n    justifyContent: 'flex-end'\n  },\n  content: {\n    flexGrow: 1,\n    padding: theme.spacing(3),\n    transition: theme.transitions.create('margin', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen\n    }),\n    marginLeft: -drawerWidth\n  },\n  contentShift: {\n    transition: theme.transitions.create('margin', {\n      easing: theme.transitions.easing.easeOut,\n      duration: theme.transitions.duration.enteringScreen\n    }),\n    marginLeft: 0\n  }\n}));\n\nfunction Base({ children, token, sidebarVisible, setSidebarVisible }) {\n  const classes = useStyles();\n  const theme = useTheme();\n\n  const handleDrawerOpen = () => {\n    setSidebarVisible(true);\n  };\n\n  const handleDrawerClose = () => {\n    setSidebarVisible(false);\n  };\n\n  return (\n    <div className={classes.root}>\n      <CssBaseLine />\n      {token && (\n        <React.Fragment>\n          <AppBar\n            position='fixed'\n            className={clsx(classes.appBar, {\n              [classes.appBarShift]: sidebarVisible\n            })}\n          >\n            <Toolbar>\n              <IconButton\n                color='inherit'\n                aria-label='open drawer'\n                onClick={handleDrawerOpen}\n                edge='start'\n                className={clsx(\n                  classes.menuButton,\n                  sidebarVisible && classes.hide\n                )}\n              >\n                <MenuIcon />\n              </IconButton>\n              <Typography variant='h6' noWrap>\n                Content management system\n              </Typography>\n            </Toolbar>\n          </AppBar>\n          <Drawer\n            className={classes.drawer}\n            variant='persistent'\n            anchor='left'\n            open={sidebarVisible}\n            classes={{\n              paper: classes.drawerPaper\n            }}\n          >\n            <div className={classes.drawerHeader}>\n              <IconButton onClick={handleDrawerClose}>\n                {theme.direction === 'ltr' ? (\n                  <ChevronLeftIcon />\n                ) : (\n                  <ChevronRightIcon />\n                )}\n              </IconButton>\n            </div>\n            <Divider />\n            <List>\n              {links.map((link) => (\n                <ListItemLink\n                  key={link.text}\n                  to={link.to}\n                  primary={link.text}\n                  icon={link.icon}\n                />\n              ))}\n            </List>\n          </Drawer>\n        </React.Fragment>\n      )}\n      <main\n        className={clsx(classes.content, {\n          [classes.contentShift]: sidebarVisible\n        })}\n      >\n        <div className={classes.drawerHeader} />\n        {children}\n      </main>\n    </div>\n  );\n}\n\nconst mapStateToProps = (state) => {\n  const token = state.auth.token;\n  const sidebarVisible = state.pageState.sidebarVisible;\n  return { token, sidebarVisible };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  const setSidebarVisible = setSidebarVisibleAction;\n  return bindActionCreators({ setSidebarVisible }, dispatch);\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Base);\n","import React from 'react';\nimport Header from '../components/Header';\n\nexport default function Home() {\n  return (\n    <div>\n      <Header>Home</Header>\n    </div>\n  );\n}\n","export default function NotFound() {\n  return (\n    <div>\n      <h1>Page not found</h1>\n    </div>\n  );\n}\n","import { useState } from 'react';\nimport Container from '@material-ui/core/Container';\nimport { connect } from 'react-redux';\nimport { authAction } from '../redux/reducers/auth';\nimport { bindActionCreators } from 'redux';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport { Redirect } from 'react-router-dom';\nimport { makeStyles } from '@material-ui/core';\nimport Avatar from '@material-ui/core/Avatar';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Typography from '@material-ui/core/Typography';\n\nconst useStyles = makeStyles((theme) => {\n  return {\n    paper: {\n      marginTop: theme.spacing(8),\n      display: 'flex',\n      flexDirection: 'column',\n      alignItems: 'center'\n    },\n    avatar: {\n      margin: theme.spacing(1),\n      backgroundColor: theme.palette.secondary.main\n    },\n    form: {\n      width: '100%',\n      marginTop: theme.spacing(1)\n    },\n    submit: {\n      margin: theme.spacing(3, 0, 2)\n    }\n  };\n});\n\nconst Login = ({ auth, token }) => {\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n\n  const classes = useStyles();\n\n  const onLogin = (e) => {\n    e.preventDefault();\n    auth(username, password);\n  };\n  return (\n    <Container>\n      {token && <Redirect to='/' />}\n      <div className={classes.paper}>\n        <Avatar className={classes.avatar}>\n          <LockOutlinedIcon />\n        </Avatar>\n        <Typography variant='h5'>Login</Typography>\n        <form onSubmit={onLogin}>\n          <TextField\n            label='Username'\n            id='username'\n            variant='outlined'\n            fullWidth\n            required\n            value={username}\n            onChange={(e) => setUsername(e.target.value)}\n            autoFocus\n            margin='normal'\n            autoComplete='username'\n          />\n          <TextField\n            label='Password'\n            id='password'\n            type='password'\n            variant='outlined'\n            fullWidth\n            required\n            margin='normal'\n            autoComplete='current-password'\n            value={password}\n            onChange={(e) => setPassword(e.target.value)}\n          />\n          <Button\n            type='submit'\n            fullWidth\n            variant='contained'\n            color='primary'\n            className={classes.submit}\n          >\n            Login\n          </Button>\n        </form>\n      </div>\n    </Container>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  const token = state.auth.token;\n  return { token };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  const auth = authAction;\n  return bindActionCreators({ auth }, dispatch);\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Login);\n","import React, { useMemo } from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { validateAuthAction } from './redux/reducers/auth';\nimport PrivateRoute from './components/PrivateRoute';\nimport stateRegister from './register/stateRegister';\nimport { bindActionCreators } from 'redux';\nimport Base from './components/Base';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\nimport { createMuiTheme, ThemeProvider } from '@material-ui/core/styles';\nimport CssBaseLine from '@material-ui/core/CssBaseline';\n\nimport 'esembico-common/dist/styles/css/CodeHighlighter.css';\n\nimport Home from './pages/Home';\nimport NotFound from './pages/NotFound';\nimport Login from './pages/Login';\n\nfunction App({ validateAuth }) {\n  const routes = stateRegister.getRoutes();\n  validateAuth();\n\n  const prefersDarkMode = useMediaQuery('(prefers-color-scheme: dark)');\n\n  const theme = useMemo(() => {\n    return createMuiTheme({\n      palette: {\n        type: prefersDarkMode ? 'dark' : 'light'\n      }\n    });\n  }, [prefersDarkMode]);\n\n  return (\n    <ThemeProvider theme={theme}>\n      <CssBaseLine />\n      <Router>\n        <Base>\n          <Switch>\n            <Route exact={true} path='/login' component={Login} />\n            {routes.map((route) => {\n              return (\n                <PrivateRoute\n                  key={route.name}\n                  exact={true}\n                  path={route.path}\n                  component={route.component}\n                />\n              );\n            })}\n            <PrivateRoute exact={true} path='/' component={Home} />\n            <PrivateRoute path='*' component={NotFound} />\n          </Switch>\n        </Base>\n      </Router>\n    </ThemeProvider>\n  );\n}\n\nconst mapStateToProps = () => {\n  return {};\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  const validateAuth = validateAuthAction;\n  return bindActionCreators({ validateAuth }, dispatch);\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { combineReducers } from 'redux';\nimport auth from './auth';\nimport pageState from './pageState';\nimport stateRegister from '../../register/stateRegister';\n\nexport default combineReducers({\n  ...stateRegister.getReducers(),\n  auth,\n  pageState\n});\n","import { createStore, applyMiddleware, compose } from 'redux';\nimport rootReducer from './reducers';\nimport thunk from 'redux-thunk';\n\nconst middlewares = [thunk];\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nexport default createStore(\n  rootReducer,\n  composeEnhancers(applyMiddleware(...middlewares))\n);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './register/initialize';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { Provider } from 'react-redux';\nimport store from './redux/store';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}