{"version":3,"sources":["redux/helpers/createReducer.js","helpers/api.js","redux/helpers/getActions.js","redux/helpers/getMappers.js","redux/helpers/getSelectors.js","helpers/caseConverter.js","components/Responsive/Row.js","components/Input/TextFieldImpl.js","helpers/getDisplayValue.js","components/Input/SearchableField.js","components/Input/InputErrors.js","components/Input/MarkdownEditor.js","components/Input/SelectImpl.js","helpers/getLabelText.js","helpers/makeEditor.js","helpers/makeValidation.js","helpers/validation.js","components/DataTable/DataTable.js","components/Header.js","components/LoadingIndicator.js","components/Responsive/Container.js","helpers/makeListPage.js","components/Responsive/Column.js","helpers/makeEditPage.js","register/stateRegister.js","register/options/teamOptions.js","register/options/recommendationOptions.js","register/options/imageOptions.js","register/options/prototypeOptions.js","register/options/pageOptions.js","register/initialize.js","redux/actionTypes.js","redux/reducers/auth.js","components/PrivateRoute.js","redux/reducers/pageState.js","components/ListItemLink.js","components/Base.js","pages/Home.js","pages/NotFound.js","pages/Login.js","App.js","reportWebVitals.js","redux/reducers/index.js","redux/store.js","index.js"],"names":["initialState","allIds","byIds","byPage","error","status","lastPage","currentPage","totalItems","selectedId","editedData","filteredData","pageLoaded","createReducer","entity","actionEntity","replace","toUpperCase","state","action","type","page","id","newIds","includes","data","push","newData","field","value","page1","new","unshift","ids","newLookup","pageItems","payload","nextPage","forEach","member","lookup","newLastPage","Math","max","count","Date","now","generateHeaders","token","headers","Authorization","fetchWrapper","url","options","Promise","resolve","reject","fetch","then","res","ok","json","message","catch","getActions","endpoint","getPageAction","forceLoad","dispatch","storeGetter","store","lastLoaded","stateRegister","getSelector","getPageLastLoaded","diff","process","getOption","getNextPageNumber","results","err","fetchAction","selectItemAction","setEditedDataAction","updateEditedDataAction","commitDataAction","auth","method","body","JSON","stringify","setFilteredDataAction","search","deleteItemAction","getCurrentPage","getMappers","mapStateToProps","getSelectors","getError","getStatus","getCurrentPageData","getLastPage","getSelectedId","getSelectedData","getEditedData","getTotalItems","selectedData","mapDispatchToProps","bindActionCreators","fetchData","selectPage","selectItem","setEditedData","updateEditedData","commitData","deleteItem","getState","getList","getById","getPage","get","map","getFilteredData","toUpperCaseFirstChar","str","charAt","slice","Row","children","className","TextFieldImpl","label","errors","other","classes","TextField","helperText","join","fullWidth","margin","getDisplayValue","obj","displayDefinition","SearchableField","onChange","required","useStore","getAction","getFilteredDataSelector","primaryProperty","useDispatch","Fragment","Autocomplete","getOptionLabel","option","display","_","newValue","onInputChange","e","renderInput","params","getOptionSelected","InputErrors","Array","isArray","i","languages","vba","languageVBA","python","languagePython","renderers","code","language","getLanguageFunction","callback","image","MarkdownEditor","useState","selectedTab","setSelectedTab","onTabChange","generateMarkdownPreview","markdown","source","SelectImpl","FormControl","InputLabel","Select","displayEmpty","MenuItem","FormHelperText","getLabelText","createFieldForProperty","property","onUpdate","others","if","name","target","multiline","to","makeEditor","proprties","makeValidation","editor","usePaginationStyle","makeStyles","theme","root","flexShrink","marginLeft","spacing","TablePaginationActions","onChangePage","rowsPerPage","useTheme","IconButton","onClick","disabled","aria-label","direction","ceil","DataTable","columns","pageData","onPageChange","onSelect","selected","TableContainer","Table","TableHead","TableRow","column","TableCell","header","TableBody","entry","hover","di","TableFooter","TablePagination","rowsPerPageOptions","colSpan","parseInt","current","SelectProps","inputProps","native","ActionsComponent","Header","Typography","variant","LoadingIndicator","show","style","width","height","color","size","Container","makeListPage","connect","history","useHistory","useEffect","Button","getEditUrl","last","Column","makeEditPage","Editor","setErrors","validateData","useParams","onSubmit","preventDefault","Object","keys","length","ButtonGroup","getListUrl","this","states","defaultOptions","globalOptions","mergedOptions","buildValidationFromEditor","Error","actions","selectors","mappers","reducer","routes","entries","listPath","editPath","listComponent","editComponent","defaultValue","entityName","actionName","selectorName","reducers","word","index","toLowerCase","teamOptions","artist_name","recommendationOptions","imageOptions","prototypeOptions","pageOptions","setGlobalOptions","next","groups","match","register","SET_TOKEN","SET_USERNAME","SET_AUTH_ERROR","SET_SIDEBAR_VISIBLE","localStorage","getItem","username","validateAuthAction","stateGetter","user","authAction","password","non_field_errors","Component","component","rest","render","props","sidebarVisible","setSidebarVisibleAction","visible","ListItemLink","icon","primary","ListItem","button","NavLink","activeClassName","exact","ListItemIcon","ListItemText","drawerWidth","links","text","useStyles","appBar","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","easeOut","enteringScreen","menuButton","marginRight","hide","drawer","drawerPaper","drawerHeader","alignItems","padding","mixins","toolbar","justifyContent","content","flexGrow","contentShift","pageState","setSidebarVisible","AppBar","position","clsx","Toolbar","edge","noWrap","Drawer","anchor","open","paper","Divider","List","link","Home","NotFound","marginTop","flexDirection","avatar","backgroundColor","palette","secondary","main","form","submit","setUsername","setPassword","Avatar","autoFocus","autoComplete","validateAuth","getRoutes","prefersDarkMode","useMediaQuery","useMemo","createMuiTheme","ThemeProvider","path","Login","route","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","combineReducers","getReducers","setItem","middlewares","thunk","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","createStore","rootReducer","applyMiddleware","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.a5be3a3b.chunk.js","sourcesContent":["const initialState = {\n  allIds: [],\n  byIds: {},\n  byPage: {},\n  error: null,\n  status: 'idle',\n  lastPage: 1,\n  currentPage: 1,\n  totalItems: 0,\n  selectedId: null,\n  editedData: null,\n  filteredData: [],\n  pageLoaded: {}\n};\n\nexport default function createReducer(entity) {\n  const actionEntity = entity.replace(' ', '_').toUpperCase();\n  const reducer = (state = initialState, action) => {\n    switch (action.type) {\n      case `SELECT_${actionEntity}_ID`:\n        return {\n          ...state,\n          selectedId: action.selectedId\n        };\n      case `SET_PAGE_${actionEntity}`:\n        return {\n          ...state,\n          currentPage: action.page\n        };\n      case `SET_EDITED_DATA_${actionEntity}`:\n        const editedData = action.id === -1 ? {} : state.byIds[action.id];\n        return {\n          ...state,\n          editedData\n        };\n      case `UPDATE_DATA_${actionEntity}`:\n        const newIds = state.allIds;\n        if (!newIds.includes(action.data.id)) {\n          newIds.push(action.data.id);\n        }\n        return {\n          ...state,\n          allIds: newIds,\n          byIds: {\n            ...state.byIds,\n            [action.data.id]: action.data\n          }\n        };\n      case `UPDATE_EDITED_DATA_${actionEntity}`:\n        const newData = { ...state.editedData, [action.field]: action.value };\n        return {\n          ...state,\n          editedData: newData\n        };\n      case `UPDATE_${actionEntity}`:\n        const page1 = state.byPage[1];\n        if (action.new) {\n          page1.unshift(action.data.id);\n        }\n        return {\n          ...state,\n          byIds: {\n            ...state.byIds,\n            [action.data.id]: action.data\n          },\n          pageLoaded: {}\n        };\n      case `FETCH_${actionEntity}_PENDING`:\n        return {\n          ...state,\n          status: 'loading'\n        };\n      case `SET_FILTERED_DATA_${actionEntity}`:\n        return {\n          ...state,\n          filteredData: action.data\n        };\n      case `FETCH_${actionEntity}_SUCCESS`:\n        const ids = [];\n        const newLookup = {};\n        const pageItems = [];\n        const { data, page, nextPage } = action.payload;\n        data.forEach((member) => {\n          pageItems.push(member.id);\n          ids.push(member.id);\n          newLookup[member.id] = member;\n        });\n\n        const lookup = { ...state.byIds, ...newLookup };\n\n        const newLastPage = Math.max(\n          state.lastPage,\n          nextPage || state.lastPage\n        );\n\n        return {\n          ...state,\n          allIds: ids,\n          byIds: lookup,\n          byPage: { ...state.byPage, [page]: pageItems },\n          status: 'idle',\n          lastPage: newLastPage,\n          currentPage: page,\n          totalItems: action.payload.count,\n          pageLoaded: {\n            ...state.pageLoaded,\n            [page]: Date.now()\n          }\n        };\n      case `FETCH_${actionEntity}_ERROR`:\n        return {\n          ...state,\n          error: action.error,\n          status: 'idle'\n        };\n      default:\n        return state;\n    }\n  };\n\n  return reducer;\n}\n","export function generateHeaders(token) {\n  const headers = {\n    'Content-Type': 'application/json'\n  };\n  if (token) {\n    headers.Authorization = `Token ${token}`;\n  }\n\n  return headers;\n}\n\nexport function fetchWrapper(url, options) {\n  return new Promise((resolve, reject) => {\n    fetch(url, options)\n      .then((res) => {\n        if (!res.ok) {\n          res.json().then((json) => {\n            reject({ status: res.status, message: json });\n          });\n          return;\n        }\n        if (res.status === 204) {\n          resolve();\n          return;\n        }\n        res.json().then((json) => {\n          resolve(json);\n        });\n      })\n      .catch(reject);\n  });\n}\n","import stateRegister from '../../register/stateRegister';\nimport { generateHeaders, fetchWrapper } from '../../helpers/api';\n\nexport default function getActions(entity, endpoint) {\n  const actionEntity = entity.replace(' ', '_').toUpperCase();\n\n  const getPageAction = (page, forceLoad) => {\n    return (dispatch, storeGetter) => {\n      const store = storeGetter();\n      const getPageLastLoaded = stateRegister.getSelector(\n        entity,\n        'getPageLastLoaded'\n      );\n      const lastLoaded = getPageLastLoaded(store, page);\n\n      const diff = Date.now() - lastLoaded;\n\n      if (!forceLoad && diff < 60000) {\n        dispatch({ type: `SET_PAGE_${actionEntity}`, page });\n        return;\n      }\n\n      dispatch({ type: `FETCH_${actionEntity}_PENDING` });\n      fetchWrapper(\n        `${process.env.REACT_APP_API_URL}/${endpoint}/?page=${page}`,\n        {\n          headers: generateHeaders()\n        }\n      )\n        .then((json) => {\n          const getNextPageNumber = stateRegister.getOption(\n            entity,\n            'getNextPageNumber'\n          );\n          const nextPage = getNextPageNumber(json);\n          dispatch({\n            type: `FETCH_${actionEntity}_SUCCESS`,\n            payload: {\n              data: json.results,\n              count: json.count,\n              page,\n              nextPage\n            }\n          });\n          return json.results;\n        })\n        .catch((err) => {\n          dispatch({ type: `FETCH_${actionEntity}_ERROR`, error: err });\n        });\n    };\n  };\n\n  const deleteItemAction = (id) => {\n    return (dispatch, storeGetter) => {\n      const store = storeGetter();\n      const token = store.auth.token;\n      const getCurrentPage = stateRegister.getSelector(\n        entity,\n        'getCurrentPage'\n      );\n      fetchWrapper(`${process.env.REACT_APP_API_URL}/${endpoint}/${id}/`, {\n        method: 'DELETE',\n        headers: generateHeaders(token)\n      })\n        .then(() => {\n          const page = getCurrentPage(store);\n          dispatch(getPageAction(page, true));\n        })\n        .catch((error) => {\n          dispatch({ type: `FETCH_${actionEntity}_ERROR`, error });\n        });\n    };\n  };\n\n  const setFilteredDataAction = (search) => {\n    return (dispatch) => {\n      fetchWrapper(\n        `${process.env.REACT_APP_API_URL}/${endpoint}/?search=${search}`,\n        {\n          headers: generateHeaders()\n        }\n      )\n        .then((json) => {\n          dispatch({\n            type: `SET_FILTERED_DATA_${actionEntity}`,\n            data: json.results\n          });\n        })\n        .catch((err) => {\n          dispatch({ type: `FETCH_${actionEntity}_ERROR`, error: err });\n        });\n    };\n  };\n\n  const fetchAction = () => {\n    return getPageAction(1);\n  };\n\n  const selectItemAction = (id) => {\n    return (dispatch) => {\n      dispatch({ type: `SELECT_${actionEntity}_ID`, selectedId: id });\n    };\n  };\n\n  const setEditedDataAction = (id) => {\n    return (dispatch, storeGetter) => {\n      const store = storeGetter();\n      if (id === -1 || store[entity].allIds.includes(id)) {\n        dispatch({ type: `SET_EDITED_DATA_${actionEntity}`, id });\n      } else {\n        fetchWrapper(`${process.env.REACT_APP_API_URL}/${endpoint}/${id}/`)\n          .then((json) => {\n            dispatch({ type: `UPDATE_DATA_${actionEntity}`, data: json });\n            dispatch({ type: `SET_EDITED_DATA_${actionEntity}`, id });\n          })\n          .catch((error) => {\n            dispatch({ type: `FETCH_${actionEntity}_ERROR`, error });\n          });\n      }\n    };\n  };\n\n  const updateEditedDataAction = (field, value) => {\n    return (dispatch) => {\n      dispatch({ type: `UPDATE_EDITED_DATA_${actionEntity}`, field, value });\n    };\n  };\n\n  const commitDataAction = (data) => {\n    return (dispatch, storeGetter) => {\n      const store = storeGetter();\n      const token = store.auth.token;\n      fetchWrapper(\n        `${process.env.REACT_APP_API_URL}/${endpoint}/${\n          data.id ? `${data.id}/` : ''\n        }`,\n        {\n          method: data.id ? 'PUT' : 'POST',\n          headers: generateHeaders(token),\n          body: JSON.stringify(data)\n        }\n      )\n        .then((json) => {\n          dispatch({\n            type: `UPDATE_${actionEntity}`,\n            data: json,\n            new: !data.id\n          });\n        })\n        .catch((err) => {\n          dispatch({ type: `FETCH_${actionEntity}_ERROR`, error: err });\n        });\n    };\n  };\n\n  return {\n    getPageAction,\n    fetchAction,\n    selectItemAction,\n    setEditedDataAction,\n    updateEditedDataAction,\n    commitDataAction,\n    setFilteredDataAction,\n    deleteItemAction\n  };\n}\n","import { bindActionCreators } from 'redux';\nimport stateRegister from '../../register/stateRegister';\n\nexport default function getMappers(entity) {\n  const mapStateToProps = (state) => {\n    const {\n      getError,\n      getStatus,\n      getCurrentPageData,\n      getLastPage,\n      getCurrentPage,\n      getSelectedId,\n      getSelectedData,\n      getEditedData,\n      getTotalItems\n    } = stateRegister.getSelectors(entity);\n    const error = getError(state);\n    const status = getStatus(state);\n    const data = getCurrentPageData(state);\n    const lastPage = getLastPage(state);\n    const currentPage = getCurrentPage(state);\n    const selectedId = getSelectedId(state);\n    const selectedData = getSelectedData(state);\n    const editedData = getEditedData(state);\n    const totalItems = getTotalItems(state);\n    return {\n      error,\n      status,\n      data,\n      lastPage,\n      currentPage,\n      selectedId,\n      selectedData,\n      editedData,\n      totalItems\n    };\n  };\n\n  const mapDispatchToProps = (dispatch) => {\n    const {\n      fetchAction,\n      getPageAction,\n      selectItemAction,\n      setEditedDataAction,\n      updateEditedDataAction,\n      commitDataAction,\n      deleteItemAction\n    } = stateRegister.getActions(entity);\n    return bindActionCreators(\n      {\n        fetchData: fetchAction,\n        selectPage: getPageAction,\n        selectItem: selectItemAction,\n        setEditedData: setEditedDataAction,\n        updateEditedData: updateEditedDataAction,\n        commitData: commitDataAction,\n        deleteItem: deleteItemAction\n      },\n      dispatch\n    );\n  };\n\n  return { mapStateToProps, mapDispatchToProps };\n}\n","export default function getSelectors(entity) {\n  const getState = (store) => {\n    return store[entity];\n  };\n\n  const getList = (store) => {\n    return getState(store) ? getState(store).allIds : [];\n  };\n\n  const getById = (store, id) => {\n    return getState(store) ? { ...getState(store).byIds[id], id } : {};\n  };\n\n  const get = (store) => {\n    return getList(store).map((id) => getById(store, id));\n  };\n\n  const getPage = (store, page) => {\n    const pageData = getState(store) ? getState(store).byPage[page] : [];\n    return pageData || [];\n  };\n\n  const getCurrentPage = (store) => {\n    return getState(store) ? getState(store).currentPage : 1;\n  };\n\n  const getLastPage = (store) => {\n    return getState(store) ? getState(store).lastPage : 1;\n  };\n\n  const getCurrentPageData = (store) => {\n    const currentPage = getCurrentPage(store);\n    return getPage(store, currentPage).map((id) => getById(store, id));\n  };\n\n  const getStatus = (store) => {\n    return getState(store) ? getState(store).status : 'idle';\n  };\n\n  const getError = (store) => {\n    return getState(store) ? getState(store).error : null;\n  };\n\n  const getSelectedId = (store) => {\n    return getState(store) ? getState(store).selectedId : null;\n  };\n\n  const getSelectedData = (store) => {\n    return getSelectedId(store) ? getById(store, getSelectedId(store)) : {};\n  };\n\n  const getEditedData = (store) => {\n    return getState(store) ? getState(store).editedData : null;\n  };\n\n  const getFilteredData = (store) => {\n    return getState(store) ? getState(store).filteredData : [];\n  };\n\n  const getPageLastLoaded = (store, page) => {\n    const state = getState(store);\n    if (!state) {\n      return 0;\n    }\n    return state.pageLoaded[page] ? state.pageLoaded[page] : 0;\n  };\n\n  const getTotalItems = (store) => {\n    return getState(store) ? getState(store).totalItems : 0;\n  };\n\n  return {\n    getState,\n    getList,\n    getById,\n    get,\n    getPage,\n    getCurrentPage,\n    getLastPage,\n    getCurrentPageData,\n    getStatus,\n    getError,\n    getSelectedId,\n    getSelectedData,\n    getEditedData,\n    getFilteredData,\n    getPageLastLoaded,\n    getTotalItems\n  };\n}\n","export function toCamelCase(str) {\n  return str\n    .replace(/(?:^\\w|[A-Z]|\\b\\w)/g, function (word, index) {\n      return index === 0 ? word.toLowerCase() : word.toUpperCase();\n    })\n    .replace(/\\s+/g, '');\n}\n\nexport function toUpperCaseFirstChar(str) {\n  return str.charAt(0).toUpperCase() + str.slice(1);\n}\n","import React from 'react';\n\nexport default function Row({ children }) {\n  return <div className='row'>{children}</div>;\n}\n","import React from 'react';\nimport TextField from '@material-ui/core/TextField';\n\nexport default function TextFieldImpl({ value, label, errors, ...other }) {\n  const classes = [];\n  if (value) {\n    classes.push('has-value');\n  }\n  if (errors) {\n    classes.push('has-errors');\n  }\n  return (\n    <TextField\n      error={!!errors}\n      label={label}\n      value={value || ''}\n      helperText={errors?.join('\\n')}\n      fullWidth={true}\n      margin='normal'\n      {...other}\n    />\n  );\n}\n","export default function getDisplayValue(obj, displayDefinition) {\n  if (!obj) {\n    return '';\n  }\n  if (typeof obj !== 'object') {\n    return obj;\n  }\n  if (typeof displayDefinition === 'string') {\n    return obj[displayDefinition];\n  }\n\n  if (typeof displayDefinition === 'function') {\n    return displayDefinition(obj);\n  }\n\n  return '';\n}\n","import { TextField } from '@material-ui/core';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport React from 'react';\nimport { useDispatch, useStore } from 'react-redux';\nimport getDisplayValue from '../../helpers/getDisplayValue';\nimport stateRegister from '../../register/stateRegister';\n\nexport default function SearchableField({\n  label,\n  entity,\n  value,\n  onChange,\n  errors,\n  required\n}) {\n  const state = useStore().getState();\n  const setFilteredDataAction = stateRegister.getAction(\n    entity,\n    'setFilteredDataAction'\n  );\n\n  const getFilteredDataSelector = stateRegister.getSelector(\n    entity,\n    'getFilteredData'\n  );\n\n  const data = getFilteredDataSelector(state);\n\n  const primaryProperty = stateRegister.getOption(entity, 'primaryProperty');\n  const dispatch = useDispatch();\n\n  const onInputChange = (e, value) => {\n    dispatch(setFilteredDataAction(value));\n  };\n\n  return (\n    <React.Fragment>\n      <Autocomplete\n        options={data}\n        getOptionLabel={(option) =>\n          getDisplayValue(option, primaryProperty.display)\n        }\n        onChange={(_, newValue) => {\n          onChange(newValue);\n        }}\n        onInputChange={onInputChange}\n        value={value}\n        renderInput={(params) => (\n          <TextField\n            error={!!errors}\n            helperText={errors?.join('\\n')}\n            {...params}\n            label={label}\n            margin='normal'\n            required={required}\n          />\n        )}\n        getOptionSelected={(option, value) => option?.id === value?.id}\n      />\n    </React.Fragment>\n  );\n}\n","import React from 'react';\n\nexport default function InputErrors({ errors }) {\n  return (\n    <React.Fragment>\n      {errors && (\n        <React.Fragment>\n          {Array.isArray(errors) ? (\n            <React.Fragment>\n              {errors.map((error, i) => {\n                return (\n                  <span className='error' key={i}>\n                    {error}\n                  </span>\n                );\n              })}\n            </React.Fragment>\n          ) : (\n            <span className='error'>{errors}</span>\n          )}\n        </React.Fragment>\n      )}\n    </React.Fragment>\n  );\n}\n","import React, { useState } from 'react';\nimport ReactMarkdown from 'react-markdown';\nimport ReactMde from 'react-mde';\nimport { CodeHighlighter, languageVBA, languagePython } from 'esembico-common';\n\nimport 'react-mde/lib/styles/css/react-mde-editor.css';\nimport 'react-mde/lib/styles/css/react-mde-toolbar.css';\nimport 'react-mde/lib/styles/css/react-mde.css';\nimport '../../css/MarkdownEditor.css';\nimport InputErrors from './InputErrors';\n\nconst languages = {\n  vba: languageVBA,\n  python: languagePython\n};\n\nconst renderers = {\n  code: ({ language, value }) => {\n    return (\n      <CodeHighlighter\n        getLanguageFunction={(language, callback) =>\n          callback(languages[language])\n        }\n        language={language}\n      >\n        {value}\n      </CodeHighlighter>\n    );\n  },\n  image: (params) => {\n    return <img className='responsive-image' {...params}></img>;\n  }\n};\n\nexport default function MarkdownEditor({ label, value, onChange, errors }) {\n  const [selectedTab, setSelectedTab] = useState('write');\n  return (\n    <div className='form-group'>\n      <label className={`markdown-label ${errors ? 'has-errors' : ''}`}>\n        {label}\n      </label>\n      <ReactMde\n        value={value || ''}\n        onChange={onChange}\n        selectedTab={selectedTab}\n        onTabChange={setSelectedTab}\n        generateMarkdownPreview={(markdown) => {\n          return Promise.resolve(\n            <ReactMarkdown renderers={renderers} source={markdown} />\n          );\n        }}\n      />\n      <InputErrors errors={errors} />\n    </div>\n  );\n}\n","import React from 'react';\nimport Select from '@material-ui/core/Select';\nimport FormControl from '@material-ui/core/FormControl';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormHelperText from '@material-ui/core/FormHelperText';\n\nexport default function SelectImpl({\n  label,\n  value,\n  options,\n  errors,\n  onChange,\n  required\n}) {\n  return (\n    <FormControl required={required} error={!!errors} fullWidth>\n      <InputLabel>{label}</InputLabel>\n      <Select\n        required={required}\n        displayEmpty\n        fullWidth\n        value={value}\n        onChange={onChange}\n      >\n        <MenuItem value=''>\n          <em>None</em>\n        </MenuItem>\n        {options.map((option) => {\n          return (\n            <MenuItem key={option.value} value={option.value}>\n              {option.display}\n            </MenuItem>\n          );\n        })}\n      </Select>\n      <FormHelperText>{errors?.join('\\n')}</FormHelperText>\n    </FormControl>\n  );\n}\n","export default function getLabelText(label, data) {\n  if (typeof label === 'function') {\n    return label(data);\n  }\n\n  return label;\n}\n","import React from 'react';\nimport Row from '../components/Responsive/Row';\nimport TextField from '../components/Input/TextFieldImpl';\nimport SearchableField from '../components/Input/SearchableField';\nimport MarkdownEditor from '../components/Input/MarkdownEditor';\nimport Select from '../components/Input/SelectImpl';\nimport getLabelText from './getLabelText';\n\nfunction createFieldForProperty({ property, data, onUpdate, ...others }) {\n  if (property.if) {\n    if (!property.if(data)) {\n      return <React.Fragment />;\n    }\n  }\n  const label = getLabelText(property.label, data);\n  switch (property.type) {\n    case 'select':\n      return (\n        <Select\n          label={label}\n          value={data[property.name]}\n          onChange={(e) => onUpdate(property.name, e.target.value)}\n          options={property.options}\n          required={property.required}\n          {...others}\n        />\n      );\n    case 'text':\n      return (\n        <TextField\n          label={label}\n          value={data[property.name]}\n          multiline={property.multiline}\n          onChange={(e) => onUpdate(property.name, e.target.value)}\n          required={property.required}\n          {...others}\n        />\n      );\n    case 'number':\n      return (\n        <TextField\n          label={label}\n          value={data[property.name]}\n          multiline={property.multiline}\n          onChange={(e) => onUpdate(property.name, e.target.value || null)}\n          required={property.required}\n          {...others}\n        />\n      );\n    case 'reference':\n      return (\n        <SearchableField\n          label={label}\n          entity={property.to}\n          value={data[property.name]}\n          onChange={(value) => onUpdate(property.name, value)}\n          required={property.required}\n          {...others}\n        />\n      );\n    case 'markdown':\n      return (\n        <MarkdownEditor\n          label={label}\n          value={data[property.name]}\n          onChange={(value) => onUpdate(property.name, value)}\n          required={property.required}\n          {...others}\n        />\n      );\n    default:\n      return <span>{data[property.name]}</span>;\n  }\n}\n\nexport default function makeEditor({ proprties }) {\n  const Editor = ({ data, onUpdate, errors }) => {\n    return (\n      <React.Fragment>\n        <Row>\n          {proprties.map((property) => {\n            return (\n              <React.Fragment key={property.name}>\n                {createFieldForProperty({\n                  property,\n                  data,\n                  onUpdate,\n                  errors: errors[property.name]\n                })}\n              </React.Fragment>\n            );\n          })}\n        </Row>\n      </React.Fragment>\n    );\n  };\n\n  return Editor;\n}\n","import { required } from './validation';\nimport getLabelText from './getLabelText';\n\nexport default function makeValidation(editor) {\n  return (data) => {\n    const errors = {};\n    editor.forEach((field) => {\n      if (!field.if || field.if(data)) {\n        if (field.required) {\n          required(errors, getLabelText(field.label, data), data, field.name);\n        }\n      }\n    });\n\n    return errors;\n  };\n}\n","export function required(errors, name, data, property) {\n  if (!data[property]) {\n    if (!errors[property]) {\n      errors[property] = [];\n    }\n    errors[property].push(`${name} is required`);\n  }\n}\n","import React from 'react';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport Table from '@material-ui/core/Table';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableFooter from '@material-ui/core/TableFooter';\nimport TableRow from '@material-ui/core/TableRow';\nimport TableCell from '@material-ui/core/TableCell';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport getDisplayValue from '../../helpers/getDisplayValue';\nimport IconButton from '@material-ui/core/IconButton';\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\nimport LastPageIcon from '@material-ui/icons/LastPage';\nimport { makeStyles, useTheme } from '@material-ui/core';\n\nconst usePaginationStyle = makeStyles((theme) => {\n  return {\n    root: {\n      flexShrink: 0,\n      marginLeft: theme.spacing(2.5)\n    }\n  };\n});\n\nfunction TablePaginationActions({ onChangePage, count, page, rowsPerPage }) {\n  const classes = usePaginationStyle();\n  const theme = useTheme();\n  const handleFirstPageButtonClick = () => {\n    onChangePage(1);\n  };\n\n  const handleBackButtonClick = () => {\n    onChangePage(page);\n  };\n\n  const handleNextButtonClick = () => {\n    onChangePage(page + 2);\n  };\n\n  const handleLastPageButtonClick = () => {\n    onChangePage(Math.max(0, Math.ceil(count / rowsPerPage)));\n  };\n\n  return (\n    <div className={classes.root}>\n      <IconButton\n        onClick={handleFirstPageButtonClick}\n        disabled={page === 0}\n        aria-label='first page'\n      >\n        {theme.direction === 'rtl' ? <LastPageIcon /> : <FirstPageIcon />}\n      </IconButton>\n      <IconButton\n        onClick={handleBackButtonClick}\n        disabled={page === 0}\n        aria-label='previous page'\n      >\n        {theme.direction === 'rtl' ? (\n          <KeyboardArrowRight />\n        ) : (\n          <KeyboardArrowLeft />\n        )}\n      </IconButton>\n      <IconButton\n        onClick={handleNextButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label='next page'\n      >\n        {theme.direction === 'rtl' ? (\n          <KeyboardArrowLeft />\n        ) : (\n          <KeyboardArrowRight />\n        )}\n      </IconButton>\n      <IconButton\n        onClick={handleLastPageButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label='last page'\n      >\n        {theme.direction === 'rtl' ? <FirstPageIcon /> : <LastPageIcon />}\n      </IconButton>\n    </div>\n  );\n}\n\nexport default function DataTable({\n  data,\n  columns,\n  pageData,\n  totalItems,\n  onPageChange,\n  onSelect,\n  selected\n}) {\n  return (\n    <React.Fragment>\n      <TableContainer>\n        <Table>\n          <TableHead>\n            <TableRow>\n              {columns.map((column) => {\n                return (\n                  <TableCell key={column.header}>{column.header}</TableCell>\n                );\n              })}\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {data.map((entry) => {\n              return (\n                <TableRow\n                  onClick={() => onSelect(entry.id)}\n                  selected={entry.id === selected}\n                  hover\n                  key={entry.id}\n                >\n                  {columns.map((column) => {\n                    return (\n                      <TableCell key={`${column.header}-${entry.di}`}>\n                        {getDisplayValue(entry, column.display)}\n                      </TableCell>\n                    );\n                  })}\n                </TableRow>\n              );\n            })}\n          </TableBody>\n          {totalItems ? (\n            <TableFooter>\n              <TableRow>\n                <TablePagination\n                  rowsPerPageOptions={[]}\n                  colSpan={3}\n                  count={totalItems}\n                  rowsPerPage={parseInt(process.env.REACT_APP_ROWS_PER_PAGE)}\n                  page={pageData.current - 1}\n                  SelectProps={{\n                    inputProps: { 'aria-label': 'rows per page' },\n                    native: true\n                  }}\n                  onChangePage={onPageChange}\n                  ActionsComponent={TablePaginationActions}\n                />\n              </TableRow>\n            </TableFooter>\n          ) : null}\n        </Table>\n      </TableContainer>\n    </React.Fragment>\n  );\n}\n","import Typography from '@material-ui/core/Typography';\nimport React from 'react';\n\nexport default function Header({ children }) {\n  return (\n    <React.Fragment>\n      <Typography variant='h3'>{children}</Typography>\n      <hr />\n    </React.Fragment>\n  );\n}\n","import React from 'react';\nimport HashLoader from 'react-spinners/HashLoader';\n\nexport default function LoadingIndicator({ show }) {\n  return (\n    <React.Fragment>\n      {show && (\n        <div\n          style={{ margin: '40px auto 0 auto', width: '0px', height: '40px' }}\n        >\n          <HashLoader color='white' size={80}></HashLoader>\n        </div>\n      )}\n    </React.Fragment>\n  );\n}\n","import React from 'react';\n\nexport default function Container({ children }) {\n  return <div className='container'>{children}</div>;\n}\n","import React, { useEffect } from 'react';\nimport DataTable from '../components/DataTable/DataTable';\nimport Header from '../components/Header';\nimport { connect } from 'react-redux';\nimport LoadingIndicator from '../components/LoadingIndicator';\nimport Container from '../components/Responsive/Container';\nimport Row from '../components/Responsive/Row';\nimport Button from '@material-ui/core/Button';\nimport stateRegister from '../register/stateRegister';\nimport { useHistory } from 'react-router-dom';\n\nexport default function makeListPage({ columns, entity }) {\n  const Component = ({\n    data,\n    status,\n    lastPage,\n    currentPage,\n    totalItems,\n    fetchData,\n    selectPage,\n    selectItem,\n    selectedId\n  }) => {\n    const history = useHistory();\n\n    useEffect(() => {\n      fetchData();\n    }, [fetchData]);\n\n    const changePage = (page) => {\n      selectPage(page);\n    };\n\n    const newEntry = () => {\n      history.push(stateRegister.getEditUrl(entity, 'new'));\n    };\n\n    return (\n      <div>\n        <Header>{stateRegister.getOption(entity, 'header')}</Header>\n        <LoadingIndicator show={status === 'loading'} />\n        {status !== 'loading' && (\n          <React.Fragment>\n            <Container>\n              <Row>\n                <Button variant='contained' color='primary' onClick={newEntry}>\n                  New\n                </Button>\n              </Row>\n              <DataTable\n                pageData={{\n                  current: currentPage,\n                  last: lastPage\n                }}\n                data={data}\n                columns={columns}\n                onPageChange={changePage}\n                onSelect={(id) => {\n                  selectItem(id);\n                  history.push(stateRegister.getEditUrl(entity, id));\n                }}\n                selected={selectedId}\n                totalItems={totalItems}\n              />\n            </Container>\n          </React.Fragment>\n        )}\n      </div>\n    );\n  };\n  const { mapStateToProps, mapDispatchToProps } = stateRegister.getMappers(\n    entity\n  );\n\n  return connect(mapStateToProps, mapDispatchToProps)(Component);\n}\n","import React from 'react';\n\nexport default function Column({ children, width }) {\n  return <div className={`col col-${width}`}>{children}</div>;\n}\n","import React, { useEffect, useState } from 'react';\nimport Header from '../components/Header';\nimport { connect } from 'react-redux';\nimport Container from '../components/Responsive/Container';\nimport Row from '../components/Responsive/Row';\nimport Column from '../components/Responsive/Column';\nimport Button from '@material-ui/core/Button';\nimport stateRegister from '../register/stateRegister';\nimport { ButtonGroup } from '@material-ui/core';\nimport { useHistory, useParams } from 'react-router-dom';\n\nexport default function makeEditPage({ Editor, entity }) {\n  const Component = ({\n    editedData,\n    fetchData,\n    selectedId,\n    setEditedData,\n    updateEditedData,\n    commitData,\n    deleteItem\n  }) => {\n    const [errors, setErrors] = useState({});\n    const validateData = stateRegister.getOption(entity, 'validateData');\n    useEffect(() => {\n      fetchData();\n    }, [fetchData]);\n\n    const params = useParams();\n    const history = useHistory();\n    const id = params.id;\n    useEffect(() => {\n      if (id === 'new') {\n        setEditedData(-1);\n      } else {\n        setEditedData(parseInt(id));\n      }\n    }, [id]);\n\n    useEffect(() => {\n      const errors = validateData(editedData || {});\n      setErrors(errors || {});\n    }, [editedData, validateData]);\n\n    const saveEntry = () => {\n      if (Object.keys(errors).length === 0) {\n        commitData(editedData);\n      }\n    };\n\n    const onDelete = () => {\n      // FIXME: Ask for confirmation before deleting.\n      deleteItem(selectedId);\n    };\n\n    const onEditorSubmit = (e) => {\n      e.preventDefault();\n      saveEntry();\n    };\n\n    return (\n      <div>\n        <Header>{stateRegister.getOption(entity, 'header')}</Header>\n        {editedData && (\n          <Container>\n            <Row>\n              <form onSubmit={onEditorSubmit}>\n                <Editor\n                  errors={errors}\n                  onUpdate={updateEditedData}\n                  data={editedData}\n                />\n                <Column width={100}>\n                  <ButtonGroup color='primary' variant='contained'>\n                    <Button\n                      disabled={Object.keys(errors).length !== 0}\n                      type='submit'\n                    >\n                      Save\n                    </Button>\n                    <Button\n                      onClick={() =>\n                        history.push(stateRegister.getListUrl(entity))\n                      }\n                    >\n                      Cancel\n                    </Button>\n                    <Button\n                      onClick={() => onDelete()}\n                      color='secondary'\n                      disabled={!editedData.id}\n                    >\n                      Delete\n                    </Button>\n                  </ButtonGroup>\n                </Column>\n              </form>\n            </Row>\n          </Container>\n        )}\n      </div>\n    );\n  };\n  const { mapStateToProps, mapDispatchToProps } = stateRegister.getMappers(\n    entity\n  );\n\n  return connect(mapStateToProps, mapDispatchToProps)(Component);\n}\n","import createReducer from '../redux/helpers/createReducer';\nimport getActions from '../redux/helpers/getActions';\nimport getMappers from '../redux/helpers/getMappers';\nimport getSelectors from '../redux/helpers/getSelectors';\nimport { toCamelCase, toUpperCaseFirstChar } from '../helpers/caseConverter';\nimport makeEditor from '../helpers/makeEditor';\nimport makeValidation from '../helpers/makeValidation';\nimport makeListPage from '../helpers/makeListPage';\nimport makeEditPage from '../helpers/makeEditPage';\n\nclass StateRegister {\n  constructor() {\n    this.states = {};\n    this.defaultOptions = {\n      validateData: () => {}\n    };\n    this.globalOptions = {};\n  }\n\n  setGlobalOptions(options) {\n    this.globalOptions = options;\n  }\n\n  register(name, options = {}) {\n    const mergedOptions = {\n      ...this.defaultOptions,\n      ...this.globalOptions,\n      ...options\n    };\n    let editor = options.editor;\n    let validateData = mergedOptions.validateData;\n    if (mergedOptions.buildValidationFromEditor) {\n      if (!Array.isArray(editor)) {\n        throw Error('editor needs to be an array to build validation');\n      }\n\n      validateData = makeValidation(editor);\n    }\n    if (Array.isArray(editor)) {\n      editor = makeEditor({ proprties: editor });\n    }\n    this.states[name] = {\n      ...mergedOptions,\n      actions: getActions(name, mergedOptions.endpoint || name),\n      selectors: getSelectors(name),\n      mappers: getMappers(name, mergedOptions.endpoint || name),\n      reducer: createReducer(name),\n      header: mergedOptions.header || toUpperCaseFirstChar(name),\n      validateData,\n      editor\n    };\n  }\n\n  getListUrl(name) {\n    return `/${name}`;\n  }\n\n  getEditUrl(name, id) {\n    return `/${name}/${id}`;\n  }\n\n  getRoutes() {\n    const routes = [];\n    Object.entries(this.states).forEach(([name, entry]) => {\n      routes.push({\n        name,\n        listPath: `/${name}`,\n        editPath: `/${name}/:id`,\n        listComponent: makeListPage({\n          columns: entry.columns,\n          primaryProperty: entry.primaryProperty,\n          entity: name,\n          Editor: entry.editor\n        }),\n        editComponent: makeEditPage({\n          columns: entry.columns,\n          primaryProperty: entry.primaryProperty,\n          entity: name,\n          Editor: entry.editor\n        })\n      });\n    });\n    return routes;\n  }\n\n  getOption(name, option, defaultValue) {\n    const value = this.states[name][option];\n    return value || defaultValue;\n  }\n\n  getActions(name) {\n    return this.states[name].actions;\n  }\n\n  getAction(entityName, actionName) {\n    return this.states[entityName].actions[actionName];\n  }\n\n  getSelectors(name) {\n    return this.states[name].selectors;\n  }\n\n  getSelector(entityName, selectorName) {\n    return this.states[entityName].selectors[selectorName];\n  }\n\n  getMappers(name) {\n    return this.states[name].mappers;\n  }\n\n  getReducer(name) {\n    return this.states[name].reducer;\n  }\n\n  getReducers() {\n    const reducers = {};\n    Object.entries(this.states).forEach(([name, entry]) => {\n      reducers[toCamelCase(name)] = entry.reducer;\n    });\n\n    return reducers;\n  }\n}\n\nconst stateRegister = new StateRegister();\n\nexport default stateRegister;\n","const teamOptions = {\n  endpoint: 'members',\n  columns: [\n    {\n      header: 'Name',\n      display: 'name'\n    },\n    {\n      header: 'Artist name',\n      display: 'artist_name'\n    },\n    {\n      header: 'Title',\n      display: 'titles'\n    }\n  ],\n  primaryProperty: {\n    display: (entry) => {\n      return `${entry.name} (${entry.artist_name})`;\n    },\n    header: 'Name'\n  },\n  editor: [\n    {\n      type: 'text',\n      label: 'Name',\n      name: 'name',\n      required: true\n    },\n    {\n      type: 'text',\n      label: 'Artist name',\n      name: 'artist_name',\n      required: true\n    },\n    {\n      type: 'text',\n      label: 'Titles',\n      name: 'titles',\n      required: true\n    },\n    {\n      type: 'text',\n      label: 'Bio',\n      name: 'bio',\n      multiline: true,\n      required: true\n    },\n    {\n      type: 'reference',\n      label: 'Image',\n      name: 'image',\n      to: 'images',\n      required: true\n    }\n  ]\n};\n\nexport default teamOptions;\n","import MovieIcon from '@material-ui/icons/Movie';\nimport AllInclusiveIcon from '@material-ui/icons/AllInclusive';\n\nconst recommendationOptions = {\n  columns: [\n    {\n      header: 'Type',\n      display: (entry) => {\n        switch (entry.type) {\n          case 'movie':\n            return <MovieIcon />;\n          case 'misc':\n            return <AllInclusiveIcon />;\n          default:\n            return entry.type;\n        }\n      }\n    },\n    {\n      header: 'Title',\n      display: 'title'\n    },\n    {\n      header: 'Description',\n      display: 'description'\n    }\n  ],\n  primaryProperty: {\n    header: 'Title',\n    display: 'title'\n  },\n  editor: [\n    {\n      type: 'select',\n      label: 'Type',\n      name: 'type',\n      options: [\n        { value: 'misc', display: 'Misc' },\n        { value: 'movie', display: 'Movie' }\n      ],\n      required: true\n    },\n    {\n      type: 'text',\n      label: 'Url',\n      name: 'url',\n      required: true\n    },\n    {\n      type: 'text',\n      label: 'Title',\n      name: 'title',\n      required: true\n    },\n    {\n      type: 'reference',\n      label: 'Image',\n      name: 'image',\n      to: 'images',\n      required: true\n    },\n    {\n      type: 'text',\n      label: 'Description',\n      name: 'description',\n      if: (data) => {\n        return data.type === 'misc';\n      },\n      required: true\n    },\n    {\n      type: 'text',\n      label: (data) => {\n        if (data.type === 'movie') {\n          return 'FSK Rating';\n        }\n      },\n      name: 'field1',\n      if: (data) => {\n        return data.type === 'movie';\n      },\n      required: true\n    },\n    {\n      type: 'text',\n      label: (data) => {\n        if (data.type === 'movie') {\n          return 'Release year';\n        }\n      },\n      name: 'field2',\n      if: (data) => {\n        return data.type === 'movie';\n      },\n      required: true\n    },\n    {\n      type: 'text',\n      label: 'Field3',\n      name: 'field3',\n      if: () => false\n    },\n    {\n      type: 'text',\n      label: 'Field4',\n      name: 'field4',\n      if: () => false\n    },\n    {\n      type: 'text',\n      label: 'Field5',\n      name: 'field5',\n      if: () => false\n    }\n  ]\n};\n\nexport default recommendationOptions;\n","const imageOptions = {\n  columns: [\n    {\n      header: 'Url',\n      display: 'url'\n    },\n    {\n      header: 'Alternate text',\n      display: 'alt'\n    },\n    {\n      header: 'Dimension',\n      display: (entry) => {\n        return `${entry.width || 'auto'} x ${entry.height || 'auto'}`;\n      }\n    }\n  ],\n  primaryProperty: {\n    header: 'Url',\n    display: 'url'\n  },\n  editor: [\n    {\n      type: 'text',\n      label: 'Url',\n      name: 'url',\n      required: true\n    },\n    {\n      type: 'text',\n      label: 'Alt',\n      name: 'alt',\n      required: true\n    },\n    {\n      type: 'number',\n      label: 'Width',\n      name: 'width'\n    },\n    {\n      type: 'number',\n      label: 'Height',\n      name: 'height'\n    }\n  ]\n};\n\nexport default imageOptions;\n","const prototypeOptions = {\n  columns: [\n    {\n      header: 'Title',\n      display: 'title'\n    },\n    {\n      header: 'Subtitle',\n      display: 'subtitle'\n    }\n  ],\n  primaryProperty: {\n    header: 'Title',\n    display: 'title'\n  },\n  editor: [\n    {\n      type: 'text',\n      label: 'Title',\n      name: 'title',\n      required: true\n    },\n    {\n      type: 'text',\n      label: 'Subtitle',\n      name: 'subtitle',\n      required: true\n    },\n    {\n      type: 'text',\n      label: 'Url',\n      name: 'url',\n      required: true\n    },\n    {\n      type: 'reference',\n      label: 'Image',\n      name: 'image',\n      to: 'images',\n      required: true\n    },\n    {\n      type: 'text',\n      label: 'Challenge',\n      name: 'challenge',\n      multiline: true,\n      required: true\n    },\n    {\n      type: 'text',\n      label: 'Solution',\n      name: 'solution',\n      multiline: true,\n      required: true\n    },\n    {\n      type: 'text',\n      label: 'Rough details',\n      name: 'rough_details',\n      multiline: true,\n      required: true\n    }\n  ]\n};\n\nexport default prototypeOptions;\n","const pageOptions = {\n  columns: [\n    {\n      header: 'Name',\n      display: 'name'\n    },\n    {\n      header: 'Slug',\n      display: 'slug'\n    }\n  ],\n  primaryProperty: {\n    header: 'Name',\n    display: 'name'\n  },\n  editor: [\n    {\n      type: 'text',\n      label: 'Name',\n      name: 'name',\n      required: true\n    },\n    {\n      type: 'text',\n      label: 'Slug',\n      name: 'slug',\n      required: true\n    },\n    {\n      type: 'markdown',\n      label: 'Content',\n      name: 'content',\n      required: true\n    }\n  ]\n};\n\nexport default pageOptions;\n","import stateRegister from './stateRegister';\nimport teamOptions from './options/teamOptions';\nimport recommendationOptions from './options/recommendationOptions';\nimport imageOptions from './options/imageOptions';\nimport prototypeOptions from './options/prototypeOptions';\nimport pageOptions from './options/pageOptions';\n\nstateRegister.setGlobalOptions({\n  buildValidationFromEditor: true,\n  getNextPageNumber: (json) => {\n    const pageRegex = /[\\w\\W]*page=([0-9]*)/;\n    if (json.next) {\n      const groups = json.next.match(pageRegex);\n      return parseInt(groups[1]);\n    } else {\n      return null;\n    }\n  }\n});\nstateRegister.register('team', teamOptions);\nstateRegister.register('recommendations', recommendationOptions);\nstateRegister.register('images', imageOptions);\nstateRegister.register('prototypes', prototypeOptions);\nstateRegister.register('pages', pageOptions);\n","export const SET_TOKEN = 'SET_TOKEN';\nexport const SET_USERNAME = 'SET_USERNAME';\nexport const SET_AUTH_ERROR = 'SET_AUTH_ERROR';\nexport const SET_SIDEBAR_VISIBLE = 'SET_SIDEBAR_VISIBLE';\n","import { SET_TOKEN, SET_USERNAME, SET_AUTH_ERROR } from '../actionTypes';\nimport { generateHeaders, fetchWrapper } from '../../helpers/api';\n\nconst localToken = localStorage.getItem('token');\n\nconst initialState = {\n  token: localToken,\n  username: null\n};\n\nexport function validateAuthAction() {\n  return (dispatch, stateGetter) => {\n    const state = stateGetter();\n    fetchWrapper(`${process.env.REACT_APP_API_URL}/current-user/`, {\n      headers: generateHeaders(state.auth.token)\n    })\n      .then((json) => {\n        dispatch({ type: SET_USERNAME, username: json.user });\n      })\n      .catch((error) => {\n        dispatch({ type: SET_TOKEN, token: null });\n        dispatch({ type: SET_AUTH_ERROR, error });\n      });\n  };\n}\n\nexport function authAction(username, password) {\n  return (dispatch) => {\n    fetchWrapper(`${process.env.REACT_APP_API_URL}/auth/`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        username,\n        password\n      })\n    })\n      .then((json) => {\n        if (json.non_field_errors) {\n          dispatch({ type: SET_AUTH_ERROR, error: json.non_field_errors });\n        } else {\n          dispatch({ type: SET_TOKEN, token: json.token });\n          dispatch({ type: SET_USERNAME, username });\n        }\n      })\n      .catch((error) => {\n        dispatch({ type: SET_AUTH_ERROR, error });\n      });\n  };\n}\n\nexport default function reducer(state = initialState, action) {\n  switch (action.type) {\n    case SET_TOKEN:\n      localStorage.setItem('token', action.token);\n      return {\n        ...state,\n        token: action.token\n      };\n    case SET_USERNAME:\n      return {\n        ...state,\n        username: action.username\n      };\n    case SET_AUTH_ERROR:\n      return {\n        ...state,\n        error: action.error\n      };\n    default:\n      return state;\n  }\n}\n","import React from 'react';\nimport { Redirect, Route } from 'react-router-dom';\nimport { connect } from 'react-redux';\n\nfunction PrivateRoute({ token, component: Component, ...rest }) {\n  return (\n    <Route\n      {...rest}\n      render={(props) => {\n        return token ? <Component {...props} /> : <Redirect to='/login' />;\n      }}\n    />\n  );\n}\n\nconst mapStateToProps = (state) => {\n  const token = state.auth.token;\n  return { token };\n};\n\nexport default connect(mapStateToProps)(PrivateRoute);\n","import { SET_SIDEBAR_VISIBLE } from '../actionTypes';\n\nconst initialState = {\n  sidebarVisible: true\n};\n\nexport function setSidebarVisibleAction(visible) {\n  return (dispatch) => {\n    dispatch({ type: SET_SIDEBAR_VISIBLE, visible });\n  };\n}\n\nexport default function reducer(state = initialState, action) {\n  switch (action.type) {\n    case SET_SIDEBAR_VISIBLE:\n      return {\n        ...state,\n        sidebarVisible: action.visible\n      };\n    default:\n      return state;\n  }\n}\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\n\nexport default function ListItemLink({ icon, primary, to }) {\n  return (\n    <li>\n      <ListItem\n        button\n        component={NavLink}\n        to={to}\n        activeClassName='Mui-selected'\n        exact={true}\n      >\n        {icon ? <ListItemIcon>{icon}</ListItemIcon> : null}\n        <ListItemText primary={primary} />\n      </ListItem>\n    </li>\n  );\n}\n","import React from 'react';\nimport { setSidebarVisibleAction } from '../redux/reducers/pageState';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport clsx from 'clsx';\nimport CssBaseLine from '@material-ui/core/CssBaseline';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport Typography from '@material-ui/core/Typography';\nimport Drawer from '@material-ui/core/Drawer';\nimport Divider from '@material-ui/core/Divider';\nimport List from '@material-ui/core/List';\nimport ListItemLink from './ListItemLink';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\nimport GroupIcon from '@material-ui/icons/Group';\nimport EmojiObjectsIcon from '@material-ui/icons/EmojiObjects';\nimport FeaturedPlayListIcon from '@material-ui/icons/FeaturedPlayList';\nimport PagesIcon from '@material-ui/icons/Pages';\nimport ImageIcon from '@material-ui/icons/Image';\nimport HomeIcon from '@material-ui/icons/Home';\n\nconst drawerWidth = 240;\n\nconst links = [\n  {\n    to: '/',\n    text: 'Home',\n    icon: <HomeIcon />\n  },\n  {\n    to: '/team',\n    text: 'Team',\n    icon: <GroupIcon />\n  },\n  {\n    to: '/prototypes',\n    text: 'Prototypes',\n    icon: <EmojiObjectsIcon />\n  },\n  {\n    to: '/recommendations',\n    text: 'Recommendations',\n    icon: <FeaturedPlayListIcon />\n  },\n  {\n    to: '/pages',\n    text: 'Pages',\n    icon: <PagesIcon />\n  },\n  {\n    to: '/images',\n    text: 'Images',\n    icon: <ImageIcon />\n  }\n];\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex'\n  },\n  appBar: {\n    transition: theme.transitions.create(['margin', 'width'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen\n    })\n  },\n  appBarShift: {\n    width: `calc(100% - ${drawerWidth}px)`,\n    marginLeft: drawerWidth,\n    transition: theme.transitions.create(['margin', 'width'], {\n      easing: theme.transitions.easing.easeOut,\n      duration: theme.transitions.duration.enteringScreen\n    })\n  },\n  menuButton: {\n    marginRight: theme.spacing(2)\n  },\n  hide: {\n    display: 'none'\n  },\n  drawer: {\n    width: drawerWidth,\n    flexShrink: 0\n  },\n  drawerPaper: {\n    width: drawerWidth\n  },\n  drawerHeader: {\n    display: 'flex',\n    alignItems: 'center',\n    padding: theme.spacing(0, 1),\n    // necessary for content to be below app bar\n    ...theme.mixins.toolbar,\n    justifyContent: 'flex-end'\n  },\n  content: {\n    flexGrow: 1,\n    padding: theme.spacing(3),\n    transition: theme.transitions.create('margin', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen\n    }),\n    marginLeft: -drawerWidth\n  },\n  contentShift: {\n    transition: theme.transitions.create('margin', {\n      easing: theme.transitions.easing.easeOut,\n      duration: theme.transitions.duration.enteringScreen\n    }),\n    marginLeft: 0\n  }\n}));\n\nfunction Base({ children, token, sidebarVisible, setSidebarVisible }) {\n  const classes = useStyles();\n  const theme = useTheme();\n\n  const handleDrawerOpen = () => {\n    setSidebarVisible(true);\n  };\n\n  const handleDrawerClose = () => {\n    setSidebarVisible(false);\n  };\n\n  return (\n    <div className={classes.root}>\n      <CssBaseLine />\n      {token && (\n        <React.Fragment>\n          <AppBar\n            position='fixed'\n            className={clsx(classes.appBar, {\n              [classes.appBarShift]: sidebarVisible\n            })}\n          >\n            <Toolbar>\n              <IconButton\n                color='inherit'\n                aria-label='open drawer'\n                onClick={handleDrawerOpen}\n                edge='start'\n                className={clsx(\n                  classes.menuButton,\n                  sidebarVisible && classes.hide\n                )}\n              >\n                <MenuIcon />\n              </IconButton>\n              <Typography variant='h6' noWrap>\n                Content management system\n              </Typography>\n            </Toolbar>\n          </AppBar>\n          <Drawer\n            className={classes.drawer}\n            variant='persistent'\n            anchor='left'\n            open={sidebarVisible}\n            classes={{\n              paper: classes.drawerPaper\n            }}\n          >\n            <div className={classes.drawerHeader}>\n              <IconButton onClick={handleDrawerClose}>\n                {theme.direction === 'ltr' ? (\n                  <ChevronLeftIcon />\n                ) : (\n                  <ChevronRightIcon />\n                )}\n              </IconButton>\n            </div>\n            <Divider />\n            <List>\n              {links.map((link) => (\n                <ListItemLink\n                  key={link.text}\n                  to={link.to}\n                  primary={link.text}\n                  icon={link.icon}\n                />\n              ))}\n            </List>\n          </Drawer>\n        </React.Fragment>\n      )}\n      <main\n        className={clsx(classes.content, {\n          [classes.contentShift]: sidebarVisible\n        })}\n      >\n        <div className={classes.drawerHeader} />\n        {children}\n      </main>\n    </div>\n  );\n}\n\nconst mapStateToProps = (state) => {\n  const token = state.auth.token;\n  const sidebarVisible = state.pageState.sidebarVisible;\n  return { token, sidebarVisible };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  const setSidebarVisible = setSidebarVisibleAction;\n  return bindActionCreators({ setSidebarVisible }, dispatch);\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Base);\n","import React from 'react';\nimport Header from '../components/Header';\n\nexport default function Home() {\n  return (\n    <div>\n      <Header>Home</Header>\n    </div>\n  );\n}\n","export default function NotFound() {\n  return (\n    <div>\n      <h1>Page not found</h1>\n    </div>\n  );\n}\n","import { useState } from 'react';\nimport Container from '@material-ui/core/Container';\nimport { connect } from 'react-redux';\nimport { authAction } from '../redux/reducers/auth';\nimport { bindActionCreators } from 'redux';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport { Redirect } from 'react-router-dom';\nimport { makeStyles } from '@material-ui/core';\nimport Avatar from '@material-ui/core/Avatar';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Typography from '@material-ui/core/Typography';\n\nconst useStyles = makeStyles((theme) => {\n  return {\n    paper: {\n      marginTop: theme.spacing(8),\n      display: 'flex',\n      flexDirection: 'column',\n      alignItems: 'center'\n    },\n    avatar: {\n      margin: theme.spacing(1),\n      backgroundColor: theme.palette.secondary.main\n    },\n    form: {\n      width: '100%',\n      marginTop: theme.spacing(1)\n    },\n    submit: {\n      margin: theme.spacing(3, 0, 2)\n    }\n  };\n});\n\nconst Login = ({ auth, token }) => {\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n\n  const classes = useStyles();\n\n  const onLogin = (e) => {\n    e.preventDefault();\n    auth(username, password);\n  };\n  return (\n    <Container>\n      {token && <Redirect to='/' />}\n      <div className={classes.paper}>\n        <Avatar className={classes.avatar}>\n          <LockOutlinedIcon />\n        </Avatar>\n        <Typography variant='h5'>Login</Typography>\n        <form onSubmit={onLogin}>\n          <TextField\n            label='Username'\n            id='username'\n            variant='outlined'\n            fullWidth\n            required\n            value={username}\n            onChange={(e) => setUsername(e.target.value)}\n            autoFocus\n            margin='normal'\n            autoComplete='username'\n          />\n          <TextField\n            label='Password'\n            id='password'\n            type='password'\n            variant='outlined'\n            fullWidth\n            required\n            margin='normal'\n            autoComplete='current-password'\n            value={password}\n            onChange={(e) => setPassword(e.target.value)}\n          />\n          <Button\n            type='submit'\n            fullWidth\n            variant='contained'\n            color='primary'\n            className={classes.submit}\n          >\n            Login\n          </Button>\n        </form>\n      </div>\n    </Container>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  const token = state.auth.token;\n  return { token };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  const auth = authAction;\n  return bindActionCreators({ auth }, dispatch);\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Login);\n","import React, { useMemo } from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { validateAuthAction } from './redux/reducers/auth';\nimport PrivateRoute from './components/PrivateRoute';\nimport stateRegister from './register/stateRegister';\nimport { bindActionCreators } from 'redux';\nimport Base from './components/Base';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\nimport { createMuiTheme, ThemeProvider } from '@material-ui/core/styles';\nimport CssBaseLine from '@material-ui/core/CssBaseline';\n\nimport 'esembico-common/dist/styles/css/CodeHighlighter.css';\n\nimport Home from './pages/Home';\nimport NotFound from './pages/NotFound';\nimport Login from './pages/Login';\n\nfunction App({ validateAuth }) {\n  const routes = stateRegister.getRoutes();\n  validateAuth();\n\n  const prefersDarkMode = useMediaQuery('(prefers-color-scheme: dark)');\n\n  const theme = useMemo(() => {\n    return createMuiTheme({\n      palette: {\n        type: prefersDarkMode ? 'dark' : 'light'\n      }\n    });\n  }, [prefersDarkMode]);\n\n  return (\n    <ThemeProvider theme={theme}>\n      <CssBaseLine />\n      <Router>\n        <Base>\n          <Switch>\n            <Route exact={true} path='/login' component={Login} />\n            {routes.map((route) => {\n              return (\n                <PrivateRoute\n                  key={`${route.name}-list`}\n                  exact={true}\n                  path={route.listPath}\n                  component={route.listComponent}\n                />\n              );\n            })}\n            {routes.map((route) => {\n              return (\n                <PrivateRoute\n                  key={`${route.name}-edit`}\n                  exact={true}\n                  path={route.editPath}\n                  component={route.editComponent}\n                />\n              );\n            })}\n            <PrivateRoute exact={true} path='/' component={Home} />\n            <PrivateRoute path='*' component={NotFound} />\n          </Switch>\n        </Base>\n      </Router>\n    </ThemeProvider>\n  );\n}\n\nconst mapStateToProps = () => {\n  return {};\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  const validateAuth = validateAuthAction;\n  return bindActionCreators({ validateAuth }, dispatch);\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { combineReducers } from 'redux';\nimport auth from './auth';\nimport pageState from './pageState';\nimport stateRegister from '../../register/stateRegister';\n\nexport default combineReducers({\n  ...stateRegister.getReducers(),\n  auth,\n  pageState\n});\n","import { createStore, applyMiddleware, compose } from 'redux';\nimport rootReducer from './reducers';\nimport thunk from 'redux-thunk';\n\nconst middlewares = [thunk];\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nexport default createStore(\n  rootReducer,\n  composeEnhancers(applyMiddleware(...middlewares))\n);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './register/initialize';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { Provider } from 'react-redux';\nimport store from './redux/store';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}