{"version":3,"sources":["redux/helpers/createReducer.ts","helpers/api.ts","redux/helpers/getActions.ts","redux/helpers/getMappers.ts","redux/helpers/getSelectors.ts","helpers/caseConverter.ts","components/Responsive/Row.tsx","components/EditorField/TextFieldImpl.tsx","helpers/getDisplayValue.ts","components/EditorField/SearchableField.tsx","components/EditorField/InputErrors.tsx","components/EditorField/MarkdownEditor.tsx","components/EditorField/SelectImpl.tsx","helpers/getLabelText.ts","components/EditorField/ImagePreview.tsx","helpers/makeEditor.tsx","helpers/makeValidation.ts","helpers/makeValidationErrorHandler.ts","components/DataTable/DataTable.tsx","components/Header.tsx","components/Responsive/Container.tsx","helpers/makeListPage.tsx","components/Responsive/Column.tsx","components/ButtonWithLoading.tsx","helpers/makeEditPage.tsx","register/stateRegister.ts","register/options/teamOptions.tsx","register/options/recommendationOptions.tsx","register/options/imageOptions.tsx","register/options/prototypeOptions.tsx","register/options/pageOptions.tsx","register/initialize.ts","redux/actionTypes.ts","redux/reducers/auth.ts","components/PrivateRoute.tsx","redux/reducers/pageState.ts","components/ListItemLink.tsx","components/Base.tsx","pages/Home.tsx","pages/NotFound.tsx","pages/Login.tsx","App.tsx","reportWebVitals.js","redux/reducers/index.ts","redux/store.ts","index.tsx"],"names":["initialState","allIds","byIds","byPage","error","status","lastPage","currentPage","totalItems","selectedId","editedData","filteredData","pageLoaded","lastEditedField","createReducer","entity","actionEntity","replace","toUpperCase","state","action","type","selectIdAction","setPageAction","page","setEditedDataAction","id","updateDataAction","newIds","includes","data","push","updateEditedDataAction","newData","field","value","trackField","updateAction","page1","new","unshift","setFilteredDataAction","fetchSuccessAction","ids","newLookup","pageItems","payload","nextPage","forEach","item","lookup","newLastPage","Math","max","count","Date","now","fetchErrorAction","setStatusAction","generateHeaders","token","headers","Authorization","fetchWrapper","url","options","Promise","resolve","reject","fetch","then","res","ok","json","message","catch","getActions","endpoint","getPageAction","forceLoad","dispatch","getState","auth","lastLoaded","stateRegister","getSelector","getPageLastLoaded","diff","process","getOption","getNextPageNumber","results","err","fetchAction","selectItemAction","commitDataAction","callback","storeGetter","method","body","JSON","stringify","search","deleteItemAction","store","getCurrentPage","getMappers","mapStateToProps","getSelectors","getError","getStatus","getCurrentPageData","getLastPage","getSelectedId","getSelectedData","getEditedData","getTotalItems","getLastEditedField","selectedData","mapDispatchToProps","bindActionCreators","fetchData","selectPage","selectItem","setEditedData","updateEditedData","commitData","deleteItem","getList","getById","getPage","get","map","getFilteredData","toUpperCaseFirstChar","str","charAt","slice","Row","children","className","TextFieldImpl","label","errors","other","classes","TextField","helperText","join","fullWidth","margin","getDisplayValue","obj","displayDefinition","SearchableField","onChange","required","useStore","getAction","getFilteredDataSelector","primaryProperty","useDispatch","Fragment","Autocomplete","getOptionLabel","option","display","_","newValue","onInputChange","e","renderInput","params","getOptionSelected","useStyles","makeStyles","theme","color","palette","main","InputErrors","Array","isArray","i","formGroup","marginBottom","spacing","editor","border","primary","backgroundColor","text","background","default","maxWidth","editorError","languages","vba","languageVBA","python","languagePython","renderers","code","language","getLanguageFunction","image","MarkdownEditor","useState","selectedTab","setSelectedTab","clsx","onTabChange","generateMarkdownPreview","markdown","source","SelectImpl","FormControl","InputLabel","Select","displayEmpty","MenuItem","FormHelperText","getLabelText","ImagePreview","base","imageUrl","URL","src","href","onError","target","style","onLoad","createFieldForProperty","property","onUpdate","others","if","name","multiline","to","dependsOn","InputProps","readOnly","makeEditor","properties","key","makeValidation","requireNumber","isNaN","requireUrl","makeValidationErrorHandler","usePaginationStyle","root","flexShrink","marginLeft","TablePaginationActions","onChangePage","rowsPerPage","useTheme","IconButton","onClick","event","disabled","aria-label","direction","ceil","DataTable","columns","pageData","onPageChange","onSelect","selected","TableContainer","Table","TableHead","TableRow","column","TableCell","header","TableBody","entry","hover","TableFooter","TablePagination","rowsPerPageOptions","colSpan","parseInt","current","SelectProps","inputProps","native","ActionsComponent","Header","loading","Typography","variant","LinearProgress","Container","fab","position","bottom","right","dataTable","makeListPage","connect","history","useHistory","useEffect","last","getEditUrl","Fab","Column","width","buttonProgress","top","left","marginTop","ButtonWithLoading","props","Button","CircularProgress","size","makeEditPage","Editor","setErrors","confirmationOpen","setConfirmationOpen","validateData","useParams","handleClose","onSubmit","preventDefault","Object","keys","length","ButtonGroup","getListUrl","Dialog","open","onClose","aria-labelledby","aria-describedby","DialogTitle","DialogContent","DialogContentText","DialogActions","states","defaultOptions","globalOptions","this","mergedOptions","buildValidationFromEditor","Error","actions","selectors","mappers","reducer","links","entries","icon","routes","listPath","editPath","listComponent","editComponent","defaultValue","entityName","actionName","selectorName","reducers","word","index","toLowerCase","teamOptions","singularName","artist_name","recommendationOptions","imageOptions","height","prototypeOptions","pageOptions","setGlobalOptions","next","groups","match","register","SET_TOKEN","SET_USERNAME","SET_AUTH_ERROR","SET_SIDEBAR_VISIBLE","localStorage","getItem","username","logoutAction","validateAuthAction","stateGetter","user","authAction","password","non_field_errors","Component","component","rest","render","sidebarVisible","setSidebarVisibleAction","visible","ListItemLink","exact","ListItem","button","NavLink","activeClassName","ListItemIcon","ListItemText","drawerWidth","appBar","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","easeOut","enteringScreen","menuButton","marginRight","title","flexGrow","hide","drawer","drawerPaper","drawerHeader","alignItems","padding","mixins","toolbar","justifyContent","content","contentSmUp","contentShift","DrawerContent","handleDrawerClose","entityLinks","Divider","List","link","pageState","setSidebarVisible","logout","getLinks","smUp","useMediaQuery","breakpoints","up","anchorEl","setAnchorEl","Boolean","handleCloseMenu","AppBar","Toolbar","edge","noWrap","aria-controls","aria-haspopup","currentTarget","anchorOrigin","vertical","horizontal","keepMounted","transformOrigin","Drawer","anchor","paper","Home","NotFound","flexDirection","avatar","secondary","form","submit","setUsername","setPassword","Avatar","autoFocus","autoComplete","validateAuth","getRoutes","prefersDarkMode","useMemo","responsiveFontSizes","createMuiTheme","ThemeProvider","path","Login","route","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","combineReducers","getReducers","setItem","removeItem","middlewares","thunk","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","createStore","rootReducer","applyMiddleware","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.331e93f0.chunk.js","sourcesContent":["import { DataState, IdLookup } from './types/state';\nimport {\n  DataActionType,\n  SelectIdActionType,\n  SetPageActionType,\n  SetEditedDataActionType,\n  UpdateDataActionType,\n  UpdateEditedDataActionType,\n  UpdateActionType,\n  FetchSuccessActionType,\n  SetFilteredDataActionType,\n  FetchErrorActionType,\n  SetStatusActionType,\n  ReducerFunction\n} from './types/reducer';\n\nconst initialState: DataState = {\n  allIds: [],\n  byIds: {},\n  byPage: {},\n  error: null,\n  status: 'idle',\n  lastPage: 1,\n  currentPage: 1,\n  totalItems: 0,\n  selectedId: null,\n  editedData: null,\n  filteredData: [],\n  pageLoaded: {},\n  lastEditedField: null\n};\n\nexport default function createReducer(entity: string): ReducerFunction {\n  const actionEntity = entity.replace(' ', '_').toUpperCase();\n  const reducer = (state = initialState, action: DataActionType) => {\n    switch (action.type) {\n      case `SELECT_${actionEntity}_ID`:\n        const selectIdAction = action as SelectIdActionType;\n        return {\n          ...state,\n          selectedId: selectIdAction.selectedId\n        };\n      case `SET_PAGE_${actionEntity}`:\n        const setPageAction = action as SetPageActionType;\n        return {\n          ...state,\n          currentPage: setPageAction.page\n        };\n      case `SET_EDITED_DATA_${actionEntity}`:\n        const setEditedDataAction = action as SetEditedDataActionType;\n        const editedData =\n          setEditedDataAction.id === -1\n            ? {}\n            : state.byIds[setEditedDataAction.id];\n        return {\n          ...state,\n          editedData\n        };\n      case `UPDATE_DATA_${actionEntity}`:\n        const updateDataAction = action as UpdateDataActionType;\n        const newIds = state.allIds;\n        if (!newIds.includes(updateDataAction.data.id)) {\n          newIds.push(updateDataAction.data.id);\n        }\n        return {\n          ...state,\n          allIds: newIds,\n          byIds: {\n            ...state.byIds,\n            [updateDataAction.data.id]: updateDataAction.data\n          }\n        };\n      case `UPDATE_EDITED_DATA_${actionEntity}`:\n        const updateEditedDataAction = action as UpdateEditedDataActionType;\n        const newData = {\n          ...state.editedData,\n          [updateEditedDataAction.field]: updateEditedDataAction.value\n        };\n        return {\n          ...state,\n          editedData: newData,\n          lastEditedField: updateEditedDataAction.trackField\n            ? updateEditedDataAction.field\n            : state.lastEditedField\n        };\n      case `UPDATE_${actionEntity}`:\n        const updateAction = action as UpdateActionType;\n        const page1 = state.byPage[1];\n        if (updateAction.new) {\n          page1.unshift(updateAction.data.id);\n        }\n        return {\n          ...state,\n          byIds: {\n            ...state.byIds,\n            [updateAction.data.id]: updateAction.data\n          },\n          pageLoaded: {}\n        };\n      case `FETCH_${actionEntity}_PENDING`:\n        return {\n          ...state,\n          status: 'loading'\n        };\n      case `SET_FILTERED_DATA_${actionEntity}`:\n        const setFilteredDataAction = action as SetFilteredDataActionType;\n        return {\n          ...state,\n          filteredData: setFilteredDataAction.data\n        };\n      case `FETCH_${actionEntity}_SUCCESS`:\n        const fetchSuccessAction = action as FetchSuccessActionType;\n        const ids: Array<number> = [];\n        const newLookup: IdLookup = {};\n        const pageItems: Array<number> = [];\n        const { data, page, nextPage } = fetchSuccessAction.payload;\n        data.forEach((item: { id: number }) => {\n          pageItems.push(item.id);\n          ids.push(item.id);\n          newLookup[item.id] = item;\n        });\n\n        const lookup = { ...state.byIds, ...newLookup };\n\n        const newLastPage = Math.max(\n          state.lastPage,\n          nextPage || state.lastPage\n        );\n\n        return {\n          ...state,\n          allIds: ids,\n          byIds: lookup,\n          byPage: { ...state.byPage, [page]: pageItems },\n          status: 'idle',\n          lastPage: newLastPage,\n          currentPage: page,\n          totalItems: fetchSuccessAction.payload.count,\n          pageLoaded: {\n            ...state.pageLoaded,\n            [page]: Date.now()\n          }\n        };\n      case `FETCH_${actionEntity}_ERROR`:\n        const fetchErrorAction = action as FetchErrorActionType;\n        return {\n          ...state,\n          error: fetchErrorAction.error,\n          status: 'idle'\n        };\n      case `SET_STATUS_${actionEntity}`:\n        const setStatusAction = action as SetStatusActionType;\n        return {\n          ...state,\n          status: setStatusAction.status\n        };\n      default:\n        return state;\n    }\n  };\n\n  return reducer;\n}\n","export function generateHeaders(token: string): HeadersInit {\n  const headers: HeadersInit = {\n    'Content-Type': 'application/json'\n  };\n  if (token) {\n    headers.Authorization = `Token ${token}`;\n  }\n\n  return headers;\n}\n\nexport function fetchWrapper(url: string, options: RequestInit): Promise<any> {\n  return new Promise((resolve, reject) => {\n    fetch(url, options)\n      .then((res) => {\n        if (!res.ok) {\n          res.json().then((json) => {\n            reject({ status: res.status, message: json });\n          });\n          return;\n        }\n        if (res.status === 204) {\n          resolve(null);\n          return;\n        }\n        res.json().then((json) => {\n          resolve(json);\n        });\n      })\n      .catch(reject);\n  });\n}\n","import stateRegister from '../../register/stateRegister';\nimport { generateHeaders, fetchWrapper } from '../../helpers/api';\nimport {\n  Actions,\n  DispatchActionFunction,\n  FetchSuccessCallback\n} from './types/actions';\n\nexport default function getActions(entity: string, endpoint: string): Actions {\n  const actionEntity = entity.replace(' ', '_').toUpperCase();\n\n  const getPageAction = (\n    page: number,\n    forceLoad?: boolean\n  ): DispatchActionFunction => {\n    return (dispatch, getState) => {\n      const state = getState();\n      const token = state.auth.token;\n      const getPageLastLoaded = stateRegister.getSelector(\n        entity,\n        'getPageLastLoaded'\n      );\n      const lastLoaded = getPageLastLoaded(state, page);\n\n      const diff = Date.now() - lastLoaded;\n\n      if (!forceLoad && diff < 60000) {\n        dispatch({ type: `SET_PAGE_${actionEntity}`, page });\n        return;\n      }\n\n      dispatch({ type: `FETCH_${actionEntity}_PENDING` });\n      fetchWrapper(\n        `${process.env.REACT_APP_API_URL}/${endpoint}/?page=${page}`,\n        {\n          headers: generateHeaders(token)\n        }\n      )\n        .then((json) => {\n          const getNextPageNumber = stateRegister.getOption(\n            entity,\n            'getNextPageNumber'\n          );\n          const nextPage = getNextPageNumber(json);\n          dispatch({\n            type: `FETCH_${actionEntity}_SUCCESS`,\n            payload: {\n              data: json.results,\n              count: json.count,\n              page,\n              nextPage\n            }\n          });\n          return json.results;\n        })\n        .catch((err) => {\n          dispatch({ type: `FETCH_${actionEntity}_ERROR`, error: err });\n        });\n    };\n  };\n\n  const deleteItemAction = (\n    id: number,\n    callback: FetchSuccessCallback\n  ): DispatchActionFunction => {\n    return (dispatch, storeGetter) => {\n      dispatch({ type: `SET_STATUS_${actionEntity}`, status: 'deleting' });\n      const store = storeGetter();\n      const token = store.auth.token;\n      const getCurrentPage = stateRegister.getSelector(\n        entity,\n        'getCurrentPage'\n      );\n      fetchWrapper(`${process.env.REACT_APP_API_URL}/${endpoint}/${id}/`, {\n        method: 'DELETE',\n        headers: generateHeaders(token)\n      })\n        .then(() => {\n          const page = getCurrentPage(store);\n          dispatch(getPageAction(page, true));\n          dispatch({ type: `SET_STATUS_${actionEntity}`, status: 'idle' });\n          if (callback && typeof callback === 'function') {\n            callback();\n          }\n        })\n        .catch((error) => {\n          dispatch({ type: `FETCH_${actionEntity}_ERROR`, error });\n        });\n    };\n  };\n\n  const setFilteredDataAction = (search: string): DispatchActionFunction => {\n    return (dispatch, getState) => {\n      const state = getState();\n      const token = state.auth.token;\n      fetchWrapper(\n        `${process.env.REACT_APP_API_URL}/${endpoint}/?search=${search}`,\n        {\n          headers: generateHeaders(token)\n        }\n      )\n        .then((json) => {\n          dispatch({\n            type: `SET_FILTERED_DATA_${actionEntity}`,\n            data: json.results\n          });\n        })\n        .catch((err) => {\n          dispatch({ type: `FETCH_${actionEntity}_ERROR`, error: err });\n        });\n    };\n  };\n\n  const fetchAction = () => {\n    return getPageAction(1);\n  };\n\n  const selectItemAction = (id: number): DispatchActionFunction => {\n    return (dispatch) => {\n      dispatch({ type: `SELECT_${actionEntity}_ID`, selectedId: id });\n    };\n  };\n\n  const setEditedDataAction = (id: number): DispatchActionFunction => {\n    return (dispatch, getState) => {\n      const state = getState();\n      const token = state.auth.token;\n      if (id === -1 || state[entity].allIds.includes(id)) {\n        dispatch({ type: `SET_EDITED_DATA_${actionEntity}`, id });\n      } else {\n        fetchWrapper(`${process.env.REACT_APP_API_URL}/${endpoint}/${id}/`, {\n          headers: generateHeaders(token)\n        })\n          .then((json) => {\n            dispatch({ type: `UPDATE_DATA_${actionEntity}`, data: json });\n            dispatch({ type: `SET_EDITED_DATA_${actionEntity}`, id });\n          })\n          .catch((error) => {\n            dispatch({ type: `FETCH_${actionEntity}_ERROR`, error });\n          });\n      }\n    };\n  };\n\n  const updateEditedDataAction = (\n    field: string,\n    value: any,\n    trackField = true\n  ): DispatchActionFunction => {\n    return (dispatch) => {\n      dispatch({\n        type: `UPDATE_EDITED_DATA_${actionEntity}`,\n        field,\n        value,\n        trackField\n      });\n    };\n  };\n\n  const commitDataAction = (\n    data: any,\n    callback: FetchSuccessCallback\n  ): DispatchActionFunction => {\n    return (dispatch, storeGetter) => {\n      const store = storeGetter();\n      const token = store.auth.token;\n      dispatch({ type: `SET_STATUS_${actionEntity}`, status: 'saving' });\n      fetchWrapper(\n        `${process.env.REACT_APP_API_URL}/${endpoint}/${\n          data.id ? `${data.id}/` : ''\n        }`,\n        {\n          method: data.id ? 'PUT' : 'POST',\n          headers: generateHeaders(token),\n          body: JSON.stringify(data)\n        }\n      )\n        .then((json) => {\n          dispatch({\n            type: `UPDATE_${actionEntity}`,\n            data: json,\n            new: !data.id\n          });\n          dispatch({ type: `SET_STATUS_${actionEntity}`, status: 'idle' });\n          if (callback && typeof callback === 'function') {\n            callback(json);\n          }\n        })\n        .catch((err) => {\n          dispatch({ type: `FETCH_${actionEntity}_ERROR`, error: err });\n        });\n    };\n  };\n\n  return {\n    getPageAction,\n    fetchAction,\n    selectItemAction,\n    setEditedDataAction,\n    updateEditedDataAction,\n    commitDataAction,\n    setFilteredDataAction,\n    deleteItemAction\n  };\n}\n","import { bindActionCreators } from 'redux';\nimport stateRegister from '../../register/stateRegister';\nimport { Mappers } from './types/mappers';\n\nexport default function getMappers(entity: string): Mappers {\n  const mapStateToProps = (state: any) => {\n    const {\n      getError,\n      getStatus,\n      getCurrentPageData,\n      getLastPage,\n      getCurrentPage,\n      getSelectedId,\n      getSelectedData,\n      getEditedData,\n      getTotalItems,\n      getLastEditedField\n    } = stateRegister.getSelectors(entity);\n    const error = getError(state);\n    const status = getStatus(state);\n    const data = getCurrentPageData(state);\n    const lastPage = getLastPage(state);\n    const currentPage = getCurrentPage(state);\n    const selectedId = getSelectedId(state);\n    const selectedData = getSelectedData(state);\n    const editedData = getEditedData(state);\n    const totalItems = getTotalItems(state);\n    const lastEditedField = getLastEditedField(state);\n    return {\n      error,\n      status,\n      data,\n      lastPage,\n      currentPage,\n      selectedId,\n      selectedData,\n      editedData,\n      totalItems,\n      lastEditedField\n    };\n  };\n\n  const mapDispatchToProps = (dispatch: any) => {\n    const {\n      fetchAction,\n      getPageAction,\n      selectItemAction,\n      setEditedDataAction,\n      updateEditedDataAction,\n      commitDataAction,\n      deleteItemAction\n    } = stateRegister.getActions(entity);\n    return bindActionCreators(\n      {\n        fetchData: fetchAction,\n        selectPage: getPageAction,\n        selectItem: selectItemAction,\n        setEditedData: setEditedDataAction,\n        updateEditedData: updateEditedDataAction,\n        commitData: commitDataAction,\n        deleteItem: deleteItemAction\n      },\n      dispatch\n    );\n  };\n\n  return { mapStateToProps, mapDispatchToProps };\n}\n","import {\n  GetState,\n  GetList,\n  GetById,\n  Get,\n  GetPage,\n  GetCurrentPage,\n  GetLastPage,\n  GetCurrentPageData,\n  GetStatus,\n  GetError,\n  GetSelectedId,\n  GetSelectedData,\n  GetEditedData,\n  GetFilteredData,\n  GetPageLastLoaded,\n  GetTotalItems,\n  GetLastEditedField,\n  Selectors\n} from './types/selectors';\n\nexport default function getSelectors(entity: string): Selectors {\n  const getState: GetState = (store) => {\n    return store[entity];\n  };\n\n  const getList: GetList = (store) => {\n    return getState(store) ? getState(store).allIds : [];\n  };\n\n  const getById: GetById = (store, id) => {\n    return getState(store) ? { ...getState(store).byIds[id], id } : {};\n  };\n\n  const get: Get = (store) => {\n    return getList(store).map((id: number) => getById(store, id));\n  };\n\n  const getPage: GetPage = (store, page) => {\n    const pageData = getState(store) ? getState(store).byPage[page] : [];\n    return pageData || [];\n  };\n\n  const getCurrentPage: GetCurrentPage = (store) => {\n    return getState(store) ? getState(store).currentPage : 1;\n  };\n\n  const getLastPage: GetLastPage = (store) => {\n    return getState(store) ? getState(store).lastPage : 1;\n  };\n\n  const getCurrentPageData: GetCurrentPageData = (store) => {\n    const currentPage = getCurrentPage(store);\n    return getPage(store, currentPage).map((id: number) => getById(store, id));\n  };\n\n  const getStatus: GetStatus = (store) => {\n    return getState(store) ? getState(store).status : 'idle';\n  };\n\n  const getError: GetError = (store) => {\n    return getState(store) ? getState(store).error : null;\n  };\n\n  const getSelectedId: GetSelectedId = (store) => {\n    return getState(store) ? getState(store).selectedId : null;\n  };\n\n  const getSelectedData: GetSelectedData = (store) => {\n    const selectedId = getSelectedId(store);\n    if (selectedId) {\n      return getSelectedId(store) ? getById(store, selectedId) : {};\n    } else {\n      return {};\n    }\n  };\n\n  const getEditedData: GetEditedData = (store) => {\n    return getState(store) ? getState(store).editedData : null;\n  };\n\n  const getFilteredData: GetFilteredData = (store) => {\n    return getState(store) ? getState(store).filteredData : [];\n  };\n\n  const getPageLastLoaded: GetPageLastLoaded = (store, page) => {\n    const state = getState(store);\n    if (!state) {\n      return 0;\n    }\n    return state.pageLoaded[page] ? state.pageLoaded[page] : 0;\n  };\n\n  const getTotalItems: GetTotalItems = (store) => {\n    return getState(store) ? getState(store).totalItems : 0;\n  };\n\n  const getLastEditedField: GetLastEditedField = (store) => {\n    return getState(store) ? getState(store).lastEditedField : null;\n  };\n\n  return {\n    getState,\n    getList,\n    getById,\n    get,\n    getPage,\n    getCurrentPage,\n    getLastPage,\n    getCurrentPageData,\n    getStatus,\n    getError,\n    getSelectedId,\n    getSelectedData,\n    getEditedData,\n    getFilteredData,\n    getPageLastLoaded,\n    getTotalItems,\n    getLastEditedField\n  };\n}\n","export function toCamelCase(str: string): string {\n  return str\n    .replace(/(?:^\\w|[A-Z]|\\b\\w)/g, function (word, index) {\n      return index === 0 ? word.toLowerCase() : word.toUpperCase();\n    })\n    .replace(/\\s+/g, '');\n}\n\nexport function toUpperCaseFirstChar(str: string): string {\n  return str.charAt(0).toUpperCase() + str.slice(1);\n}\n","import React from 'react';\nimport { RowProps } from '../types/components';\n\nexport default function Row({ children }: RowProps): JSX.Element {\n  return <div className='row'>{children}</div>;\n}\n","import React from 'react';\nimport TextField from '@material-ui/core/TextField';\nimport { TextFieldProps } from '../types/components';\n\nexport default function TextFieldImpl({\n  value,\n  label,\n  errors,\n  ...other\n}: TextFieldProps): JSX.Element {\n  const classes = [];\n  if (value) {\n    classes.push('has-value');\n  }\n  if (errors) {\n    classes.push('has-errors');\n  }\n  return (\n    <TextField\n      error={!!errors}\n      label={label}\n      value={value || ''}\n      helperText={errors?.join('\\n')}\n      fullWidth={true}\n      margin='normal'\n      {...other}\n    />\n  );\n}\n","// eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\nexport default function getDisplayValue(obj: any, displayDefinition: any): any {\n  if (!obj) {\n    return '';\n  }\n  if (typeof obj !== 'object') {\n    return obj;\n  }\n  if (typeof displayDefinition === 'string') {\n    return obj[displayDefinition];\n  }\n\n  if (typeof displayDefinition === 'function') {\n    return displayDefinition(obj);\n  }\n\n  return '';\n}\n","import { TextField } from '@material-ui/core';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport React, { ChangeEvent } from 'react';\nimport { useDispatch, useStore } from 'react-redux';\nimport getDisplayValue from '../../helpers/getDisplayValue';\nimport stateRegister from '../../register/stateRegister';\nimport { SearchableFieldProps } from '../types/components';\n\nexport default function SearchableField({\n  label,\n  entity,\n  value,\n  onChange,\n  errors,\n  required\n}: SearchableFieldProps): JSX.Element {\n  const state = useStore().getState();\n  const setFilteredDataAction = stateRegister.getAction(\n    entity,\n    'setFilteredDataAction'\n  );\n\n  const getFilteredDataSelector = stateRegister.getSelector(\n    entity,\n    'getFilteredData'\n  );\n\n  const data = getFilteredDataSelector(state);\n\n  const primaryProperty = stateRegister.getOption(entity, 'primaryProperty');\n  const dispatch = useDispatch();\n\n  const onInputChange = (e: ChangeEvent<unknown>, value: any) => {\n    dispatch(setFilteredDataAction(value));\n  };\n\n  return (\n    <React.Fragment>\n      <Autocomplete\n        options={data}\n        getOptionLabel={(option) =>\n          getDisplayValue(option, primaryProperty.display)\n        }\n        onChange={(_, newValue) => {\n          onChange(newValue);\n        }}\n        onInputChange={onInputChange}\n        value={value}\n        renderInput={(params) => (\n          <TextField\n            error={!!errors}\n            helperText={errors?.join('\\n')}\n            {...params}\n            label={label}\n            margin='normal'\n            required={required}\n          />\n        )}\n        getOptionSelected={(option, value) => option?.id === value?.id}\n      />\n    </React.Fragment>\n  );\n}\n","import { makeStyles } from '@material-ui/core';\nimport React from 'react';\nimport { InputErrorsProps } from '../types/components';\n\nconst useStyles = makeStyles((theme) => {\n  return {\n    error: {\n      color: theme.palette.error.main\n    }\n  };\n});\n\nexport default function InputErrors({ errors }: InputErrorsProps): JSX.Element {\n  const classes = useStyles();\n\n  return (\n    <React.Fragment>\n      {errors && (\n        <React.Fragment>\n          {Array.isArray(errors) ? (\n            <React.Fragment>\n              {errors.map((error, i) => {\n                return (\n                  <span className={classes.error} key={i}>\n                    {error}\n                  </span>\n                );\n              })}\n            </React.Fragment>\n          ) : (\n            <span className={classes.error}>{errors}</span>\n          )}\n        </React.Fragment>\n      )}\n    </React.Fragment>\n  );\n}\n","import React, { useState } from 'react';\nimport ReactMarkdown from 'react-markdown';\nimport ReactMde from 'react-mde';\nimport { CodeHighlighter, languageVBA, languagePython } from 'esembico-common';\nimport { makeStyles } from '@material-ui/core';\n\nimport 'react-mde/lib/styles/css/react-mde-editor.css';\nimport 'react-mde/lib/styles/css/react-mde-toolbar.css';\nimport 'react-mde/lib/styles/css/react-mde.css';\nimport InputErrors from './InputErrors';\nimport clsx from 'clsx';\nimport { CodeRendererParams, MarkdownEditorProps } from '../types/components';\n\nconst useStyles = makeStyles((theme) => {\n  return {\n    formGroup: {\n      marginBottom: theme.spacing(2)\n    },\n    error: {\n      color: theme.palette.error.main\n    },\n    editor: {\n      '& .react-mde': {\n        border: `1px solid ${theme.palette.primary.main}`\n      },\n      '& .mde-header': {\n        backgroundColor: theme.palette.primary.main,\n        '& .mde-tabs button': {\n          color: theme.palette.text.primary,\n          '&.selected': {\n            border: `1px solid ${theme.palette.text.primary}`\n          }\n        }\n      },\n      '& li.mde-header-item button svg': {\n        color: theme.palette.text.primary\n      },\n      '& .mde-textarea-wrapper textarea.mde-text': {\n        backgroundColor: theme.palette.background.default,\n        color: theme.palette.text.primary\n      },\n      // FIXME: Find a better way to make the editor responsive\n      '& .mde-preview-content': {\n        maxWidth: '85vw'\n      }\n    },\n    editorError: {\n      '& .react-mde': {\n        border: `1px solid ${theme.palette.error.main}`\n      }\n    }\n  };\n});\n\ninterface LanguageDictionary {\n  [language: string]: any;\n}\n\nconst languages: LanguageDictionary = {\n  vba: languageVBA,\n  python: languagePython\n};\n\nconst renderers = {\n  code: ({ language, value }: CodeRendererParams) => {\n    return (\n      <CodeHighlighter\n        getLanguageFunction={(language: string, callback: any) =>\n          callback(languages[language])\n        }\n        language={language}\n      >\n        {value}\n      </CodeHighlighter>\n    );\n  },\n  image: (params: any) => {\n    return <img className='responsive-image' {...params}></img>;\n  }\n};\n\nexport default function MarkdownEditor({\n  label,\n  value,\n  onChange,\n  errors\n}: MarkdownEditorProps): JSX.Element {\n  const classes = useStyles();\n\n  const [selectedTab, setSelectedTab] = useState<'write' | 'preview'>('write');\n  return (\n    <div className={classes.formGroup}>\n      <label\n        className={clsx({\n          [classes.error]: !!errors\n        })}\n      >\n        {label}\n      </label>\n      <div\n        className={clsx(classes.editor, {\n          [classes.editorError]: !!errors\n        })}\n      >\n        <ReactMde\n          value={value || ''}\n          onChange={onChange}\n          selectedTab={selectedTab}\n          onTabChange={setSelectedTab}\n          generateMarkdownPreview={(markdown) => {\n            return Promise.resolve(\n              <ReactMarkdown renderers={renderers} source={markdown} />\n            );\n          }}\n        />\n      </div>\n      <InputErrors errors={errors} />\n    </div>\n  );\n}\n","import React from 'react';\nimport Select from '@material-ui/core/Select';\nimport FormControl from '@material-ui/core/FormControl';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport { SelectProps } from '../types/components';\n\nexport default function SelectImpl({\n  label,\n  value,\n  options,\n  errors,\n  onChange,\n  required\n}: SelectProps): JSX.Element {\n  return (\n    <FormControl required={required} error={!!errors} fullWidth>\n      <InputLabel>{label}</InputLabel>\n      <Select\n        required={required}\n        displayEmpty\n        fullWidth\n        value={value}\n        onChange={onChange}\n      >\n        <MenuItem value=''>\n          <em>None</em>\n        </MenuItem>\n        {options.map((option) => {\n          return (\n            <MenuItem key={option.value} value={option.value}>\n              {option.display}\n            </MenuItem>\n          );\n        })}\n      </Select>\n      <FormHelperText>{errors?.join('\\n')}</FormHelperText>\n    </FormControl>\n  );\n}\n","// eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\nexport default function getLabelText(label: any, data: any): any {\n  if (typeof label === 'function') {\n    return label(data);\n  }\n\n  return label;\n}\n","import React, { SyntheticEvent } from 'react';\nimport { ImagePreviewProps } from '../types/components';\n\nexport default function ImagePreview({\n  value,\n  base\n}: ImagePreviewProps): JSX.Element {\n  const imageUrl = new URL(value, base);\n  return (\n    <img\n      className='responsive-image'\n      src={imageUrl.href}\n      onError={(e: SyntheticEvent<HTMLImageElement>) =>\n        ((e.target as HTMLImageElement).style.display = 'none')\n      }\n      onLoad={(e: SyntheticEvent<HTMLImageElement>) =>\n        ((e.target as HTMLImageElement).style.display = 'block')\n      }\n    ></img>\n  );\n}\n","import React, { FC } from 'react';\nimport Row from '../components/Responsive/Row';\nimport TextField from '../components/EditorField/TextFieldImpl';\nimport SearchableField from '../components/EditorField/SearchableField';\nimport MarkdownEditor from '../components/EditorField/MarkdownEditor';\nimport Select from '../components/EditorField/SelectImpl';\nimport getLabelText from './getLabelText';\nimport ImagePreview from '../components/EditorField/ImagePreview';\nimport {\n  CreateFieldForPropertyParams,\n  EditorProps,\n  MakeEditorParams\n} from './types/makeEditor';\n\nfunction createFieldForProperty({\n  property,\n  data,\n  onUpdate,\n  lastEditedField,\n  ...others\n}: CreateFieldForPropertyParams): JSX.Element {\n  if (property.if) {\n    if (!property.if(data)) {\n      return <React.Fragment />;\n    }\n  }\n  const label = getLabelText(property.label, data);\n  switch (property.type) {\n    case 'select':\n      return (\n        <Select\n          label={label}\n          value={data[property.name]}\n          onChange={(e: any) => onUpdate(property.name, e.target.value)}\n          options={property.options}\n          required={property.required}\n          {...others}\n        />\n      );\n    case 'text':\n    case 'url':\n      return (\n        <TextField\n          label={label}\n          value={data[property.name]}\n          multiline={property.multiline}\n          onChange={(e: any) => onUpdate(property.name, e.target.value)}\n          required={property.required}\n          {...others}\n        />\n      );\n    case 'number':\n      return (\n        <TextField\n          type='number'\n          label={label}\n          value={data[property.name]}\n          multiline={property.multiline}\n          onChange={(e: any) => onUpdate(property.name, e.target.value || null)}\n          required={property.required}\n          {...others}\n        />\n      );\n    case 'reference':\n      return (\n        <SearchableField\n          label={label}\n          entity={property.to}\n          value={data[property.name]}\n          onChange={(value: any) => onUpdate(property.name, value)}\n          required={property.required}\n          {...others}\n        />\n      );\n    case 'markdown':\n      return (\n        <MarkdownEditor\n          label={label}\n          value={data[property.name]}\n          onChange={(value: any) => onUpdate(property.name, value)}\n          {...others}\n        />\n      );\n    case 'generated':\n      let value = data[property.name];\n      if (property.dependsOn.includes(lastEditedField)) {\n        value = property.value(data);\n        if (value !== data[property.name]) {\n          onUpdate(property.name, value, false);\n        }\n      }\n      return (\n        <TextField\n          label={label}\n          InputProps={{\n            readOnly: true\n          }}\n          value={value}\n          multiline={property.multiline}\n          onChange={(e: any) => onUpdate(property.name, e.target.value)}\n          required={property.required}\n          {...others}\n        />\n      );\n    case 'image-preview':\n      return <ImagePreview value={data[property.name]} base={property.base} />;\n    default:\n      return <span>{data[property.name]}</span>;\n  }\n}\n\nexport default function makeEditor({\n  properties\n}: MakeEditorParams): FC<EditorProps> {\n  const Editor: FC<EditorProps> = ({\n    data,\n    onUpdate,\n    errors,\n    lastEditedField\n  }) => {\n    return (\n      <React.Fragment>\n        <Row>\n          {properties.map((property: any) => {\n            return (\n              <React.Fragment key={property.key || property.name}>\n                {createFieldForProperty({\n                  property,\n                  data,\n                  onUpdate,\n                  errors: errors[property.name],\n                  lastEditedField\n                })}\n              </React.Fragment>\n            );\n          })}\n        </Row>\n      </React.Fragment>\n    );\n  };\n\n  return Editor;\n}\n","import { EditorEntry } from '../types/stateRegister';\nimport getLabelText from './getLabelText';\nimport makeValidationErrorHandler from './makeValidationErrorHandler';\nimport { Validation } from './types/makeValidation';\n\nexport default function makeValidation(editor: Array<EditorEntry>): Validation {\n  return (data) => {\n    const errors = {};\n    const { required, requireNumber, requireUrl } = makeValidationErrorHandler(\n      errors,\n      data\n    );\n    editor.forEach((field) => {\n      if (!field.if || field.if(data)) {\n        const label = getLabelText(field.label, data);\n        if (field.required) {\n          required(label, field.name);\n        }\n        if (field.type === 'number') {\n          requireNumber(label, field.name);\n        }\n        if (field.type === 'url') {\n          requireUrl(label, field.name);\n        }\n      }\n    });\n\n    return errors;\n  };\n}\n","import {\n  RequiredHandler,\n  ValidationErrorHandler\n} from './types/makeValidationErrorHandler';\n\nexport default function makeValidationErrorHandler(\n  // eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\n  errors: any,\n  // eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\n  data: any\n): ValidationErrorHandler {\n  const required: RequiredHandler = (name, property) => {\n    if (!data[property]) {\n      if (!errors[property]) {\n        errors[property] = [];\n      }\n      errors[property].push(`${name} is required`);\n    }\n  };\n\n  const requireNumber: RequiredHandler = (name, property) => {\n    const value = data[property];\n    if (value && isNaN(value)) {\n      if (!errors[property]) {\n        errors[property] = [];\n      }\n      errors[property].push(`${name} should be a number`);\n    }\n  };\n\n  const requireUrl: RequiredHandler = (name, property) => {\n    const value = data[property];\n    try {\n      // eslint-disable-next-line no-new\n      new URL(value, 'http://esembico.de');\n    } catch {\n      if (!errors[property]) {\n        errors[property] = [];\n      }\n      errors[property].push(`${name} should be a valid url`);\n    }\n  };\n\n  return { required, requireNumber, requireUrl };\n}\n","import React, { MouseEvent } from 'react';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport Table from '@material-ui/core/Table';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableFooter from '@material-ui/core/TableFooter';\nimport TableRow from '@material-ui/core/TableRow';\nimport TableCell from '@material-ui/core/TableCell';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport getDisplayValue from '../../helpers/getDisplayValue';\nimport IconButton from '@material-ui/core/IconButton';\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\nimport LastPageIcon from '@material-ui/icons/LastPage';\nimport { makeStyles, useTheme } from '@material-ui/core';\nimport { TablePaginationActionsProps } from '@material-ui/core/TablePagination/TablePaginationActions';\nimport { DataTableProps } from '../types/components';\n\nconst usePaginationStyle = makeStyles((theme) => {\n  return {\n    root: {\n      flexShrink: 0,\n      marginLeft: theme.spacing(2.5)\n    }\n  };\n});\n\nfunction TablePaginationActions({\n  onChangePage,\n  count,\n  page,\n  rowsPerPage\n}: TablePaginationActionsProps) {\n  const classes = usePaginationStyle();\n  const theme = useTheme();\n  const handleFirstPageButtonClick = (event: MouseEvent<HTMLButtonElement>) => {\n    onChangePage(event, 1);\n  };\n\n  const handleBackButtonClick = (event: MouseEvent<HTMLButtonElement>) => {\n    onChangePage(event, page);\n  };\n\n  const handleNextButtonClick = (event: MouseEvent<HTMLButtonElement>) => {\n    onChangePage(event, page + 2);\n  };\n\n  const handleLastPageButtonClick = (event: MouseEvent<HTMLButtonElement>) => {\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage)));\n  };\n\n  return (\n    <div className={classes.root}>\n      <IconButton\n        onClick={handleFirstPageButtonClick}\n        disabled={page === 0}\n        aria-label='first page'\n      >\n        {theme.direction === 'rtl' ? <LastPageIcon /> : <FirstPageIcon />}\n      </IconButton>\n      <IconButton\n        onClick={handleBackButtonClick}\n        disabled={page === 0}\n        aria-label='previous page'\n      >\n        {theme.direction === 'rtl' ? (\n          <KeyboardArrowRight />\n        ) : (\n          <KeyboardArrowLeft />\n        )}\n      </IconButton>\n      <IconButton\n        onClick={handleNextButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label='next page'\n      >\n        {theme.direction === 'rtl' ? (\n          <KeyboardArrowLeft />\n        ) : (\n          <KeyboardArrowRight />\n        )}\n      </IconButton>\n      <IconButton\n        onClick={handleLastPageButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label='last page'\n      >\n        {theme.direction === 'rtl' ? <FirstPageIcon /> : <LastPageIcon />}\n      </IconButton>\n    </div>\n  );\n}\n\nexport default function DataTable({\n  data,\n  columns,\n  pageData,\n  totalItems,\n  onPageChange,\n  onSelect,\n  selected,\n  className\n}: DataTableProps): JSX.Element {\n  return (\n    <React.Fragment>\n      <TableContainer>\n        <Table className={className}>\n          <TableHead>\n            <TableRow>\n              {columns.map((column) => {\n                return (\n                  <TableCell key={column.header}>{column.header}</TableCell>\n                );\n              })}\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {data.map((entry: { id: string | number | null | undefined }) => {\n              return (\n                <TableRow\n                  onClick={() => onSelect(entry.id)}\n                  selected={entry.id === selected}\n                  hover\n                  key={entry.id}\n                >\n                  {columns.map((column) => {\n                    return (\n                      <TableCell key={`${column.header}-${entry.id}`}>\n                        {getDisplayValue(entry, column.display)}\n                      </TableCell>\n                    );\n                  })}\n                </TableRow>\n              );\n            })}\n          </TableBody>\n          {totalItems ? (\n            <TableFooter>\n              <TableRow>\n                <TablePagination\n                  rowsPerPageOptions={[]}\n                  colSpan={3}\n                  count={totalItems}\n                  rowsPerPage={parseInt(\n                    process.env.REACT_APP_ROWS_PER_PAGE ?? '50'\n                  )}\n                  page={pageData.current - 1}\n                  SelectProps={{\n                    inputProps: { 'aria-label': 'rows per page' },\n                    native: true\n                  }}\n                  onChangePage={(\n                    e: MouseEvent<HTMLButtonElement> | null,\n                    page: number\n                  ) => onPageChange(page)}\n                  ActionsComponent={TablePaginationActions}\n                />\n              </TableRow>\n            </TableFooter>\n          ) : null}\n        </Table>\n      </TableContainer>\n    </React.Fragment>\n  );\n}\n","import React from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport { HeaderProps } from './types/components';\n\nexport default function Header({\n  children,\n  loading\n}: HeaderProps): JSX.Element {\n  return (\n    <React.Fragment>\n      <Typography variant='h3'>{children}</Typography>\n      {loading ? <LinearProgress /> : <hr />}\n    </React.Fragment>\n  );\n}\n","import React from 'react';\nimport { ContainerProps } from '../types/components';\n\nexport default function Container({ children }: ContainerProps): JSX.Element {\n  return <div className='container'>{children}</div>;\n}\n","import React, { FC, useEffect } from 'react';\nimport DataTable from '../components/DataTable/DataTable';\nimport Header from '../components/Header';\nimport { connect } from 'react-redux';\nimport Container from '../components/Responsive/Container';\nimport stateRegister from '../register/stateRegister';\nimport { useHistory } from 'react-router-dom';\nimport Fab from '@material-ui/core/Fab';\nimport AddIcon from '@material-ui/icons/Add';\nimport { makeStyles } from '@material-ui/core';\nimport { ListPageProps, MakeListPageParams } from './types/makeListPage';\n\nconst useStyles = makeStyles((theme) => {\n  return {\n    fab: {\n      position: 'fixed',\n      bottom: theme.spacing(2),\n      right: theme.spacing(2)\n    },\n    dataTable: {\n      marginBottom: theme.spacing(5)\n    }\n  };\n});\n\nexport default function makeListPage({\n  columns,\n  entity\n}: MakeListPageParams): FC<ListPageProps> {\n  const Component: FC<ListPageProps> = ({\n    data,\n    status,\n    lastPage,\n    currentPage,\n    totalItems,\n    fetchData,\n    selectPage,\n    selectItem,\n    selectedId\n  }) => {\n    const classes = useStyles();\n    const history = useHistory();\n\n    useEffect(() => {\n      fetchData();\n    }, [fetchData]);\n\n    const changePage = (page: number) => {\n      selectPage(page);\n    };\n\n    const newEntry = () => {\n      history.push(stateRegister.getEditUrl(entity, 'new'));\n    };\n\n    return (\n      <div>\n        <Header loading={status !== 'idle'}>\n          {stateRegister.getOption(entity, 'header')}\n        </Header>\n        {status !== 'loading' && (\n          <React.Fragment>\n            <Container>\n              <DataTable\n                className={classes.dataTable}\n                pageData={{\n                  current: currentPage,\n                  last: lastPage\n                }}\n                data={data}\n                columns={columns}\n                onPageChange={changePage}\n                onSelect={(id: number) => {\n                  selectItem(id);\n                  history.push(stateRegister.getEditUrl(entity, id));\n                }}\n                selected={selectedId}\n                totalItems={totalItems}\n              />\n              <Fab\n                className={classes.fab}\n                color='primary'\n                aria-label='New'\n                onClick={newEntry}\n              >\n                <AddIcon />\n              </Fab>\n            </Container>\n          </React.Fragment>\n        )}\n      </div>\n    );\n  };\n  const { mapStateToProps, mapDispatchToProps } = stateRegister.getMappers(\n    entity\n  );\n\n  return connect(mapStateToProps, mapDispatchToProps)(Component);\n}\n","import React from 'react';\nimport { ColumnProps } from '../types/components';\n\nexport default function Column({ children, width }: ColumnProps): JSX.Element {\n  return <div className={`col col-${width}`}>{children}</div>;\n}\n","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport { makeStyles } from '@material-ui/core/styles';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { ButtonWithLoadingProps } from './types/components';\n\nconst useStyles = makeStyles(() => ({\n  buttonProgress: {\n    position: 'absolute',\n    top: '50%',\n    left: '50%',\n    marginTop: -12,\n    marginLeft: -12\n  }\n}));\n\nexport default function ButtonWithLoading({\n  disabled,\n  loading,\n  children,\n  ...props\n}: ButtonWithLoadingProps): JSX.Element {\n  const classes = useStyles();\n  return (\n    <Button {...props} disabled={disabled || loading}>\n      {children}\n      {loading && (\n        <CircularProgress className={classes.buttonProgress} size={24} />\n      )}\n    </Button>\n  );\n}\n","import React, { FC, useEffect, useState, FormEvent } from 'react';\nimport Header from '../components/Header';\nimport { connect } from 'react-redux';\nimport Container from '../components/Responsive/Container';\nimport Row from '../components/Responsive/Row';\nimport Column from '../components/Responsive/Column';\nimport Button from '@material-ui/core/Button';\nimport stateRegister from '../register/stateRegister';\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\nimport { useHistory, useParams } from 'react-router-dom';\nimport Fab from '@material-ui/core/Fab';\nimport AddIcon from '@material-ui/icons/Add';\nimport { makeStyles } from '@material-ui/core';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport getDisplayValue from './getDisplayValue';\nimport ButtonWithLoading from '../components/ButtonWithLoading';\nimport { MakeEditPageParams, EditPageProps } from './types/makeEditPage';\n\nconst useStyles = makeStyles((theme) => {\n  return {\n    fab: {\n      position: 'fixed',\n      bottom: theme.spacing(2),\n      right: theme.spacing(2)\n    }\n  };\n});\n\nexport default function makeEditPage({\n  Editor,\n  entity\n}: MakeEditPageParams): FC<EditPageProps> {\n  const Component: FC<EditPageProps> = ({\n    editedData,\n    fetchData,\n    selectedId,\n    setEditedData,\n    updateEditedData,\n    commitData,\n    deleteItem,\n    status,\n    lastEditedField\n  }) => {\n    const classes = useStyles();\n    const [errors, setErrors] = useState({});\n    const [confirmationOpen, setConfirmationOpen] = useState(false);\n    const validateData = stateRegister.getOption(entity, 'validateData');\n    const primaryProperty = stateRegister.getOption(entity, 'primaryProperty');\n\n    useEffect(() => {\n      fetchData();\n    }, [fetchData]);\n\n    const params: any = useParams();\n    const history = useHistory();\n    const id = params.id;\n\n    const handleClose = () => {\n      setConfirmationOpen(false);\n    };\n\n    useEffect(() => {\n      if (id === 'new') {\n        setEditedData(-1);\n      } else {\n        setEditedData(parseInt(id));\n      }\n    }, [id]);\n\n    useEffect(() => {\n      const errors = validateData(editedData || {});\n      setErrors(errors || {});\n    }, [editedData, validateData]);\n\n    const saveEntry = () => {\n      if (Object.keys(errors).length === 0) {\n        commitData(editedData, (data: any) => {\n          history.push(stateRegister.getEditUrl(entity, data.id));\n        });\n      }\n    };\n\n    const onDelete = () => {\n      deleteItem(selectedId, () => {\n        history.push(stateRegister.getListUrl(entity));\n      });\n      setConfirmationOpen(false);\n    };\n\n    const onEditorSubmit = (e: FormEvent) => {\n      e.preventDefault();\n      saveEntry();\n    };\n\n    const newEntry = () => {\n      history.push(stateRegister.getEditUrl(entity, 'new'));\n    };\n\n    return (\n      <div>\n        <Header loading={status !== 'idle'}>\n          {stateRegister.getOption(entity, 'header')}\n        </Header>\n        {editedData && (\n          <Container>\n            <Row>\n              <form onSubmit={onEditorSubmit}>\n                <Editor\n                  errors={errors}\n                  onUpdate={updateEditedData}\n                  data={editedData}\n                  lastEditedField={lastEditedField}\n                />\n                <Column width={100}>\n                  <ButtonGroup color='primary' variant='contained'>\n                    <ButtonWithLoading\n                      loading={status === 'saving'}\n                      disabled={Object.keys(errors).length !== 0}\n                      type='submit'\n                    >\n                      Save\n                    </ButtonWithLoading>\n                    <Button\n                      onClick={() =>\n                        history.push(stateRegister.getListUrl(entity))\n                      }\n                    >\n                      Cancel\n                    </Button>\n                    <ButtonWithLoading\n                      loading={status === 'deleting'}\n                      onClick={() => setConfirmationOpen(true)}\n                      color='secondary'\n                      disabled={!editedData.id}\n                    >\n                      Delete\n                    </ButtonWithLoading>\n                  </ButtonGroup>\n                </Column>\n              </form>\n            </Row>\n            <Fab\n              className={classes.fab}\n              color='primary'\n              aria-label='New'\n              onClick={newEntry}\n              disabled={!editedData.id}\n            >\n              <AddIcon />\n            </Fab>\n            <Dialog\n              open={confirmationOpen}\n              onClose={handleClose}\n              aria-labelledby='alert-dialog-title'\n              aria-describedby='alert-dialog-description'\n            >\n              <DialogTitle id='alert-dialog-title'>\n                Delete {stateRegister.getOption(entity, 'singularName')}\n              </DialogTitle>\n              <DialogContent>\n                <DialogContentText id='alert-dialog-description'>\n                  Are you sure you want to delete the following{' '}\n                  {stateRegister.getOption(entity, 'singularName')}?\n                  <br />\n                  {getDisplayValue(editedData, primaryProperty.display)}\n                </DialogContentText>\n              </DialogContent>\n              <DialogActions>\n                <Button onClick={onDelete} color='secondary'>\n                  Yes\n                </Button>\n                <Button onClick={handleClose} color='secondary'>\n                  No\n                </Button>\n              </DialogActions>\n            </Dialog>\n          </Container>\n        )}\n      </div>\n    );\n  };\n  const { mapStateToProps, mapDispatchToProps } = stateRegister.getMappers(\n    entity\n  );\n\n  return connect(mapStateToProps, mapDispatchToProps)(Component);\n}\n","import createReducer from '../redux/helpers/createReducer';\nimport getActions from '../redux/helpers/getActions';\nimport getMappers from '../redux/helpers/getMappers';\nimport getSelectors from '../redux/helpers/getSelectors';\nimport { toCamelCase, toUpperCaseFirstChar } from '../helpers/caseConverter';\nimport makeEditor from '../helpers/makeEditor';\nimport makeValidation from '../helpers/makeValidation';\nimport makeListPage from '../helpers/makeListPage';\nimport makeEditPage from '../helpers/makeEditPage';\nimport { States, Options, Link, Route, Reducers } from '../types/stateRegister';\n\nclass StateRegister {\n  states: States;\n  defaultOptions: Options;\n  globalOptions: Options;\n  constructor() {\n    this.states = {};\n    this.defaultOptions = {\n      validateData: () => ({})\n    };\n    this.globalOptions = {};\n  }\n\n  setGlobalOptions(options: Options) {\n    this.globalOptions = options;\n  }\n\n  register(name: string, options: Options = {}) {\n    const mergedOptions = {\n      ...this.defaultOptions,\n      ...this.globalOptions,\n      ...options\n    };\n    let editor: any = options.editor;\n    let validateData = mergedOptions.validateData;\n    if (mergedOptions.buildValidationFromEditor) {\n      if (!Array.isArray(editor)) {\n        throw Error('editor needs to be an array to build validation');\n      }\n\n      validateData = makeValidation(editor);\n    }\n    if (Array.isArray(editor)) {\n      editor = makeEditor({ properties: editor });\n    }\n    if (!validateData) {\n      throw Error('validateData is required');\n    }\n    if (!editor) {\n      throw new Error('editor is required');\n    }\n    this.states[name] = {\n      ...mergedOptions,\n      actions: getActions(name, mergedOptions.endpoint || name),\n      selectors: getSelectors(name),\n      mappers: getMappers(name),\n      reducer: createReducer(name),\n      header: mergedOptions.header || toUpperCaseFirstChar(name),\n      validateData,\n      editor\n    };\n  }\n\n  getListUrl(name: string) {\n    return `/${name}`;\n  }\n\n  getEditUrl(name: string, id: number | string) {\n    return `/${name}/${id}`;\n  }\n\n  getLinks() {\n    const links: Array<Link> = [];\n    Object.entries(this.states).forEach(([name, entry]) => {\n      links.push({\n        text: entry.header,\n        to: this.getListUrl(name),\n        icon: entry.icon\n      });\n    });\n    return links;\n  }\n\n  getRoutes() {\n    const routes: Array<Route> = [];\n    Object.entries(this.states).forEach(([name, entry]) => {\n      routes.push({\n        name,\n        listPath: `/${name}`,\n        editPath: `/${name}/:id`,\n        listComponent: makeListPage({\n          columns: entry.columns ?? [],\n          entity: name\n        }),\n        editComponent: makeEditPage({\n          entity: name,\n          Editor: entry.editor\n        })\n      });\n    });\n    return routes;\n  }\n\n  getOption(name: string, option: string, defaultValue?: any) {\n    const value = this.states[name][option];\n    return value || defaultValue;\n  }\n\n  getActions(name: string) {\n    return this.states[name].actions;\n  }\n\n  getAction(entityName: string, actionName: string) {\n    return this.states[entityName].actions[actionName];\n  }\n\n  getSelectors(name: string) {\n    return this.states[name].selectors;\n  }\n\n  getSelector(entityName: string, selectorName: string) {\n    return this.states[entityName].selectors[selectorName];\n  }\n\n  getMappers(name: string) {\n    return this.states[name].mappers;\n  }\n\n  getReducer(name: string) {\n    return this.states[name].reducer;\n  }\n\n  getReducers() {\n    const reducers: Reducers = {};\n    Object.entries(this.states).forEach(([name, entry]) => {\n      reducers[toCamelCase(name)] = entry.reducer;\n    });\n\n    return reducers;\n  }\n}\n\nconst stateRegister = new StateRegister();\n\nexport default stateRegister;\n","import GroupIcon from '@material-ui/icons/Group';\n\nconst teamOptions = {\n  singularName: 'team member',\n  icon: <GroupIcon />,\n  endpoint: 'members',\n  columns: [\n    {\n      header: 'Name',\n      display: 'name'\n    },\n    {\n      header: 'Artist name',\n      display: 'artist_name'\n    },\n    {\n      header: 'Title',\n      display: 'titles'\n    }\n  ],\n  primaryProperty: {\n    display: (entry: { name: any; artist_name: any }): string => {\n      return `${entry.name} (${entry.artist_name})`;\n    },\n    header: 'Name'\n  },\n  editor: [\n    {\n      type: 'text',\n      label: 'Name',\n      name: 'name',\n      required: true\n    },\n    {\n      type: 'text',\n      label: 'Artist name',\n      name: 'artist_name',\n      required: true\n    },\n    {\n      type: 'text',\n      label: 'Titles',\n      name: 'titles',\n      required: true\n    },\n    {\n      type: 'text',\n      label: 'Bio',\n      name: 'bio',\n      multiline: true,\n      required: true\n    },\n    {\n      type: 'reference',\n      label: 'Image',\n      name: 'image',\n      to: 'images',\n      required: true\n    }\n  ]\n};\n\nexport default teamOptions;\n","import MovieIcon from '@material-ui/icons/Movie';\nimport AllInclusiveIcon from '@material-ui/icons/AllInclusive';\nimport FeaturedPlayListIcon from '@material-ui/icons/FeaturedPlayList';\n\nconst recommendationOptions = {\n  singularName: 'recommendation',\n  icon: <FeaturedPlayListIcon />,\n  columns: [\n    {\n      header: 'Type',\n      display: (entry: { type: string }): any => {\n        switch (entry.type) {\n          case 'movie':\n            return <MovieIcon />;\n          case 'misc':\n            return <AllInclusiveIcon />;\n          default:\n            return entry.type;\n        }\n      }\n    },\n    {\n      header: 'Title',\n      display: 'title'\n    },\n    {\n      header: 'Description',\n      display: 'description'\n    }\n  ],\n  primaryProperty: {\n    header: 'Title',\n    display: 'title'\n  },\n  editor: [\n    {\n      type: 'select',\n      label: 'Type',\n      name: 'type',\n      options: [\n        { value: 'misc', display: 'Misc' },\n        { value: 'movie', display: 'Movie' }\n      ],\n      required: true\n    },\n    {\n      type: 'url',\n      label: 'Url',\n      name: 'url',\n      required: true\n    },\n    {\n      type: 'text',\n      label: 'Title',\n      name: 'title',\n      required: true\n    },\n    {\n      type: 'reference',\n      label: 'Image',\n      name: 'image',\n      to: 'images',\n      required: true\n    },\n    {\n      type: 'text',\n      label: 'Description',\n      name: 'description',\n      if: (data: { type: string }): boolean => {\n        return data.type === 'misc';\n      },\n      required: true\n    },\n    {\n      type: 'text',\n      label: (data: { type: string }): string => {\n        if (data.type === 'movie') {\n          return 'FSK Rating';\n        }\n        return 'Field1';\n      },\n      name: 'field1',\n      if: (data: { type: string }): boolean => {\n        return data.type === 'movie';\n      },\n      required: true\n    },\n    {\n      type: 'text',\n      label: (data: { type: string }): string => {\n        if (data.type === 'movie') {\n          return 'Release year';\n        }\n        return 'Field2';\n      },\n      name: 'field2',\n      if: (data: { type: string }): boolean => {\n        return data.type === 'movie';\n      },\n      required: true\n    },\n    {\n      type: 'text',\n      label: 'Field3',\n      name: 'field3',\n      if: (): boolean => false\n    },\n    {\n      type: 'text',\n      label: 'Field4',\n      name: 'field4',\n      if: (): boolean => false\n    },\n    {\n      type: 'text',\n      label: 'Field5',\n      name: 'field5',\n      if: (): boolean => false\n    }\n  ]\n};\n\nexport default recommendationOptions;\n","import ImageIcon from '@material-ui/icons/Image';\nimport { Options } from '../../types/stateRegister';\n\nconst imageOptions: Options = {\n  singularName: 'image',\n  icon: <ImageIcon />,\n  columns: [\n    {\n      header: 'Url',\n      display: 'url'\n    },\n    {\n      header: 'Alternate text',\n      display: 'alt'\n    },\n    {\n      header: 'Dimension',\n      display: (entry: { width: any; height: any }): string => {\n        return `${entry.width || 'auto'} x ${entry.height || 'auto'}`;\n      }\n    }\n  ],\n  primaryProperty: {\n    header: 'Url',\n    display: 'url'\n  },\n  editor: [\n    {\n      type: 'url',\n      label: 'Url',\n      name: 'url',\n      required: true\n    },\n    {\n      type: 'image-preview',\n      key: 'image-preview',\n      name: 'url',\n      base: 'http://react.esembico.de'\n    },\n    {\n      type: 'text',\n      label: 'Alt',\n      name: 'alt',\n      required: true\n    },\n    {\n      type: 'number',\n      label: 'Width',\n      name: 'width'\n    },\n    {\n      type: 'number',\n      label: 'Height',\n      name: 'height'\n    }\n  ]\n};\n\nexport default imageOptions;\n","import EmojiObjectsIcon from '@material-ui/icons/EmojiObjects';\n\nconst prototypeOptions = {\n  singularName: 'prototype',\n  icon: <EmojiObjectsIcon />,\n  columns: [\n    {\n      header: 'Title',\n      display: 'title'\n    },\n    {\n      header: 'Subtitle',\n      display: 'subtitle'\n    }\n  ],\n  primaryProperty: {\n    header: 'Title',\n    display: 'title'\n  },\n  editor: [\n    {\n      type: 'text',\n      label: 'Title',\n      name: 'title',\n      required: true\n    },\n    {\n      type: 'text',\n      label: 'Subtitle',\n      name: 'subtitle',\n      required: true\n    },\n    {\n      type: 'url',\n      label: 'Url',\n      name: 'url',\n      required: true\n    },\n    {\n      type: 'reference',\n      label: 'Image',\n      name: 'image',\n      to: 'images',\n      required: true\n    },\n    {\n      type: 'text',\n      label: 'Challenge',\n      name: 'challenge',\n      multiline: true,\n      required: true\n    },\n    {\n      type: 'text',\n      label: 'Solution',\n      name: 'solution',\n      multiline: true,\n      required: true\n    },\n    {\n      type: 'text',\n      label: 'Rough details',\n      name: 'rough_details',\n      multiline: true,\n      required: true\n    }\n  ]\n};\n\nexport default prototypeOptions;\n","import PagesIcon from '@material-ui/icons/Pages';\n\nconst pageOptions = {\n  singularName: 'page',\n  icon: <PagesIcon />,\n  columns: [\n    {\n      header: 'Name',\n      display: 'name'\n    },\n    {\n      header: 'Slug',\n      display: 'slug'\n    }\n  ],\n  primaryProperty: {\n    header: 'Name',\n    display: 'name'\n  },\n  editor: [\n    {\n      type: 'text',\n      label: 'Name',\n      name: 'name',\n      required: true\n    },\n    {\n      type: 'generated',\n      label: 'Slug',\n      name: 'slug',\n      value: (data: { name: string }): string => {\n        return data.name?.replace(' ', '-').toLowerCase();\n      },\n      dependsOn: ['name'],\n      required: true\n    },\n    {\n      type: 'markdown',\n      label: 'Content',\n      name: 'content',\n      required: true\n    }\n  ]\n};\n\nexport default pageOptions;\n","import stateRegister from './stateRegister';\nimport teamOptions from './options/teamOptions';\nimport recommendationOptions from './options/recommendationOptions';\nimport imageOptions from './options/imageOptions';\nimport prototypeOptions from './options/prototypeOptions';\nimport pageOptions from './options/pageOptions';\n\nstateRegister.setGlobalOptions({\n  buildValidationFromEditor: true,\n  getNextPageNumber: (json: { next: string }) => {\n    const pageRegex = /[\\w\\W]*page=([0-9]*)/;\n    if (json.next) {\n      const groups = json.next.match(pageRegex);\n      if (groups) {\n        return parseInt(groups[1]);\n      }\n      return null;\n    } else {\n      return null;\n    }\n  }\n});\nstateRegister.register('team', teamOptions);\nstateRegister.register('recommendations', recommendationOptions);\nstateRegister.register('prototypes', prototypeOptions);\nstateRegister.register('pages', pageOptions);\nstateRegister.register('images', imageOptions);\n","export const SET_TOKEN = 'SET_TOKEN';\nexport const SET_USERNAME = 'SET_USERNAME';\nexport const SET_AUTH_ERROR = 'SET_AUTH_ERROR';\nexport const SET_SIDEBAR_VISIBLE = 'SET_SIDEBAR_VISIBLE';\n","import { SET_TOKEN, SET_USERNAME, SET_AUTH_ERROR } from '../actionTypes';\nimport { generateHeaders, fetchWrapper } from '../../helpers/api';\nimport {\n  AuthActionType,\n  AuthState,\n  SetAuthErrorActionType,\n  SetTokenActionType,\n  SetUsernameActionType\n} from './types/auth';\nimport { DispatchActionFunction } from '../helpers/types/actions';\n\nconst localToken = localStorage.getItem('token');\n\nconst initialState: AuthState = {\n  token: localToken,\n  username: null,\n  error: null\n};\n\nexport function logoutAction(): DispatchActionFunction {\n  return (\n    dispatch: (action: SetTokenActionType | SetUsernameActionType) => void\n  ) => {\n    dispatch({ type: SET_TOKEN, token: null });\n    dispatch({ type: SET_USERNAME, username: null });\n  };\n}\n\nexport function validateAuthAction(): DispatchActionFunction {\n  return (\n    dispatch: (\n      action:\n        | SetTokenActionType\n        | SetUsernameActionType\n        | SetAuthErrorActionType\n    ) => void,\n    stateGetter: () => any\n  ) => {\n    const state = stateGetter();\n    fetchWrapper(`${process.env.REACT_APP_API_URL}/current-user/`, {\n      headers: generateHeaders(state.auth.token)\n    })\n      .then((json) => {\n        dispatch({ type: SET_USERNAME, username: json.user });\n      })\n      .catch((error) => {\n        dispatch({ type: SET_TOKEN, token: null });\n        dispatch({ type: SET_AUTH_ERROR, error });\n      });\n  };\n}\n\nexport function authAction(\n  username: string,\n  password: string\n): DispatchActionFunction {\n  return (\n    dispatch: (\n      action:\n        | SetAuthErrorActionType\n        | SetTokenActionType\n        | SetUsernameActionType\n    ) => void\n  ) => {\n    fetchWrapper(`${process.env.REACT_APP_API_URL}/auth/`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        username,\n        password\n      })\n    })\n      .then((json) => {\n        if (json.non_field_errors) {\n          dispatch({ type: SET_AUTH_ERROR, error: json.non_field_errors });\n        } else {\n          dispatch({ type: SET_TOKEN, token: json.token });\n          dispatch({ type: SET_USERNAME, username });\n        }\n      })\n      .catch((error) => {\n        dispatch({ type: SET_AUTH_ERROR, error });\n      });\n  };\n}\n\nexport default function reducer(\n  state = initialState,\n  action: AuthActionType\n): AuthState {\n  switch (action.type) {\n    case SET_TOKEN:\n      if (action.token) {\n        localStorage.setItem('token', action.token);\n      } else {\n        localStorage.removeItem('token');\n      }\n      return {\n        ...state,\n        token: action.token\n      };\n    case SET_USERNAME:\n      return {\n        ...state,\n        username: action.username\n      };\n    case SET_AUTH_ERROR:\n      return {\n        ...state,\n        error: action.error\n      };\n    default:\n      return state;\n  }\n}\n","import React from 'react';\nimport { Redirect, Route } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { PrivateRouteProps } from './types/components';\n\nfunction PrivateRoute({\n  token,\n  component: Component,\n  ...rest\n}: PrivateRouteProps): JSX.Element {\n  return (\n    <Route\n      {...rest}\n      render={(props) => {\n        return token ? <Component {...props} /> : <Redirect to='/login' />;\n      }}\n    />\n  );\n}\n\nconst mapStateToProps = (state: { auth: { token: string | null } }) => {\n  const token = state.auth.token;\n  return { token };\n};\n\nexport default connect(mapStateToProps)(PrivateRoute);\n","import { SET_SIDEBAR_VISIBLE } from '../actionTypes';\nimport { DispatchActionFunction } from '../helpers/types/actions';\nimport {\n  PageState,\n  SetSidebarVisibleActionType,\n  PageStateActionType\n} from './types/pageState';\n\nconst initialState: PageState = {\n  sidebarVisible: true\n};\n\nexport function setSidebarVisibleAction(\n  visible: boolean\n): DispatchActionFunction {\n  return (dispatch: (action: SetSidebarVisibleActionType) => void) => {\n    dispatch({ type: SET_SIDEBAR_VISIBLE, visible });\n  };\n}\n\nexport default function reducer(\n  state = initialState,\n  action: PageStateActionType\n): PageState {\n  switch (action.type) {\n    case SET_SIDEBAR_VISIBLE:\n      return {\n        ...state,\n        sidebarVisible: action.visible\n      };\n    default:\n      return state;\n  }\n}\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport { ListItemLinkProps } from './types/components';\n\nexport default function ListItemLink({\n  icon,\n  primary,\n  to,\n  exact\n}: ListItemLinkProps): JSX.Element {\n  return (\n    <li>\n      <ListItem\n        button\n        component={NavLink}\n        to={to}\n        activeClassName='Mui-selected'\n        exact={exact}\n      >\n        {icon ? <ListItemIcon>{icon}</ListItemIcon> : null}\n        <ListItemText primary={primary} />\n      </ListItem>\n    </li>\n  );\n}\n","import React, { useState } from 'react';\nimport { setSidebarVisibleAction } from '../redux/reducers/pageState';\nimport { logoutAction } from '../redux/reducers/auth';\nimport { connect } from 'react-redux';\nimport { AnyAction, bindActionCreators, Dispatch } from 'redux';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport clsx from 'clsx';\nimport CssBaseLine from '@material-ui/core/CssBaseline';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport Typography from '@material-ui/core/Typography';\nimport Drawer from '@material-ui/core/Drawer';\nimport Divider from '@material-ui/core/Divider';\nimport List from '@material-ui/core/List';\nimport ListItemLink from './ListItemLink';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\nimport HomeIcon from '@material-ui/icons/Home';\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Menu from '@material-ui/core/Menu';\nimport stateRegister from '../register/stateRegister';\nimport { useMediaQuery } from '@material-ui/core';\nimport { BaseProps, DrawerContentProps } from './types/components';\n\nconst drawerWidth = 240;\n\nconst links = [\n  {\n    to: '/',\n    text: 'Home',\n    icon: <HomeIcon />,\n    exact: true\n  }\n];\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex'\n  },\n  appBar: {\n    transition: theme.transitions.create(['margin', 'width'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen\n    })\n  },\n  appBarShift: {\n    width: `calc(100% - ${drawerWidth}px)`,\n    marginLeft: drawerWidth,\n    transition: theme.transitions.create(['margin', 'width'], {\n      easing: theme.transitions.easing.easeOut,\n      duration: theme.transitions.duration.enteringScreen\n    })\n  },\n  menuButton: {\n    marginRight: theme.spacing(2)\n  },\n  title: {\n    flexGrow: 1\n  },\n  hide: {\n    display: 'none'\n  },\n  drawer: {\n    width: drawerWidth,\n    flexShrink: 0\n  },\n  drawerPaper: {\n    width: drawerWidth\n  },\n  drawerHeader: {\n    display: 'flex',\n    alignItems: 'center',\n    padding: theme.spacing(0, 1),\n    // necessary for content to be below app bar\n    ...theme.mixins.toolbar,\n    justifyContent: 'flex-end'\n  },\n  content: {\n    flexGrow: 1,\n    padding: theme.spacing(3),\n    transition: theme.transitions.create('margin', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen\n    })\n  },\n  contentSmUp: {\n    marginLeft: -drawerWidth\n  },\n  contentShift: {\n    transition: theme.transitions.create('margin', {\n      easing: theme.transitions.easing.easeOut,\n      duration: theme.transitions.duration.enteringScreen\n    }),\n    marginLeft: 0\n  }\n}));\n\nfunction DrawerContent({\n  handleDrawerClose,\n  classes,\n  entityLinks\n}: DrawerContentProps): JSX.Element {\n  const theme = useTheme();\n  return (\n    <React.Fragment>\n      <div className={classes.drawerHeader}>\n        <IconButton onClick={handleDrawerClose}>\n          {theme.direction === 'ltr' ? (\n            <ChevronLeftIcon />\n          ) : (\n            <ChevronRightIcon />\n          )}\n        </IconButton>\n      </div>\n      <Divider />\n      <List>\n        {links.map((link) => (\n          <ListItemLink\n            key={link.text}\n            to={link.to}\n            primary={link.text}\n            icon={link.icon}\n            exact={link.exact}\n          />\n        ))}\n        {entityLinks.map((link) => (\n          <ListItemLink\n            key={link.text}\n            to={link.to}\n            primary={link.text}\n            icon={link.icon}\n            exact={true}\n          />\n        ))}\n      </List>\n    </React.Fragment>\n  );\n}\n\nfunction Base({\n  children,\n  token,\n  sidebarVisible,\n  setSidebarVisible,\n  logout\n}: BaseProps): JSX.Element {\n  const classes = useStyles();\n  const theme = useTheme();\n  const entityLinks = stateRegister.getLinks();\n\n  const smUp = useMediaQuery(theme.breakpoints.up('sm'));\n\n  const [anchorEl, setAnchorEl] = useState(null);\n  const open = Boolean(anchorEl);\n\n  const handleMenu = (event: { currentTarget: any }) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleCloseMenu = () => {\n    setAnchorEl(null);\n  };\n\n  const handleDrawerOpen = () => {\n    setSidebarVisible(true);\n  };\n\n  const handleDrawerClose = () => {\n    setSidebarVisible(false);\n  };\n\n  const handleLogout = () => {\n    handleCloseMenu();\n    logout();\n  };\n\n  return (\n    <div className={classes.root}>\n      <CssBaseLine />\n      {token && (\n        <React.Fragment>\n          <AppBar\n            position='fixed'\n            className={clsx(classes.appBar, {\n              [classes.appBarShift]: sidebarVisible && smUp\n            })}\n          >\n            <Toolbar>\n              <IconButton\n                color='inherit'\n                aria-label='open drawer'\n                onClick={handleDrawerOpen}\n                edge='start'\n                className={clsx(\n                  classes.menuButton,\n                  sidebarVisible && classes.hide\n                )}\n              >\n                <MenuIcon />\n              </IconButton>\n              <Typography className={classes.title} variant='h6' noWrap>\n                Content management system\n              </Typography>\n              <div>\n                <IconButton\n                  aria-label='account of current user'\n                  aria-controls='menu-appbar'\n                  aria-haspopup='true'\n                  onClick={handleMenu}\n                  color='inherit'\n                >\n                  <AccountCircleIcon />\n                </IconButton>\n                <Menu\n                  id='menu-appbar'\n                  anchorEl={anchorEl}\n                  anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\n                  keepMounted\n                  transformOrigin={{\n                    vertical: 'top',\n                    horizontal: 'right'\n                  }}\n                  open={open}\n                  onClose={handleCloseMenu}\n                >\n                  <MenuItem onClick={handleLogout}>Logout</MenuItem>\n                </Menu>\n              </div>\n            </Toolbar>\n          </AppBar>\n          <Drawer\n            className={classes.drawer}\n            variant={smUp ? 'persistent' : 'temporary'}\n            anchor='left'\n            open={sidebarVisible}\n            onClose={handleDrawerClose}\n            classes={{\n              paper: classes.drawerPaper\n            }}\n          >\n            <DrawerContent\n              classes={classes}\n              handleDrawerClose={handleDrawerClose}\n              entityLinks={entityLinks}\n            />\n          </Drawer>\n        </React.Fragment>\n      )}\n      <main\n        className={clsx(classes.content, {\n          [classes.contentShift]: sidebarVisible && smUp,\n          [classes.contentSmUp]: smUp\n        })}\n      >\n        <div className={classes.drawerHeader} />\n        {children}\n      </main>\n    </div>\n  );\n}\n\nconst mapStateToProps = (state: {\n  auth: { token: any };\n  pageState: { sidebarVisible: any };\n}) => {\n  const token = state.auth.token;\n  const sidebarVisible = state.pageState.sidebarVisible;\n  return { token, sidebarVisible };\n};\n\nconst mapDispatchToProps = (dispatch: Dispatch<AnyAction>) => {\n  const setSidebarVisible = setSidebarVisibleAction;\n  const logout = logoutAction;\n  return bindActionCreators({ setSidebarVisible, logout }, dispatch);\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Base);\n","import Header from '../components/Header';\n\nexport default function Home(): JSX.Element {\n  return (\n    <div>\n      <Header>Home</Header>\n    </div>\n  );\n}\n","export default function NotFound(): JSX.Element {\n  return (\n    <div>\n      <h1>Page not found</h1>\n    </div>\n  );\n}\n","import { useState, FormEvent } from 'react';\nimport Container from '@material-ui/core/Container';\nimport { connect } from 'react-redux';\nimport { authAction } from '../redux/reducers/auth';\nimport { AnyAction, bindActionCreators, Dispatch } from 'redux';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport { Redirect } from 'react-router-dom';\nimport { makeStyles } from '@material-ui/core';\nimport Avatar from '@material-ui/core/Avatar';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Typography from '@material-ui/core/Typography';\nimport { LoginProps } from './types/pages';\n\nconst useStyles = makeStyles((theme) => {\n  return {\n    paper: {\n      marginTop: theme.spacing(8),\n      display: 'flex',\n      flexDirection: 'column',\n      alignItems: 'center'\n    },\n    avatar: {\n      margin: theme.spacing(1),\n      backgroundColor: theme.palette.secondary.main\n    },\n    form: {\n      width: '100%',\n      marginTop: theme.spacing(1)\n    },\n    submit: {\n      margin: theme.spacing(3, 0, 2)\n    }\n  };\n});\n\nconst Login = ({ auth, token }: LoginProps) => {\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n\n  const classes = useStyles();\n\n  const onLogin = (e: FormEvent) => {\n    e.preventDefault();\n    auth(username, password);\n  };\n  return (\n    <Container>\n      {token && <Redirect to='/' />}\n      <div className={classes.paper}>\n        <Avatar className={classes.avatar}>\n          <LockOutlinedIcon />\n        </Avatar>\n        <Typography variant='h5'>Login</Typography>\n        <form onSubmit={onLogin}>\n          <TextField\n            label='Username'\n            id='username'\n            variant='outlined'\n            fullWidth\n            required\n            value={username}\n            onChange={(e) => setUsername(e.target.value)}\n            autoFocus\n            margin='normal'\n            autoComplete='username'\n          />\n          <TextField\n            label='Password'\n            id='password'\n            type='password'\n            variant='outlined'\n            fullWidth\n            required\n            margin='normal'\n            autoComplete='current-password'\n            value={password}\n            onChange={(e) => setPassword(e.target.value)}\n          />\n          <Button\n            type='submit'\n            fullWidth\n            variant='contained'\n            color='primary'\n            className={classes.submit}\n          >\n            Login\n          </Button>\n        </form>\n      </div>\n    </Container>\n  );\n};\n\nconst mapStateToProps = (state: { auth: { token: string | null } }) => {\n  const token = state.auth.token;\n  return { token };\n};\n\nconst mapDispatchToProps = (dispatch: Dispatch<AnyAction>) => {\n  const auth = authAction;\n  return bindActionCreators({ auth }, dispatch);\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Login);\n","import React, { useMemo } from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { validateAuthAction } from './redux/reducers/auth';\nimport PrivateRoute from './components/PrivateRoute';\nimport stateRegister from './register/stateRegister';\nimport { AnyAction, bindActionCreators, Dispatch } from 'redux';\nimport Base from './components/Base';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\nimport {\n  createMuiTheme,\n  responsiveFontSizes,\n  ThemeProvider\n} from '@material-ui/core/styles';\nimport CssBaseLine from '@material-ui/core/CssBaseline';\n\nimport './css/App.css';\nimport 'esembico-common/dist/styles/css/CodeHighlighter.css';\n\nimport Home from './pages/Home';\nimport NotFound from './pages/NotFound';\nimport Login from './pages/Login';\n\ninterface Props {\n  validateAuth: any;\n}\n\nfunction App({ validateAuth }: Props) {\n  const routes = stateRegister.getRoutes();\n  validateAuth();\n\n  const prefersDarkMode = useMediaQuery('(prefers-color-scheme: dark)');\n\n  const theme = useMemo(() => {\n    return responsiveFontSizes(\n      createMuiTheme({\n        palette: {\n          type: prefersDarkMode ? 'dark' : 'light'\n        }\n      })\n    );\n  }, [prefersDarkMode]);\n\n  return (\n    <ThemeProvider theme={theme}>\n      <CssBaseLine />\n      <Router>\n        <Base>\n          <Switch>\n            <Route exact={true} path='/login' component={Login} />\n            {routes.map((route) => {\n              return (\n                <PrivateRoute\n                  key={`${route.name}-list`}\n                  exact={true}\n                  path={route.listPath}\n                  component={route.listComponent}\n                />\n              );\n            })}\n            {routes.map((route) => {\n              return (\n                <PrivateRoute\n                  key={`${route.name}-edit`}\n                  exact={true}\n                  path={route.editPath}\n                  component={route.editComponent}\n                />\n              );\n            })}\n            <PrivateRoute exact={true} path='/' component={Home} />\n            <PrivateRoute path='*' component={NotFound} />\n          </Switch>\n        </Base>\n      </Router>\n    </ThemeProvider>\n  );\n}\n\nconst mapStateToProps = () => {\n  return {};\n};\n\nconst mapDispatchToProps = (dispatch: Dispatch<AnyAction>) => {\n  const validateAuth = validateAuthAction;\n  return bindActionCreators({ validateAuth }, dispatch);\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","// eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\nconst reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { combineReducers } from 'redux';\nimport auth from './auth';\nimport pageState from './pageState';\nimport stateRegister from '../../register/stateRegister';\n\nexport default combineReducers({\n  ...stateRegister.getReducers(),\n  auth,\n  pageState\n});\n","import { createStore, applyMiddleware, compose } from 'redux';\nimport rootReducer from './reducers';\nimport thunk from 'redux-thunk';\n\ndeclare global {\n  interface Window {\n    __REDUX_DEVTOOLS_EXTENSION_COMPOSE__?: typeof compose;\n  }\n}\n\nconst middlewares = [thunk];\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nexport default createStore(\n  rootReducer,\n  composeEnhancers(applyMiddleware(...middlewares))\n);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './register/initialize';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { Provider } from 'react-redux';\nimport store from './redux/store';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}