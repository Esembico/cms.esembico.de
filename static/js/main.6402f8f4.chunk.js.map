{"version":3,"sources":["redux/helpers/createReducer.js","helpers/api.js","redux/helpers/getActions.js","redux/helpers/getMappers.js","redux/helpers/getSelectors.js","helpers/caseConverter.js","helpers/getDisplayValue.js","components/Pagination.js","components/DataTable/DataTable.js","components/Header.js","components/LoadingIndicator.js","components/DataList.js","components/Responsive/Container.js","components/Responsive/Row.js","components/Responsive/Column.js","components/Input/Button.js","helpers/makeDataPage.js","components/Input/InputErrors.js","components/Input/TextField.js","components/Input/SearchableField.js","components/Input/MarkdownEditor.js","components/Input/Select.js","helpers/makeEditor.js","register/StateRegister.js","helpers/validation.js","register/options/teamOptions.js","register/options/recommendationOptions.js","register/options/imageOptions.js","register/options/prototypeOptions.js","register/options/pageOptions.js","register/initialize.js","components/SwitchButton.js","components/Sidebar.js","redux/actionTypes.js","redux/reducers/auth.js","redux/reducers/pageState.js","pages/Home.js","pages/NotFound.js","pages/Login.js","components/PrivateRoute.js","App.js","reportWebVitals.js","redux/reducers/index.js","redux/store.js","index.js"],"names":["initialState","allIds","byIds","byPage","error","status","lastPage","currentPage","selectedId","editedData","filteredData","pageLoaded","createReducer","entity","actionEntity","replace","toUpperCase","state","action","type","page","id","newData","field","value","page1","new","unshift","data","ids","newLookup","pageItems","payload","nextPage","forEach","member","push","lookup","newLastPage","Math","max","Date","now","generateHeaders","token","headers","Authorization","fetchWrapper","url","options","Promise","resolve","reject","fetch","then","res","ok","json","message","catch","getActions","endpoint","getPageAction","forceLoad","dispatch","storeGetter","store","lastLoaded","stateRegister","getSelector","getPageLastLoaded","diff","process","getOption","getNextPageNumber","results","err","fetchAction","selectItemAction","setEditedDataAction","updateEditedDataAction","commitDataAction","stateGetter","auth","method","body","JSON","stringify","setFilteredDataAction","search","deleteItemAction","getCurrentPage","getMappers","mapStateToProps","StateRegister","getSelectors","getError","getStatus","getCurrentPageData","getLastPage","getSelectedId","getSelectedData","getEditedData","selectedData","mapDispatchToProps","bindActionCreators","fetchData","selectPage","selectItem","setEditedData","updateEditedData","commitData","deleteItem","getState","getList","getById","getPage","get","map","getFilteredData","toUpperCaseFirstChar","str","charAt","slice","getDisplayValue","obj","displayDefinition","Pagination","selectedPage","onPageChange","align","useState","hasPreviousPage","setHasPreviousPage","hasNextPage","setHasNextPage","pages","setPages","useEffect","p","i","className","style","float","onClick","e","preventDefault","href","DataTable","columns","pageData","onSelect","selected","Fragment","column","header","entry","display","last","current","Header","children","LoadingIndicator","show","margin","width","height","color","size","DataList","primaryProperty","marginRight","Container","Row","Column","Button","other","makeDataPage","Editor","connect","mode","setMode","errors","setErrors","validateData","changePage","editEntry","onUpdate","Object","keys","length","InputErrors","Array","isArray","TextField","label","multiline","rows","classes","join","SearchableField","onChange","internalValue","setInternalValue","dropdownOpen","setDropdownOpen","selectedIndex","setSelectedIndex","useStore","getAction","getFilteredDataSelector","useDispatch","changeSelection","target","onKeyDown","newIndex","keyCode","onBlur","languages","vba","languageVBA","python","languagePython","renderers","code","language","getLanguageFunction","callback","image","params","MarkdownEditor","selectedTab","setSelectedTab","onTabChange","generateMarkdownPreview","markdown","source","Select","identifierProperty","option","createFieldForProperty","property","others","if","name","to","makeEditor","proprties","this","states","defaultOptions","globalOptions","mergedOptions","editor","actions","selectors","mappers","reducer","routes","entries","path","component","pageComponent","defaultValue","entityName","actionName","selectorName","reducers","word","index","toLowerCase","required","teamOptions","artist_name","recommendationOptions","icon","faFilm","faOtter","imageOptions","prototypeOptions","pageOptions","setGlobalOptions","next","groups","match","parseInt","register","SwitchButton","checked","defaultChecked","links","text","Sidebar","visible","setVisible","darkTheme","setDarkTheme","document","getElementsByTagName","classList","remove","add","faTimes","link","exact","SET_TOKEN","SET_USERNAME","SET_AUTH_ERROR","SET_SIDEBAR_VISIBLE","localStorage","getItem","username","authAction","password","non_field_errors","sidebarVisible","setSidebarVisibleAction","Home","NotFound","setUsername","setPassword","Component","rest","render","props","pageState","setSidebarVisible","getRoutes","faBars","Login","route","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","combineReducers","getReducers","setItem","middlewares","thunk","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","createStore","rootReducer","applyMiddleware","ReactDOM","getElementById"],"mappings":"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","file":"static/js/main.6402f8f4.chunk.js","sourcesContent":["const initialState = {\n  allIds: [],\n  byIds: {},\n  byPage: {},\n  error: null,\n  status: \"idle\",\n  lastPage: 1,\n  currentPage: 1,\n  selectedId: null,\n  editedData: null,\n  filteredData: [],\n  pageLoaded: {},\n};\n\nexport default function createReducer(entity) {\n  const actionEntity = entity.replace(\" \", \"_\").toUpperCase();\n  const reducer = (state = initialState, action) => {\n    switch (action.type) {\n      case `SELECT_${actionEntity}_ID`:\n        return {\n          ...state,\n          selectedId: action.selectedId,\n        };\n      case `SET_PAGE_${actionEntity}`:\n        return {\n          ...state,\n          currentPage: action.page,\n        };\n      case `SET_EDITED_DATA_${actionEntity}`:\n        const editedData = action.id === -1 ? {} : state.byIds[action.id];\n        return {\n          ...state,\n          editedData,\n        };\n      case `UPDATE_EDITED_DATA_${actionEntity}`:\n        const newData = { ...state.editedData, [action.field]: action.value };\n        return {\n          ...state,\n          editedData: newData,\n        };\n      case `UPDATE_${actionEntity}`:\n        const page1 = state.byPage[1];\n        if (action.new) {\n          page1.unshift(action.data.id);\n        }\n        return {\n          ...state,\n          byIds: {\n            ...state.byIds,\n            [action.data.id]: action.data,\n          },\n          pageLoaded: {},\n        };\n      case `FETCH_${actionEntity}_PENDING`:\n        return {\n          ...state,\n          status: \"loading\",\n        };\n      case `SET_FILTERED_DATA_${actionEntity}`:\n        return {\n          ...state,\n          filteredData: action.data,\n        };\n      case `FETCH_${actionEntity}_SUCCESS`:\n        const ids = [];\n        const newLookup = {};\n        const pageItems = [];\n        const { data, page, nextPage } = action.payload;\n        data.forEach((member) => {\n          pageItems.push(member.id);\n          ids.push(member.id);\n          newLookup[member.id] = member;\n        });\n\n        const lookup = { ...state.byIds, ...newLookup };\n\n        const newLastPage = Math.max(\n          state.lastPage,\n          nextPage || state.lastPage\n        );\n\n        return {\n          ...state,\n          allIds: ids,\n          byIds: lookup,\n          byPage: { ...state.byPage, [page]: pageItems },\n          status: \"idle\",\n          lastPage: newLastPage,\n          currentPage: page,\n          pageLoaded: {\n            ...state.pageLoaded,\n            [page]: Date.now(),\n          },\n        };\n      case `FETCH_${actionEntity}_ERROR`:\n        return {\n          ...state,\n          error: action.error,\n          status: \"idle\",\n        };\n      default:\n        return state;\n    }\n  };\n\n  return reducer;\n}\n","export function generateHeaders(token) {\n  const headers = {\n    \"Content-Type\": \"application/json\",\n  };\n  if (token) {\n    headers.Authorization = `Token ${token}`;\n  }\n\n  return headers;\n}\n\nexport function fetchWrapper(url, options) {\n  return new Promise((resolve, reject) => {\n    fetch(url, options)\n      .then((res) => {\n        if (!res.ok) {\n          res.json().then((json) => {\n            reject({ status: res.status, message: json });\n          });\n          return;\n        }\n        if (res.status === 204) {\n          resolve();\n          return;\n        }\n        res.json().then((json) => {\n          resolve(json);\n        });\n      })\n      .catch(reject);\n  });\n}\n","import stateRegister from \"../../register/StateRegister\";\nimport { generateHeaders, fetchWrapper } from \"../../helpers/api\";\n\nexport default function getActions(entity, endpoint) {\n  const actionEntity = entity.replace(\" \", \"_\").toUpperCase();\n\n  const getPageAction = (page, forceLoad) => {\n    return (dispatch, storeGetter) => {\n      const store = storeGetter();\n      const getPageLastLoaded = stateRegister.getSelector(\n        entity,\n        \"getPageLastLoaded\"\n      );\n      const lastLoaded = getPageLastLoaded(store, page);\n\n      const diff = Date.now() - lastLoaded;\n\n      if (!forceLoad && diff < 60000) {\n        dispatch({ type: `SET_PAGE_${actionEntity}`, page });\n        return;\n      }\n\n      dispatch({ type: `FETCH_${actionEntity}_PENDING` });\n      fetchWrapper(\n        `${process.env.REACT_APP_API_URL}/${endpoint}/?page=${page}`,\n        {\n          headers: generateHeaders(),\n        }\n      )\n        .then((json) => {\n          const getNextPageNumber = stateRegister.getOption(\n            entity,\n            \"getNextPageNumber\"\n          );\n          const nextPage = getNextPageNumber(json);\n          dispatch({\n            type: `FETCH_${actionEntity}_SUCCESS`,\n            payload: {\n              data: json.results,\n              page,\n              nextPage,\n            },\n          });\n          return json.results;\n        })\n        .catch((err) => {\n          dispatch({ type: `FETCH_${actionEntity}_ERROR`, error: err });\n        });\n    };\n  };\n\n  const deleteItemAction = (id) => {\n    return (dispatch, storeGetter) => {\n      const store = storeGetter();\n      const token = store.auth.token;\n      const getCurrentPage = stateRegister.getSelector(\n        entity,\n        \"getCurrentPage\"\n      );\n      fetchWrapper(`${process.env.REACT_APP_API_URL}/${endpoint}/${id}/`, {\n        method: \"DELETE\",\n        headers: generateHeaders(token),\n      })\n        .then(() => {\n          const page = getCurrentPage(store);\n          dispatch(getPageAction(page, true));\n        })\n        .catch((error) => {\n          dispatch({ type: `FETCH_${actionEntity}_ERROR`, error });\n        });\n    };\n  };\n\n  const setFilteredDataAction = (search) => {\n    return (dispatch) => {\n      fetchWrapper(\n        `${process.env.REACT_APP_API_URL}/${endpoint}/?search=${search}`,\n        {\n          headers: generateHeaders(),\n        }\n      )\n        .then((json) => {\n          dispatch({\n            type: `SET_FILTERED_DATA_${actionEntity}`,\n            data: json.results,\n          });\n        })\n        .catch((err) => {\n          dispatch({ type: `FETCH_${actionEntity}_ERROR`, error: err });\n        });\n    };\n  };\n\n  const fetchAction = () => {\n    return getPageAction(1);\n  };\n\n  const selectItemAction = (id) => {\n    return (dispatch) => {\n      dispatch({ type: `SELECT_${actionEntity}_ID`, selectedId: id });\n    };\n  };\n\n  const setEditedDataAction = (id) => {\n    return (dispatch) => {\n      dispatch({ type: `SET_EDITED_DATA_${actionEntity}`, id });\n    };\n  };\n\n  const updateEditedDataAction = (field, value) => {\n    return (dispatch) => {\n      dispatch({ type: `UPDATE_EDITED_DATA_${actionEntity}`, field, value });\n    };\n  };\n\n  const commitDataAction = (data) => {\n    return (dispatch, stateGetter) => {\n      const state = stateGetter();\n      const token = state.auth.token;\n      fetchWrapper(\n        `${process.env.REACT_APP_API_URL}/${endpoint}/${\n          data.id ? `${data.id}/` : \"\"\n        }`,\n        {\n          method: data.id ? \"PUT\" : \"POST\",\n          headers: generateHeaders(token),\n          body: JSON.stringify(data),\n        }\n      )\n        .then((json) => {\n          dispatch({\n            type: `UPDATE_${actionEntity}`,\n            data: json,\n            new: !data.id,\n          });\n        })\n        .catch((err) => {\n          dispatch({ type: `FETCH_${actionEntity}_ERROR`, error: err });\n        });\n    };\n  };\n\n  return {\n    getPageAction,\n    fetchAction,\n    selectItemAction,\n    setEditedDataAction,\n    updateEditedDataAction,\n    commitDataAction,\n    setFilteredDataAction,\n    deleteItemAction,\n  };\n}\n","import { bindActionCreators } from \"redux\";\nimport StateRegister from \"../../register/StateRegister\";\n\nexport default function getMappers(entity) {\n  const mapStateToProps = (state) => {\n    const {\n      getError,\n      getStatus,\n      getCurrentPageData,\n      getLastPage,\n      getCurrentPage,\n      getSelectedId,\n      getSelectedData,\n      getEditedData,\n    } = StateRegister.getSelectors(entity);\n    const error = getError(state);\n    const status = getStatus(state);\n    const data = getCurrentPageData(state);\n    const lastPage = getLastPage(state);\n    const currentPage = getCurrentPage(state);\n    const selectedId = getSelectedId(state);\n    const selectedData = getSelectedData(state);\n    const editedData = getEditedData(state);\n    return {\n      error,\n      status,\n      data,\n      lastPage,\n      currentPage,\n      selectedId,\n      selectedData,\n      editedData,\n    };\n  };\n\n  const mapDispatchToProps = (dispatch) => {\n    const {\n      fetchAction,\n      getPageAction,\n      selectItemAction,\n      setEditedDataAction,\n      updateEditedDataAction,\n      commitDataAction,\n      deleteItemAction,\n    } = StateRegister.getActions(entity);\n    return bindActionCreators(\n      {\n        fetchData: fetchAction,\n        selectPage: getPageAction,\n        selectItem: selectItemAction,\n        setEditedData: setEditedDataAction,\n        updateEditedData: updateEditedDataAction,\n        commitData: commitDataAction,\n        deleteItem: deleteItemAction,\n      },\n      dispatch\n    );\n  };\n\n  return { mapStateToProps, mapDispatchToProps };\n}\n","export default function getSelectors(entity) {\n  const getState = (store) => {\n    return store[entity];\n  };\n\n  const getList = (store) => {\n    return getState(store) ? getState(store).allIds : [];\n  };\n\n  const getById = (store, id) => {\n    return getState(store) ? { ...getState(store).byIds[id], id } : {};\n  };\n\n  const get = (store) => {\n    return getList(store).map((id) => getById(store, id));\n  };\n\n  const getPage = (store, page) => {\n    const pageData = getState(store) ? getState(store).byPage[page] : [];\n    return pageData || [];\n  };\n\n  const getCurrentPage = (store) => {\n    return getState(store) ? getState(store).currentPage : 1;\n  };\n\n  const getLastPage = (store) => {\n    return getState(store) ? getState(store).lastPage : 1;\n  };\n\n  const getCurrentPageData = (store) => {\n    const currentPage = getCurrentPage(store);\n    return getPage(store, currentPage).map((id) => getById(store, id));\n  };\n\n  const getStatus = (store) => {\n    return getState(store) ? getState(store).status : \"idle\";\n  };\n\n  const getError = (store) => {\n    return getState(store) ? getState(store).error : null;\n  };\n\n  const getSelectedId = (store) => {\n    return getState(store) ? getState(store).selectedId : null;\n  };\n\n  const getSelectedData = (store) => {\n    return getSelectedId(store) ? getById(store, getSelectedId(store)) : {};\n  };\n\n  const getEditedData = (store) => {\n    return getState(store) ? getState(store).editedData : null;\n  };\n\n  const getFilteredData = (store) => {\n    return getState(store) ? getState(store).filteredData : [];\n  };\n\n  const getPageLastLoaded = (store, page) => {\n    const state = getState(store);\n    if (!state) {\n      return 0;\n    }\n    return state.pageLoaded[page] ? state.pageLoaded[page] : 0;\n  };\n\n  return {\n    getState,\n    getList,\n    getById,\n    get,\n    getPage,\n    getCurrentPage,\n    getLastPage,\n    getCurrentPageData,\n    getStatus,\n    getError,\n    getSelectedId,\n    getSelectedData,\n    getEditedData,\n    getFilteredData,\n    getPageLastLoaded,\n  };\n}\n","export function toCamelCase(str) {\n  return str\n    .replace(/(?:^\\w|[A-Z]|\\b\\w)/g, function (word, index) {\n      return index === 0 ? word.toLowerCase() : word.toUpperCase();\n    })\n    .replace(/\\s+/g, \"\");\n}\n\nexport function toUpperCaseFirstChar(str) {\n  return str.charAt(0).toUpperCase() + str.slice(1);\n}\n","export default function getDisplayValue(obj, displayDefinition) {\n  if (!obj) {\n    return \"\";\n  }\n  if (typeof obj !== \"object\") {\n    return obj;\n  }\n  if (typeof displayDefinition === \"string\") {\n    return obj[displayDefinition];\n  }\n\n  if (typeof displayDefinition === \"function\") {\n    return displayDefinition(obj);\n  }\n\n  return \"\";\n}\n","import React, { useEffect, useState } from \"react\";\nimport \"../css/Pagination.css\";\n\nexport default function Pagination({\n  lastPage,\n  selectedPage,\n  onPageChange,\n  align,\n}) {\n  const [hasPreviousPage, setHasPreviousPage] = useState(false);\n  const [hasNextPage, setHasNextPage] = useState(false);\n  const [pages, setPages] = useState([]);\n\n  useEffect(() => {\n    if (selectedPage !== 1) {\n      setHasPreviousPage(true);\n    }\n    if (selectedPage !== lastPage) {\n      setHasNextPage(true);\n    }\n    const p = [];\n    for (let i = 1; i <= lastPage; i++) {\n      p.push(i);\n    }\n    setPages(p);\n  }, [lastPage, selectedPage]);\n\n  return (\n    <div className=\"pagination\" style={{ float: align || \"left\" }}>\n      {hasPreviousPage && (\n        <a\n          onClick={(e) => {\n            e.preventDefault();\n            onPageChange(selectedPage - 1);\n          }}\n          href={`#page-${selectedPage - 1}`}\n        >\n          &laquo;\n        </a>\n      )}\n      {pages.map((page) => {\n        return (\n          <a\n            onClick={(e) => {\n              e.preventDefault();\n              onPageChange(page);\n            }}\n            className={selectedPage === page ? \"active\" : \"\"}\n            key={page}\n            href={`#page-${page}`}\n          >\n            {page}\n          </a>\n        );\n      })}\n      {hasNextPage && (\n        <a\n          onClick={(e) => {\n            e.preventDefault();\n            onPageChange(selectedPage + 1);\n          }}\n          href={`#page-${selectedPage + 1}`}\n        >\n          &raquo;\n        </a>\n      )}\n    </div>\n  );\n}\n","import React from \"react\";\nimport \"../../css/DataTable.css\";\nimport getDisplayValue from \"../../helpers/getDisplayValue\";\nimport Pagination from \"../Pagination\";\n\nexport default function DataTable({\n  data,\n  columns,\n  pageData,\n  onPageChange,\n  onSelect,\n  selected,\n}) {\n  return (\n    <React.Fragment>\n      <table className=\"data-table\">\n        <thead>\n          <tr>\n            {columns.map((column) => {\n              return <th key={column.header}>{column.header}</th>;\n            })}\n          </tr>\n        </thead>\n        <tbody>\n          {data.map((entry) => {\n            return (\n              <tr\n                className={selected === entry.id ? \"active\" : \"\"}\n                onClick={() => onSelect(entry.id)}\n                key={entry.id}\n              >\n                {columns.map((column) => {\n                  return (\n                    <td key={`${column.header}-${entry.id}`}>\n                      {getDisplayValue(entry, column.display)}\n                    </td>\n                  );\n                })}\n              </tr>\n            );\n          })}\n        </tbody>\n      </table>\n      <Pagination\n        align=\"right\"\n        lastPage={pageData.last}\n        onPageChange={onPageChange}\n        selectedPage={pageData.current}\n      ></Pagination>\n    </React.Fragment>\n  );\n}\n","import React from \"react\";\n\nexport default function Header({ children }) {\n  return (\n    <React.Fragment>\n      <h1>{children}</h1>\n      <hr />\n    </React.Fragment>\n  );\n}\n","import React from \"react\";\nimport HashLoader from \"react-spinners/HashLoader\";\n\nexport default function LoadingIndicator({ show }) {\n  return (\n    <React.Fragment>\n      {show && (\n        <div style={{ margin: \"40px auto 0 auto\", width: \"0px\", height: \"40px\" }}>\n          <HashLoader color=\"white\" size={80}></HashLoader>\n        </div>\n      )}\n    </React.Fragment>\n  );\n}\n","import React from \"react\";\nimport \"../css/DataList.css\";\nimport getDisplayValue from \"../helpers/getDisplayValue\";\nimport Pagination from \"./Pagination\";\n\nexport default function DataList({\n  data,\n  primaryProperty,\n  selected,\n  onSelect,\n  onPageChange,\n  pageData,\n}) {\n  return (\n    <React.Fragment>\n      <div style={{ marginRight: \"10px\" }}>\n        <ul className=\"data-list\">\n          <li className=\"header\">{primaryProperty.header}</li>\n          {data.map((entry) => {\n            return (\n              <li\n                onClick={() => onSelect(entry.id)}\n                className={selected === entry.id ? \"entry active\" : \"entry\"}\n                key={entry.id}\n              >\n                {getDisplayValue(entry, primaryProperty.display)}\n              </li>\n            );\n          })}\n        </ul>\n        <Pagination\n          align=\"right\"\n          lastPage={pageData.last}\n          onPageChange={onPageChange}\n          selectedPage={pageData.current}\n        ></Pagination>\n      </div>\n    </React.Fragment>\n  );\n}\n","import React from \"react\";\n\nexport default function Container({ children }) {\n  return <div className=\"container\">{children}</div>;\n}\n","import React from \"react\";\n\nexport default function Row({ children }) {\n  return <div className=\"row\">{children}</div>;\n}\n","import React from \"react\";\n\nexport default function Column({ children, width }) {\n  return (\n    <div className={`col col-${width}`}>\n      {children}\n    </div>\n  );\n}\n","import React from \"react\";\n\nexport default function Button({ children, type, ...other }) {\n  return (\n    <div className=\"button-container\">\n      <button type=\"button\" className={type || \"primary\"} {...other}>\n        {children}\n      </button>\n    </div>\n  );\n}\n","import React, { useEffect, useState } from \"react\";\nimport DataTable from \"../components/DataTable/DataTable\";\nimport Header from \"../components/Header\";\nimport { connect } from \"react-redux\";\nimport LoadingIndicator from \"../components/LoadingIndicator\";\nimport DataList from \"../components/DataList\";\nimport Container from \"../components/Responsive/Container\";\nimport Row from \"../components/Responsive/Row\";\nimport Column from \"../components/Responsive/Column\";\nimport Button from \"../components/Input/Button\";\nimport StateRegister from \"../register/StateRegister\";\nimport stateRegister from \"../register/StateRegister\";\n\nexport default function makeDataPage({\n  columns,\n  primaryProperty,\n  Editor,\n  entity,\n}) {\n  const Component = ({\n    data,\n    status,\n    lastPage,\n    currentPage,\n    editedData,\n    fetchData,\n    selectPage,\n    selectItem,\n    selectedId,\n    setEditedData,\n    updateEditedData,\n    commitData,\n    deleteItem,\n  }) => {\n    const [mode, setMode] = useState(\"view\");\n    const [errors, setErrors] = useState({});\n    const validateData = stateRegister.getOption(entity, \"validateData\");\n    useEffect(() => {\n      fetchData();\n    }, [fetchData]);\n\n    useEffect(() => {\n      const errors = validateData(editedData || {});\n      setErrors(errors || {});\n    }, [editedData, validateData]);\n\n    const changePage = (page) => {\n      selectPage(page);\n    };\n\n    const editEntry = (id) => {\n      setMode(\"edit\");\n      setEditedData(id);\n    };\n\n    const saveEntry = () => {\n      if (Object.keys(errors).length === 0) {\n        commitData(editedData);\n      }\n    };\n\n    const newEntry = () => {\n      setMode(\"edit\");\n      setEditedData(-1);\n      selectItem(null);\n    };\n\n    const onDelete = () => {\n      // FIXME: Ask for confirmation before deleting.\n      deleteItem(selectedId);\n    };\n\n    return (\n      <div>\n        <Header>{StateRegister.getOption(entity, \"header\")}</Header>\n        <LoadingIndicator show={status === \"loading\"} />\n        {status !== \"loading\" && (\n          <React.Fragment>\n            <Container>\n              <Row>\n                <Button onClick={newEntry}>New</Button>\n              </Row>\n              {mode === \"view\" && (\n                <DataTable\n                  pageData={{\n                    current: currentPage,\n                    last: lastPage,\n                  }}\n                  data={data}\n                  columns={columns}\n                  onPageChange={changePage}\n                  onSelect={(id) => {\n                    editEntry(id);\n                    selectItem(id);\n                  }}\n                  selected={selectedId}\n                />\n              )}\n              {mode === \"edit\" && (\n                <Row>\n                  <Column width={25}>\n                    <DataList\n                      data={data}\n                      pageData={{\n                        current: currentPage,\n                        last: lastPage,\n                      }}\n                      primaryProperty={primaryProperty}\n                      selected={selectedId}\n                      onPageChange={changePage}\n                      onSelect={(id) => {\n                        editEntry(id);\n                        selectItem(id);\n                      }}\n                    />\n                  </Column>\n                  <Column width={75}>\n                    {Editor && (\n                      <React.Fragment>\n                        <Editor\n                          errors={errors}\n                          onUpdate={updateEditedData}\n                          data={editedData}\n                        />\n                        <Column width={100}>\n                          <Button onClick={saveEntry}>Save</Button>\n                          <Button onClick={() => setMode(\"view\")}>\n                            Cancel\n                          </Button>\n                          <Button onClick={() => onDelete()} type=\"danger\">\n                            Delete\n                          </Button>\n                        </Column>\n                      </React.Fragment>\n                    )}\n                  </Column>\n                </Row>\n              )}\n            </Container>\n          </React.Fragment>\n        )}\n      </div>\n    );\n  };\n  const { mapStateToProps, mapDispatchToProps } = StateRegister.getMappers(\n    entity\n  );\n\n  return connect(mapStateToProps, mapDispatchToProps)(Component);\n}\n","import React from \"react\";\n\nexport default function InputErrors({ errors }) {\n  return (\n    <React.Fragment>\n      {errors && (\n        <React.Fragment>\n          {Array.isArray(errors) ? (\n            <React.Fragment>\n              {errors.map((error, i) => {\n                return (\n                  <span className=\"error\" key={i}>\n                    {error}\n                  </span>\n                );\n              })}\n            </React.Fragment>\n          ) : (\n            <span className=\"error\">{errors}</span>\n          )}\n        </React.Fragment>\n      )}\n    </React.Fragment>\n  );\n}\n","import React from \"react\";\nimport InputErrors from \"./InputErrors\";\n\nexport default function TextField({\n  value,\n  label,\n  multiline,\n  rows,\n  type,\n  errors,\n  ...other\n}) {\n  const classes = [];\n  if (value) {\n    classes.push(\"has-value\");\n  }\n  if (errors) {\n    classes.push(\"has-errors\");\n  }\n  return (\n    <div className=\"form-group\">\n      {multiline && (\n        <textarea\n          className={classes.join(\" \")}\n          rows={rows || 3}\n          value={value || \"\"}\n          {...other}\n        ></textarea>\n      )}\n      {!multiline && (\n        <input\n          className={classes.join(\" \")}\n          type={type || \"text\"}\n          value={value || \"\"}\n          {...other}\n        />\n      )}\n      <label className=\"control-label\">{label}</label>\n      <i className=\"bar\"></i>\n      <InputErrors errors={errors} />\n    </div>\n  );\n}\n","import React, { useEffect, useState } from \"react\";\nimport { useDispatch, useStore } from \"react-redux\";\nimport getDisplayValue from \"../../helpers/getDisplayValue\";\nimport stateRegister from \"../../register/StateRegister\";\nimport TextField from \"./TextField\";\n\nexport default function SearchableField({\n  label,\n  entity,\n  value,\n  onChange,\n  errors,\n}) {\n  const [internalValue, setInternalValue] = useState(value);\n  const [dropdownOpen, setDropdownOpen] = useState(false);\n  const [selectedIndex, setSelectedIndex] = useState(-1);\n  const state = useStore().getState();\n  const setFilteredDataAction = stateRegister.getAction(\n    entity,\n    \"setFilteredDataAction\"\n  );\n\n  const getFilteredDataSelector = stateRegister.getSelector(\n    entity,\n    \"getFilteredData\"\n  );\n\n  const data = getFilteredDataSelector(state);\n\n  const primaryProperty = stateRegister.getOption(entity, \"primaryProperty\");\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    setInternalValue(value);\n  }, [value]);\n\n  const onInputChange = (e) => {\n    const value = e.target.value;\n    setDropdownOpen(!!value);\n    setInternalValue(value);\n    dispatch(setFilteredDataAction(value));\n    if (!value) {\n      onChange(null);\n    }\n  };\n\n  const changeSelection = (entry) => {\n    setDropdownOpen(false);\n    onChange(entry);\n  };\n\n  const onKeyDown = (e) => {\n    let newIndex = selectedIndex;\n\n    if (e.keyCode === 40) {\n      newIndex++;\n    } else if (e.keyCode === 38) {\n      newIndex--;\n    } else if (e.keyCode === 13) {\n      changeSelection(data[selectedIndex]);\n    }\n\n    if (newIndex !== selectedIndex) {\n      if (newIndex < 0) {\n        newIndex = 0;\n      } else if (newIndex >= data.length) {\n        newIndex = data.length - 1;\n      }\n      setInternalValue(data[newIndex]);\n      setSelectedIndex(newIndex);\n    }\n  };\n\n  const onBlur = () => {\n    setDropdownOpen(false);\n  };\n\n  return (\n    <React.Fragment>\n      <div className=\"searchable-container\">\n        <TextField\n          label={label}\n          value={getDisplayValue(internalValue, primaryProperty.display)}\n          onChange={onInputChange}\n          onKeyDown={onKeyDown}\n          onBlur={onBlur}\n          errors={errors}\n        />\n        {dropdownOpen && (\n          <div className=\"searchable-field-dropdown\">\n            {data.map((entry, i) => {\n              return (\n                <a\n                  onClick={(e) => {\n                    e.preventDefault();\n                    changeSelection(entry);\n                  }}\n                  className={i === selectedIndex ? \"active\" : \"\"}\n                  key={entry.id}\n                  href={`#entry-${entry.id}`}\n                >\n                  {getDisplayValue(entry, primaryProperty.display)}\n                </a>\n              );\n            })}\n          </div>\n        )}\n      </div>\n    </React.Fragment>\n  );\n}\n","import React, { useState } from \"react\";\nimport ReactMarkdown from \"react-markdown\";\nimport ReactMde from \"react-mde\";\nimport { CodeHighlighter, languageVBA, languagePython } from \"esembico-common\";\n\nimport \"react-mde/lib/styles/css/react-mde-editor.css\";\nimport \"react-mde/lib/styles/css/react-mde-toolbar.css\";\nimport \"react-mde/lib/styles/css/react-mde.css\";\nimport \"../../css/MarkdownEditor.css\";\nimport InputErrors from \"./InputErrors\";\n\nconst languages = {\n  vba: languageVBA,\n  python: languagePython,\n};\n\nconst renderers = {\n  code: ({ language, value }) => {\n    return (\n      <CodeHighlighter\n        getLanguageFunction={(language, callback) =>\n          callback(languages[language])\n        }\n        language={language}\n      >\n        {value}\n      </CodeHighlighter>\n    );\n  },\n  image: (params) => {\n    // eslint-disable-next-line jsx-a11y/alt-text\n    return <img className=\"responsive-image\" {...params}></img>;\n  },\n};\n\nexport default function MarkdownEditor({ label, value, onChange, errors }) {\n  const [selectedTab, setSelectedTab] = useState(\"write\");\n  return (\n    <div className=\"form-group\">\n      <label className={`markdown-label ${errors ? \"has-errors\" : \"\"}`}>\n        {label}\n      </label>\n      <ReactMde\n        value={value}\n        onChange={onChange}\n        selectedTab={selectedTab}\n        onTabChange={setSelectedTab}\n        generateMarkdownPreview={(markdown) => {\n          return Promise.resolve(\n            <ReactMarkdown renderers={renderers} source={markdown} />\n          );\n        }}\n      />\n      <InputErrors errors={errors} />\n    </div>\n  );\n}\n","import React from \"react\";\nimport InputErrors from \"./InputErrors\";\n\nexport default function Select({\n  label,\n  value,\n  options,\n  identifierProperty,\n  errors,\n  ...other\n}) {\n  const classes = [];\n  if (value) {\n    classes.push(\"has-value\");\n  }\n  if (errors) {\n    classes.push(\"has-errors\");\n  }\n  return (\n    <div className=\"form-group\">\n      <select className={classes.join(\" \")} value={value} {...other}>\n        <option></option>\n        {options.map((option, i) => {\n          return (\n            <option key={i} value={option.value}>\n              {option.display}\n            </option>\n          );\n        })}\n      </select>\n      <label className=\"control-label\">{label}</label>\n      <i className=\"bar\"></i>\n      <InputErrors errors={errors} />\n    </div>\n  );\n}\n","import React from \"react\";\nimport Row from \"../components/Responsive/Row\";\nimport TextField from \"../components/Input/TextField\";\nimport SearchableField from \"../components/Input/SearchableField\";\nimport MarkdownEditor from \"../components/Input/MarkdownEditor\";\nimport Select from \"../components/Input/Select\";\n\nfunction createFieldForProperty({ property, data, onUpdate, ...others }) {\n  if (property.if) {\n    if (!property.if(data)) {\n      return <React.Fragment />;\n    }\n  }\n  let label = property.label;\n  if (typeof label === \"function\") {\n    label = label(data);\n  }\n  switch (property.type) {\n    case \"select\":\n      return (\n        <Select\n          label={label}\n          value={data[property.name]}\n          onChange={(e) => onUpdate(property.name, e.target.value)}\n          options={property.options}\n          {...others}\n        />\n      );\n    case \"text\":\n      return (\n        <TextField\n          label={label}\n          value={data[property.name]}\n          multiline={property.multiline}\n          onChange={(e) => onUpdate(property.name, e.target.value)}\n          {...others}\n        />\n      );\n    case \"number\":\n      return (\n        <TextField\n          label={label}\n          value={data[property.name]}\n          multiline={property.multiline}\n          onChange={(e) => onUpdate(property.name, e.target.value || null)}\n          {...others}\n        />\n      );\n    case \"reference\":\n      return (\n        <SearchableField\n          label={label}\n          entity={property.to}\n          value={data[property.name]}\n          onChange={(value) => onUpdate(property.name, value)}\n          {...others}\n        />\n      );\n    case \"markdown\":\n      return (\n        <MarkdownEditor\n          label={label}\n          value={data[property.name]}\n          onChange={(value) => onUpdate(property.name, value)}\n          {...others}\n        />\n      );\n    default:\n      return <span>{data[property.name]}</span>;\n  }\n}\n\nexport default function makeEditor({ proprties }) {\n  const Editor = ({ data, onUpdate, errors }) => {\n    return (\n      <React.Fragment>\n        <Row>\n          {proprties.map((property) => {\n            return (\n              <React.Fragment key={property.name}>\n                {createFieldForProperty({\n                  property,\n                  data,\n                  onUpdate,\n                  errors: errors[property.name],\n                })}\n              </React.Fragment>\n            );\n          })}\n        </Row>\n      </React.Fragment>\n    );\n  };\n\n  return Editor;\n}\n","import createReducer from \"../redux/helpers/createReducer\";\nimport getActions from \"../redux/helpers/getActions\";\nimport getMappers from \"../redux/helpers/getMappers\";\nimport getSelectors from \"../redux/helpers/getSelectors\";\nimport { toCamelCase, toUpperCaseFirstChar } from \"../helpers/caseConverter\";\nimport makeDataPage from \"../helpers/makeDataPage\";\nimport makeEditor from \"../helpers/makeEditor\";\n\nclass StateRegister {\n  constructor() {\n    this.states = {};\n    this.defaultOptions = {\n      validateData: () => {},\n    };\n    this.globalOptions = {};\n  }\n\n  setGlobalOptions(options) {\n    this.globalOptions = options;\n  }\n\n  register(name, options = {}) {\n    const mergedOptions = {\n      ...this.defaultOptions,\n      ...this.globalOptions,\n      ...options,\n    };\n    let editor = options.editor;\n    if (Array.isArray(editor)) {\n      editor = makeEditor({ proprties: editor });\n    }\n    this.states[name] = {\n      ...mergedOptions,\n      actions: getActions(name, mergedOptions.endpoint || name),\n      selectors: getSelectors(name),\n      mappers: getMappers(name, mergedOptions.endpoint || name),\n      reducer: createReducer(name),\n      header: mergedOptions.header || toUpperCaseFirstChar(name),\n      editor,\n    };\n  }\n\n  getRoutes() {\n    const routes = [];\n    Object.entries(this.states).forEach(([name, entry]) => {\n      routes.push({\n        name,\n        path: `/${name}`,\n        component:\n          entry.pageComponent ||\n          makeDataPage({\n            columns: entry.columns,\n            primaryProperty: entry.primaryProperty,\n            entity: name,\n            Editor: entry.editor,\n          }),\n      });\n    });\n    return routes;\n  }\n\n  getOption(name, option, defaultValue) {\n    const value = this.states[name][option];\n    return value || defaultValue;\n  }\n\n  getActions(name) {\n    return this.states[name].actions;\n  }\n\n  getAction(entityName, actionName) {\n    return this.states[entityName].actions[actionName];\n  }\n\n  getSelectors(name) {\n    return this.states[name].selectors;\n  }\n\n  getSelector(entityName, selectorName) {\n    return this.states[entityName].selectors[selectorName];\n  }\n\n  getMappers(name) {\n    return this.states[name].mappers;\n  }\n\n  getReducer(name) {\n    return this.states[name].reducer;\n  }\n\n  getReducers() {\n    const reducers = {};\n    Object.entries(this.states).forEach(([name, entry]) => {\n      reducers[toCamelCase(name)] = entry.reducer;\n    });\n\n    return reducers;\n  }\n}\n\nconst stateRegister = new StateRegister();\n\nexport default stateRegister;\n","export function required(errors, name, data, property) {\n  if (!data[property]) {\n    if (!errors[property]) {\n      errors[property] = [];\n    }\n    errors[property].push(`${name} is required`);\n  }\n}\n","import { required } from \"../../helpers/validation\";\n\nconst teamOptions = {\n  endpoint: \"members\",\n  columns: [\n    {\n      header: \"Name\",\n      display: \"name\",\n    },\n    {\n      header: \"Artist name\",\n      display: \"artist_name\",\n    },\n    {\n      header: \"Title\",\n      display: \"titles\",\n    },\n  ],\n  primaryProperty: {\n    display: (entry) => {\n      return `${entry.name} (${entry.artist_name})`;\n    },\n    header: \"Name\",\n  },\n  editor: [\n    {\n      type: \"text\",\n      label: \"Name\",\n      name: \"name\",\n    },\n    {\n      type: \"text\",\n      label: \"Artist name\",\n      name: \"artist_name\",\n    },\n    {\n      type: \"text\",\n      label: \"Titles\",\n      name: \"titles\",\n    },\n    {\n      type: \"text\",\n      label: \"Bio\",\n      name: \"bio\",\n      multiline: true,\n    },\n    {\n      type: \"reference\",\n      label: \"Image\",\n      name: \"image\",\n      to: \"images\",\n    },\n  ],\n  validateData: (data) => {\n    const errors = {};\n\n    required(errors, \"Name\", data, \"name\");\n    required(errors, \"Artist name\", data, \"artist_name\");\n    required(errors, \"Titles\", data, \"titles\");\n    required(errors, \"Bio\", data, \"bio\");\n    required(errors, \"Image\", data, \"image\");\n\n    return errors;\n  },\n};\n\nexport default teamOptions;\n","import { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faFilm, faOtter } from \"@fortawesome/free-solid-svg-icons\";\nimport { required } from \"../../helpers/validation\";\n\nconst recommendationOptions = {\n  columns: [\n    {\n      header: \"Type\",\n      display: (entry) => {\n        switch (entry.type) {\n          case \"movie\":\n            return <FontAwesomeIcon icon={faFilm} />;\n          case \"misc\":\n            return <FontAwesomeIcon icon={faOtter} />;\n          default:\n            return entry.type;\n        }\n      },\n    },\n    {\n      header: \"Title\",\n      display: \"title\",\n    },\n    {\n      header: \"Description\",\n      display: \"description\",\n    },\n  ],\n  primaryProperty: {\n    header: \"Title\",\n    display: \"title\",\n  },\n  editor: [\n    {\n      type: \"select\",\n      label: \"Type\",\n      name: \"type\",\n      options: [\n        { value: \"misc\", display: \"Misc\" },\n        { value: \"movie\", display: \"Movie\" },\n      ],\n    },\n    {\n      type: \"text\",\n      label: \"Url\",\n      name: \"url\",\n    },\n    {\n      type: \"text\",\n      label: \"Title\",\n      name: \"title\",\n    },\n    {\n      type: \"reference\",\n      label: \"Image\",\n      name: \"image\",\n      to: \"images\",\n    },\n    {\n      type: \"text\",\n      label: \"Description\",\n      name: \"description\",\n      if: (data) => {\n        return data.type === \"misc\";\n      },\n    },\n    {\n      type: \"text\",\n      label: (data) => {\n        if (data.type === \"movie\") {\n          return \"FSK Rating\";\n        }\n      },\n      name: \"field1\",\n      if: (data) => {\n        return data.type === \"movie\";\n      },\n    },\n    {\n      type: \"text\",\n      label: (data) => {\n        if (data.type === \"movie\") {\n          return \"Release year\";\n        }\n      },\n      name: \"field2\",\n      if: (data) => {\n        return data.type === \"movie\";\n      },\n    },\n    {\n      type: \"text\",\n      label: \"Field3\",\n      name: \"field3\",\n      if: () => false,\n    },\n    {\n      type: \"text\",\n      label: \"Field4\",\n      name: \"field4\",\n      if: () => false,\n    },\n    {\n      type: \"text\",\n      label: \"Field5\",\n      name: \"field5\",\n      if: () => false,\n    },\n  ],\n  validateData: (data) => {\n    const errors = {};\n    required(errors, \"Type\", data, \"type\");\n    required(errors, \"Url\", data, \"url\");\n    required(errors, \"Title\", data, \"title\");\n    required(errors, \"Image\", data, \"image\");\n    if (data.type === \"misc\") {\n      required(errors, \"Description\", data, \"description\");\n    } else if (data.type === \"movie\") {\n      required(errors, \"FSK Rating\", data, \"field1\");\n      required(errors, \"Release year\", data, \"field2\");\n    }\n    return errors;\n  },\n};\n\nexport default recommendationOptions;\n","import { required } from \"../../helpers/validation\";\n\nconst imageOptions = {\n  columns: [\n    {\n      header: \"Url\",\n      display: \"url\",\n    },\n    {\n      header: \"Alternate text\",\n      display: \"alt\",\n    },\n    {\n      header: \"Dimension\",\n      display: (entry) => {\n        return `${entry.width || \"auto\"} x ${entry.height || \"auto\"}`;\n      },\n    },\n  ],\n  primaryProperty: {\n    header: \"Url\",\n    display: \"url\",\n  },\n  editor: [\n    {\n      type: \"text\",\n      label: \"Url\",\n      name: \"url\",\n    },\n    {\n      type: \"text\",\n      label: \"Alt\",\n      name: \"alt\",\n    },\n    {\n      type: \"number\",\n      label: \"Width\",\n      name: \"width\",\n    },\n    {\n      type: \"number\",\n      label: \"Height\",\n      name: \"height\",\n    },\n  ],\n  validateData: (data) => {\n    const errors = {};\n\n    required(errors, \"Url\", data, \"url\");\n    required(errors, \"Alt\", data, \"alt\");\n\n    return errors;\n  },\n};\n\nexport default imageOptions;\n","import { required } from \"../../helpers/validation\";\n\nconst prototypeOptions = {\n  columns: [\n    {\n      header: \"Title\",\n      display: \"title\",\n    },\n    {\n      header: \"Subtitle\",\n      display: \"subtitle\",\n    },\n  ],\n  primaryProperty: {\n    header: \"Title\",\n    display: \"title\",\n  },\n  editor: [\n    {\n      type: \"text\",\n      label: \"Title\",\n      name: \"title\",\n    },\n    {\n      type: \"text\",\n      label: \"Subtitle\",\n      name: \"subtitle\",\n    },\n    {\n      type: \"text\",\n      label: \"Url\",\n      name: \"url\",\n    },\n    {\n      type: \"reference\",\n      label: \"Image\",\n      name: \"image\",\n      to: \"images\",\n    },\n    {\n      type: \"text\",\n      label: \"Challenge\",\n      name: \"challenge\",\n      multiline: true,\n    },\n    {\n      type: \"text\",\n      label: \"Solution\",\n      name: \"solution\",\n      multiline: true,\n    },\n    {\n      type: \"text\",\n      label: \"Rough details\",\n      name: \"rough_details\",\n      multiline: true,\n    },\n  ],\n  validateData: (data) => {\n    const errors = {};\n\n    required(errors, \"Title\", data, \"title\");\n    required(errors, \"Subtitle\", data, \"subtitle\");\n    required(errors, \"Url\", data, \"url\");\n    required(errors, \"Image\", data, \"image\");\n    required(errors, \"Challenge\", data, \"challenge\");\n    required(errors, \"Solution\", data, \"solution\");\n    required(errors, \"Rough details\", data, \"rough_details\");\n\n    return errors;\n  },\n};\n\nexport default prototypeOptions;\n","import { required } from \"../../helpers/validation\";\n\nconst pageOptions = {\n  columns: [\n    {\n      header: \"Name\",\n      display: \"name\",\n    },\n    {\n      header: \"Slug\",\n      display: \"slug\",\n    },\n  ],\n  primaryProperty: {\n    header: \"Name\",\n    display: \"name\",\n  },\n  editor: [\n    {\n      type: \"text\",\n      label: \"Name\",\n      name: \"name\",\n    },\n    {\n      type: \"text\",\n      label: \"Slug\",\n      name: \"slug\",\n    },\n    {\n      type: \"markdown\",\n      label: \"Content\",\n      name: \"content\",\n    },\n  ],\n  validateData: (data) => {\n    const errors = {};\n    required(errors, \"Name\", data, \"name\");\n    required(errors, \"Slug\", data, \"slug\");\n    required(errors, \"Content\", data, \"content\");\n    return errors;\n  },\n};\n\nexport default pageOptions;\n","import StateRegister from \"./StateRegister\";\nimport teamOptions from \"./options/teamOptions\";\nimport recommendationOptions from \"./options/recommendationOptions\";\nimport imageOptions from \"./options/imageOptions\";\nimport prototypeOptions from \"./options/prototypeOptions\";\nimport pageOptions from \"./options/pageOptions\";\n\nStateRegister.setGlobalOptions({\n  getNextPageNumber: (json) => {\n    const pageRegex = /[\\w\\W]*page=([0-9]*)/;\n    if (json.next) {\n      const groups = json.next.match(pageRegex);\n      return parseInt(groups[1]);\n    } else {\n      return null;\n    }\n  },\n});\nStateRegister.register(\"team\", teamOptions);\nStateRegister.register(\"recommendations\", recommendationOptions);\nStateRegister.register(\"images\", imageOptions);\nStateRegister.register(\"prototypes\", prototypeOptions);\nStateRegister.register(\"pages\", pageOptions);\n","import React from \"react\";\nimport \"../css/SwitchButton.css\"\n\nexport default function SwitchButton({ label, checked, onClick }) {\n  return (\n    <div>\n      <label className=\"switch\">\n        <input defaultChecked={checked} type=\"checkbox\" onClick={(e) => onClick(e)} />\n        <span className=\"slider\" />\n      </label>\n      <span className=\"switch-label\">{label}</span>\n    </div>\n  );\n}\n","import React, { useEffect, useState } from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport SwitchButton from \"./SwitchButton\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faTimes } from \"@fortawesome/free-solid-svg-icons\";\n\nimport \"../css/Sidebar.css\";\n\nconst links = [\n  {\n    to: \"/\",\n    text: \"Home\",\n  },\n  {\n    to: \"/team\",\n    text: \"Team\",\n  },\n  {\n    to: \"/prototypes\",\n    text: \"Prototypes\",\n  },\n  {\n    to: \"/recommendations\",\n    text: \"Recommendations\",\n  },\n  {\n    to: \"/pages\",\n    text: \"Pages\",\n  },\n  {\n    to: \"/images\",\n    text: \"Images\",\n  },\n];\n\nexport default function Sidebar({ visible, setVisible }) {\n  const [darkTheme, setDarkTheme] = useState(true);\n  useEffect(() => {\n    const body = document.getElementsByTagName(\"body\")[0];\n    if (darkTheme) {\n      body.classList.remove(\"light\");\n      body.classList.add(\"dark\");\n    } else {\n      body.classList.remove(\"dark\");\n      body.classList.add(\"light\");\n    }\n  }, [darkTheme]);\n  const closeSidebar = (e) => {\n    e.preventDefault();\n    setVisible(false);\n  };\n  return (\n    <div className={`sidenav ${visible ? \"show\" : \"\"}`}>\n      <div className=\"close-sidebar\">\n        <a href=\"#close-sidebar\" onClick={closeSidebar}>\n          <FontAwesomeIcon icon={faTimes} />\n        </a>\n      </div>\n      {links.map((link) => {\n        return (\n          <NavLink\n            className=\"nav-link\"\n            key={link.text}\n            exact={true}\n            to={link.to}\n          >\n            {link.text}\n          </NavLink>\n        );\n      })}\n      <div className=\"theme-toggle\">\n        <SwitchButton\n          checked={darkTheme}\n          onClick={(e) => setDarkTheme(e.target.checked)}\n          label=\"Theme\"\n        />\n      </div>\n    </div>\n  );\n}\n","export const SET_TOKEN = \"SET_TOKEN\";\nexport const SET_USERNAME = \"SET_USERNAME\";\nexport const SET_AUTH_ERROR = \"SET_AUTH_ERROR\";\nexport const SET_SIDEBAR_VISIBLE = \"SET_SIDEBAR_VISIBLE\";\n","import { SET_TOKEN, SET_USERNAME, SET_AUTH_ERROR } from \"../actionTypes\";\nimport { generateHeaders, fetchWrapper } from \"../../helpers/api\";\n\nconst localToken = localStorage.getItem(\"token\");\n\nconst initialState = {\n  token: localToken,\n  username: null,\n};\n\nexport function validateAuthAction() {\n  return (dispatch, stateGetter) => {\n    const state = stateGetter();\n    fetchWrapper(`${process.env.REACT_APP_API_URL}/current-user/`, {\n      headers: generateHeaders(state.auth.token),\n    })\n      .then((json) => {\n        dispatch({ type: SET_USERNAME, username: json.username });\n      })\n      .catch((error) => {\n        dispatch({ type: SET_TOKEN, token: null });\n        dispatch({ type: SET_AUTH_ERROR, error });\n      });\n  };\n}\n\nexport function authAction(username, password) {\n  return (dispatch) => {\n    fetchWrapper(`${process.env.REACT_APP_API_URL}/auth/`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        username,\n        password,\n      }),\n    })\n      .then((json) => {\n        if (json.non_field_errors) {\n          dispatch({ type: SET_AUTH_ERROR, error: json.non_field_errors });\n        } else {\n          dispatch({ type: SET_TOKEN, token: json.token });\n          dispatch({ type: SET_USERNAME, username });\n        }\n      })\n      .catch((error) => {\n        dispatch({ type: SET_AUTH_ERROR, error });\n      });\n  };\n}\n\nexport default function reducer(state = initialState, action) {\n  switch (action.type) {\n    case SET_TOKEN:\n      localStorage.setItem(\"token\", action.token);\n      return {\n        ...state,\n        token: action.token,\n      };\n    case SET_USERNAME:\n      return {\n        ...state,\n        username: action.username,\n      };\n    case SET_AUTH_ERROR:\n      return {\n        ...state,\n        error: action.error,\n      };\n    default:\n      return state;\n  }\n}\n","import { SET_SIDEBAR_VISIBLE } from \"../actionTypes\";\n\nconst initialState = {\n  sidebarVisible: false,\n};\n\nexport function setSidebarVisibleAction(visible) {\n  return (dispatch) => {\n    dispatch({ type: SET_SIDEBAR_VISIBLE, visible });\n  };\n}\n\nexport default function reducer(state = initialState, action) {\n  switch (action.type) {\n    case SET_SIDEBAR_VISIBLE:\n      return {\n        ...state,\n        sidebarVisible: action.visible,\n      };\n    default:\n      return state;\n  }\n}\n","import React from \"react\";\nimport Header from \"../components/Header\";\n\nexport default function Home() {\n  return (\n    <div>\n      <Header>Home</Header>\n    </div>\n  );\n}\n","import React from 'react'\n\nexport default function NotFound() {\n  return (\n    <div>\n      <h1>Page not found</h1>\n    </div>\n  )\n}\n","import React, { useState } from \"react\";\nimport Container from \"../components/Responsive/Container\";\nimport { connect } from \"react-redux\";\nimport { authAction } from \"../redux/reducers/auth\";\nimport { bindActionCreators } from \"redux\";\nimport TextField from \"../components/Input/TextField\";\nimport Button from \"../components/Input/Button\";\nimport { Redirect } from \"react-router-dom\";\n\nconst Login = ({ auth, token }) => {\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n\n  const login = () => {\n    auth(username, password);\n  };\n  return (\n    <Container>\n      {token && <Redirect to=\"/\" />}\n      <TextField\n        label=\"Username\"\n        value={username}\n        onChange={(e) => setUsername(e.target.value)}\n      />\n      <TextField\n        label=\"Password\"\n        type=\"password\"\n        value={password}\n        onChange={(e) => setPassword(e.target.value)}\n      />\n      <Button\n        onClick={(e) => {\n          e.preventDefault();\n          login();\n        }}\n      >\n        Login\n      </Button>\n    </Container>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  const token = state.auth.token;\n  return { token };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  const auth = authAction;\n  return bindActionCreators({ auth }, dispatch);\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Login);\n","import React from \"react\";\nimport { Redirect, Route } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\n\nfunction PrivateRoute({ token, component: Component, ...rest }) {\n  return (\n    <Route\n      {...rest}\n      render={(props) => {\n        return token ? <Component {...props} /> : <Redirect to=\"/login\" />;\n      }}\n    />\n  );\n}\n\nconst mapStateToProps = (state) => {\n  const token = state.auth.token;\n  return { token };\n};\n\nexport default connect(mapStateToProps)(PrivateRoute);\n","import React from \"react\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport Sidebar from \"./components/Sidebar\";\nimport { connect, useDispatch } from \"react-redux\";\nimport { validateAuthAction } from \"./redux/reducers/auth\";\nimport { setSidebarVisibleAction } from \"./redux/reducers/pageState\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faBars } from \"@fortawesome/free-solid-svg-icons\";\n\nimport \"./css/App.css\";\nimport \"./css/Input.css\";\nimport \"esembico-common/dist/styles/css/CodeHighlighter.css\";\n\nimport Home from \"./pages/Home\";\nimport NotFound from \"./pages/NotFound\";\nimport Login from \"./pages/Login\";\nimport PrivateRoute from \"./components/PrivateRoute\";\nimport stateRegister from \"./register/StateRegister\";\nimport { bindActionCreators } from \"redux\";\n\nfunction App({ token, sidebarVisible, setSidebarVisible }) {\n  const routes = stateRegister.getRoutes();\n  const dispatch = useDispatch();\n  dispatch(validateAuthAction());\n  const showSidebar = (e) => {\n    e.preventDefault();\n    setSidebarVisible(true);\n  };\n  return (\n    <Router>\n      {token && (\n        <React.Fragment>\n          <Sidebar visible={sidebarVisible} setVisible={setSidebarVisible} />\n        </React.Fragment>\n      )}\n      <div className={token ? \"main\" : \"\"}>\n        <div className=\"show-sidebar\">\n          <a onClick={showSidebar} href=\"#show-sidebar\">\n            <FontAwesomeIcon icon={faBars} />\n          </a>\n        </div>\n        <Switch>\n          <Route exact={true} path=\"/login\" component={Login} />\n          {routes.map((route) => {\n            return (\n              <PrivateRoute\n                key={route.name}\n                exact={true}\n                path={route.path}\n                component={route.component}\n              />\n            );\n          })}\n          <PrivateRoute exact={true} path=\"/\" component={Home} />\n          <PrivateRoute path=\"*\" component={NotFound} />\n        </Switch>\n      </div>\n    </Router>\n  );\n}\n\nconst mapStateToProps = (state) => {\n  const token = state.auth.token;\n  const sidebarVisible = state.pageState.sidebarVisible;\n  return { token, sidebarVisible };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  const setSidebarVisible = setSidebarVisibleAction;\n  return bindActionCreators({ setSidebarVisible }, dispatch);\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { combineReducers } from \"redux\";\nimport auth from \"./auth\";\nimport pageState from \"./pageState\";\nimport StateRegister from \"../../register/StateRegister\";\n\nexport default combineReducers({\n  ...StateRegister.getReducers(),\n  auth,\n  pageState,\n});\n","import { createStore, applyMiddleware, compose } from \"redux\";\nimport rootReducer from \"./reducers\";\nimport thunk from \"redux-thunk\";\n\nconst middlewares = [thunk];\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nexport default createStore(\n  rootReducer,\n  composeEnhancers(applyMiddleware(...middlewares))\n);\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./register/initialize\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { Provider } from \"react-redux\";\nimport store from \"./redux/store\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}